# This program doesn't have any errors
# This program tests basic language features

ink sum (num a, num b, real c, real d) -> real {
    return a + b + c + d
}

ink declarator() -> void
{
    num a = 3
    real b = 23.48
    bool c = false
    bool d = true

    num[10] arr1
    real[4] arr2 = {1.5, 2.5, 3.5, 4.5}

    num[32, 32] arr3
    num[3, 3] arr4 = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}}


    num[10] abcd
    num[10, 10] asadsda
    real[10, 10, 10] arr5

    return void
}

ink conditioner() -> bool {
    num a, b, c
    real d, e, f
    bool g, h, i

    $ ((a < b) == true) ->
    {
        a = b * 8 - 9.34
    }
    $$ (g == false) -> {
        e = 23 / 14 - c * i
    }
    -> {
        f = 23.4
    }

    $ (g == h and d <= e) ->
    {
        a++
    }
    $$ (i == h or c > b) ->
    {
        b--
    }
    ->
    {
        $ (a == b) ->
        {
            c = 56
        }
        $$ (c == d) ->
        {
            return true
        }
    }

    $ (a != b) -> {
        c = 1
    } $$ (c == d) -> {
        d = 2
    } -> {
        e = 3
    }

    return d > e
}

ink looper(num a,   real b, bool c) -> num {
    num i = 0

    spool(i = 0; i < 10; i++)
    {
        a = a + 1

        $ (a == 8) -> {
            break
        }
    }

    i = 0

    spool (i < 10) {    # testing while equivalent
        b = b * c
        i++
    }

    spool (i = 0; i < 10; i++) {
        num j

        $ (i == 5) -> {
            continue
        }

        spool (j = 0; j < 100; j++) {
            b = b * c
            c = 3 * b - 1
        }
    }

    return 9 + 4.5 - a
}

ink scoper(num a, num b, real c, real d, bool e) -> real {
    num i, p, q, r

    spool (i = 0; i < 10; i++) {
        num p, q, r
        p = c
        q = p * 23 - e
        r = q -     1 * b
    }

    p = 9

    spool   (i = 0; i < 10; i++) {
        num p, q, r
        p = 2
        q = p * 23 - 4
        r = p / q + 5
    }

    return 1
}

ink array_operations() -> void {
    num[100] a
    real[20] b

    num[10,10] c

    spool (num i = 1; i < 10; i++)
    {
        a[i] = i * 2 + 3
        b[i] = i / 8.0 + 0.3 + a[i]
        c[i, i] = a[i] * b[i] + c[i, i]
    }

    return void
}

ink main()->void {
    #* This is
    a test for
    multiline comments *#

    num __a, _a238
    real _a, _23sdah, hello, h8756
    bool main, _384, a__b

    __a = 3 + 4 * (sum(3, 4, 5.6, 7.8) - 2)

    declarator()
    conditioner()
    looper(__a, _a, main)
    scoper(_a238, __a, _23sdah, _a, a__b)
    array_operations()

    return void
}