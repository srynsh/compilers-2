keyword: ink
ID: func
punctuation: (
punctuation: )
operator: ->
keyword: void
punctuation: {
keyword: num
punctuation: [
constant: 10
punctuation: ]
ID: a
keyword: real
punctuation: [
constant: 10
punctuation: ]
ID: b
keyword: num
punctuation: [
constant: 5
punctuation: ]
ID: arr
operator: =
punctuation: {
constant: 2
punctuation: ,
constant: 4
punctuation: ,
constant: 4
punctuation: ,
constant: 0
punctuation: ,
constant: 0
punctuation: }
keyword: spool
punctuation: (
keyword: num
ID: i
operator: =
constant: 1
punctuation: ;
ID: i
relational_operator: <=
constant: 10
punctuation: ;
ID: i
operator: ++
punctuation: )
punctuation: {
ID: a
access_operator: .
ID: append
punctuation: (
ID: i
operator: *
constant: 2
operator: +
constant: 3
punctuation: )
ID: b
access_operator: .
ID: append
punctuation: (
ID: i
operator: /
constant: 8.0
operator: +
constant: 0.3
punctuation: )
punctuation: }
keyword: return
keyword: void
punctuation: }
keyword: ink
ID: add_img_to_vid
punctuation: (
keyword: num
ID: f
punctuation: ,
keyword: img
ID: i
punctuation: ,
keyword: vid
ID: v
punctuation: ,
keyword: real
ID: t
punctuation: )
operator: ->
keyword: void
punctuation: {
keyword: spool
punctuation: (
keyword: num
ID: k
operator: =
constant: 0
punctuation: ;
ID: k
relational_operator: <
ID: f
operator: *
ID: t
punctuation: ;
ID: k
operator: ++
punctuation: )
punctuation: {
ID: v
access_operator: .
ID: append
punctuation: (
ID: i
punctuation: )
punctuation: }
keyword: return
keyword: void
punctuation: }
keyword: ink
ID: three_img_reel
punctuation: (
keyword: num
ID: h
punctuation: ,
keyword: num
ID: w
punctuation: ,
keyword: num
ID: f
punctuation: ,
keyword: img
ID: i1
punctuation: ,
keyword: real
ID: t1
punctuation: ,
keyword: img
ID: i2
punctuation: ,
keyword: real
ID: t2
punctuation: ,
keyword: img
ID: i3
punctuation: ,
keyword: real
ID: t3
punctuation: )
operator: ->
keyword: vid
punctuation: {
keyword: vid
ID: v
relational_operator: <
constant: 40
punctuation: ,
constant: 40
punctuation: ,
constant: 30
relational_operator: >
ID: add_img_to_vid
punctuation: (
constant: 30
punctuation: ,
ID: i1
punctuation: ,
ID: v
punctuation: ,
ID: t1
punctuation: )
ID: add_img_to_vid
punctuation: (
constant: 30
punctuation: ,
ID: i2
punctuation: ,
ID: v
punctuation: ,
ID: t2
punctuation: )
ID: add_img_to_vid
punctuation: (
constant: 30
punctuation: ,
ID: i3
punctuation: ,
ID: v
punctuation: ,
ID: t3
punctuation: )
keyword: return
ID: v
punctuation: }
keyword: ink
ID: set_std_frame_rate
punctuation: (
keyword: vid
ID: v
punctuation: )
operator: ->
keyword: vid
punctuation: {
keyword: vid
ID: ret_v
relational_operator: <
constant: 40
punctuation: ,
constant: 40
punctuation: ,
constant: 30
relational_operator: >
keyword: spool
punctuation: (
keyword: num
ID: i
operator: =
constant: 0
punctuation: ;
ID: i
relational_operator: <
ID: v
access_operator: .
ID: len
punctuation: (
punctuation: )
punctuation: ;
ID: i
operator: ++
punctuation: )
punctuation: {
ID: ret_v
access_operator: .
ID: append
punctuation: (
ID: v
punctuation: [
ID: i
punctuation: ]
punctuation: )
punctuation: }
keyword: return
ID: ret_v
punctuation: }
keyword: ink
ID: main
punctuation: (
punctuation: )
operator: ->
keyword: void
punctuation: {
keyword: vid
ID: v1
relational_operator: <
constant: 40
punctuation: ,
constant: 40
punctuation: ,
constant: 30
relational_operator: >
keyword: vid
ID: v2
relational_operator: <
constant: 40
punctuation: ,
constant: 40
punctuation: ,
constant: 30
relational_operator: >
keyword: gray_vid
ID: v3
relational_operator: <
constant: 40
punctuation: ,
constant: 40
punctuation: ,
constant: 60
relational_operator: >
keyword: img
ID: i1
relational_operator: <
path: './i1.bmp'
relational_operator: >
keyword: img
ID: i2
relational_operator: <
path: './i2.bmp'
relational_operator: >
keyword: img
ID: i3
relational_operator: <
path: './i3.bmp'
relational_operator: >
keyword: gray_img
ID: i4
relational_operator: <
path: './i4.bmp'
relational_operator: >
keyword: gray_img
ID: i5
relational_operator: <
path: './i5.bmp'
relational_operator: >
keyword: gray_img
ID: i6
relat