Terminals which are not used

   CONTINUE
   BREAK
   SHORT_IF
   LONG_IF


Grammar

    0 $accept: program $end

    1 program: function new_lines program
    2        | function optional_new_lines

    3 func_body: '{' stmt_list '}'
    4          | '{' new_lines stmt_list '}'

    5 new_lines: new_lines NEWLINE
    6          | NEWLINE

    7 optional_new_lines: /* empty */
    8                   | new_lines

    9 function: INK ID '(' par_list ')' ARROW RET_TYPE func_body
   10         | INK ID '(' ')' ARROW RET_TYPE func_body
   11         | INK ID '(' par_list ')' ARROW RET_TYPE new_lines func_body
   12         | INK ID '(' ')' ARROW RET_TYPE new_lines func_body

   13 RET_TYPE: datatype
   14         | VOID

   15 par_list: par_list ',' par
   16         | par

   17 par: datatype ID

   18 datatype: IMG
   19         | GRAY_IMG
   20         | VID
   21         | GRAY_VID
   22         | NUM
   23         | REAL
   24         | BOOL

   25 stmt_list: stmt
   26          | stmt_list stmt

   27 stmt: decl_stmt
   28     | conditional_stmt
   29     | call_stmt new_lines
   30     | in_built_call_stmt new_lines
   31     | expr_stmt
   32     | return_stmt
   33     | loop_stmt new_lines
   34     | '{' new_lines stmt_list '}' new_lines
   35     | '{' stmt_list '}' new_lines
   36     | '{' new_lines '}' new_lines
   37     | '{' '}' new_lines

   38 optional_expr_pred: expr_pred
   39                   | /* empty */

   40 optional_num_data_decl: numeric_data_decl
   41                       | /* empty */

   42 loop_stmt: LOOP optional_new_lines '(' optional_expr_pred ')' optional_new_lines func_body
   43          | LOOP optional_new_lines '(' optional_num_data_decl ';' optional_expr_pred ';' optional_expr_pred ')' optional_new_lines func_body

   44 if_block: IF optional_new_lines '(' expr_pred ')' optional_new_lines ARROW optional_new_lines func_body

   45 else: ARROW optional_new_lines func_body

   46 else_if_block_list: else_if_block_list optional_new_lines ELSE_IF optional_new_lines '(' expr_pred ')' optional_new_lines ARROW optional_new_lines func_body
   47                   | ELSE_IF optional_new_lines '(' expr_pred ')' optional_new_lines ARROW optional_new_lines func_body

   48 conditional_stmt: if_block optional_new_lines else_if_block_list optional_new_lines else new_lines
   49                 | if_block new_lines
   50                 | if_block optional_new_lines else_if_block_list new_lines
   51                 | if_block optional_new_lines else new_lines

   52 numeric_data_decl: num_decl
   53                  | real_decl
   54                  | bool_decl

   55 empty_return: /* empty */

   56 return_stmt: RETURN expr_pred empty_return new_lines
   57            | RETURN VOID empty_return new_lines

   58 decl_stmt: img_decl
   59          | gray_img_decl
   60          | vid_decl
   61          | gray_vid_decl
   62          | num_decl new_lines
   63          | bool_decl new_lines
   64          | real_decl new_lines
   65          | num_array_decl
   66          | real_array_decl

   67 img_decl: IMG ID '<' NUM_LIT ',' NUM_LIT '>' new_lines
   68         | IMG ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines
   69         | IMG ID '<' PATH '>' new_lines
   70         | IMG ID '=' expr_pred new_lines

   71 gray_img_decl: GRAY_IMG ID '<' NUM_LIT ',' NUM_LIT '>' new_lines
   72              | GRAY_IMG ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines
   73              | GRAY_IMG ID '<' PATH '>' new_lines
   74              | GRAY_IMG ID '=' expr_pred new_lines

   75 vid_decl: VID ID '<' NUM_LIT ',' NUM_LIT '>' new_lines
   76         | VID ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines

   77 gray_vid_decl: GRAY_VID ID '<' NUM_LIT ',' NUM_LIT '>' new_lines
   78              | GRAY_VID ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines

   79 num_decl: NUM ID
   80         | NUM ID '=' expr_pred

   81 bool_decl: BOOL ID
   82          | BOOL ID '=' expr_pred

   83 real_decl: REAL ID
   84          | REAL ID '=' expr_pred

   85 num_array_decl: NUM array_element ID new_lines
   86               | NUM array_element ID '=' ID new_lines
   87               | NUM array_element ID '=' brak_pred new_lines

   88 real_array_decl: REAL array_element ID new_lines
   89                | REAL array_element ID '=' ID new_lines
   90                | REAL array_element ID '=' brak_pred new_lines

   91 brak_pred: '{' brak_pred_list '}'
   92          | '{' lit_list '}'

   93 brak_pred_list: brak_pred_list ',' brak_pred
   94               | brak_pred

   95 lit_list: lit_list ',' lit
   96         | lit

   97 lit: NUM_LIT
   98    | REAL_LIT
   99    | BOOL_LIT

  100 call_stmt: ID '(' arg_list ')'
  101          | ID '(' ')'

  102 arg_list: arg_list ',' expr_pred
  103         | expr_pred

  104 in_built_call_stmt: ID DOT_OP ID '(' arg_list ')'
  105                   | ID DOT_OP ID '(' ')'
  106                   | in_built_call_stmt DOT_OP ID '(' arg_list ')'
  107                   | in_built_call_stmt DOT_OP ID '(' ')'

  108 expr_pred: ID
  109          | NUM_LIT
  110          | REAL_LIT
  111          | BOOL_LIT
  112          | expr_pred REL_OP expr_pred
  113          | expr_pred LOG_OP expr_pred
  114          | '(' expr_pred ')'
  115          | NEG_OP expr_pred
  116          | call_stmt
  117          | in_built_call_stmt
  118          | ID array_element
  119          | expr_pred BINARY_OP expr_pred
  120          | expr_pred UNARY_OP
  121          | INV_OP expr_pred

  122 expr_stmt: ID '=' expr_pred new_lines
  123          | ID array_element '=' expr_pred new_lines

  124 array_element: '[' expr_pred ']'
  125              | '[' expr_pred ',' expr_pred ']'
  126              | '[' expr_pred ',' expr_pred ',' expr_pred ']'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 9 10 11 12 42 43 44 46 47 100 101 104 105 106 107 114
')' (41) 9 10 11 12 42 43 44 46 47 100 101 104 105 106 107 114
',' (44) 15 67 68 71 72 75 76 77 78 93 95 102 125 126
';' (59) 43
'<' (60) 67 68 69 71 72 73 75 76 77 78
'=' (61) 70 74 80 82 84 86 87 89 90 122 123
'>' (62) 67 68 69 71 72 73 75 76 77 78
'[' (91) 124 125 126
']' (93) 124 125 126
'{' (123) 3 4 34 35 36 37 91 92
'}' (125) 3 4 34 35 36 37 91 92
error (256)
IF (258) 44
ELSE_IF (259) 46 47
RETURN (260) 56 57
CONTINUE (261)
BREAK (262)
LOOP (263) 42 43
INK (264) 9 10 11 12
ARROW (265) 9 10 11 12 44 45 46 47
DOT_OP (266) 104 105 106 107
LOG_OP (267) 113
REL_OP (268) 112
NEG_OP (269) 115
IMG (270) 18 67 68 69 70
GRAY_IMG (271) 19 71 72 73 74
VID (272) 20 75 76
GRAY_VID (273) 21 77 78
NUM (274) 22 79 80 85 86 87
REAL (275) 23 83 84 88 89 90
VOID (276) 14 57
BOOL (277) 24 81 82
BOOL_LIT (278) 99 111
NEWLINE (279) 5 6
ID (280) 9 10 11 12 17 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81
    82 83 84 85 86 87 88 89 90 100 101 104 105 106 107 108 118 122
    123
NUM_LIT (281) 67 68 71 72 75 76 77 78 97 109
REAL_LIT (282) 98 110
PATH (283) 69 73
BINARY_OP (284) 119
UNARY_OP (285) 120
INV_OP (286) 121
SHORT_IF (287)
LONG_IF (288)


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1 2, on right: 0 1
func_body (47)
    on left: 3 4, on right: 9 10 11 12 42 43 44 45 46 47
new_lines (48)
    on left: 5 6, on right: 1 4 5 8 11 12 29 30 33 34 35 36 37 48 49
    50 51 56 57 62 63 64 67 68 69 70 71 72 73 74 75 76 77 78 85 86
    87 88 89 90 122 123
optional_new_lines (49)
    on left: 7 8, on right: 2 42 43 44 45 46 47 48 50 51
function (50)
    on left: 9 10 11 12, on right: 1 2
RET_TYPE (51)
    on left: 13 14, on right: 9 10 11 12
par_list (52)
    on left: 15 16, on right: 9 11 15
par (53)
    on left: 17, on right: 15 16
datatype (54)
    on left: 18 19 20 21 22 23 24, on right: 13 17
stmt_list (55)
    on left: 25 26, on right: 3 4 26 34 35
stmt (56)
    on left: 27 28 29 30 31 32 33 34 35 36 37, on right: 25 26
optional_expr_pred (57)
    on left: 38 39, on right: 42 43
optional_num_data_decl (58)
    on left: 40 41, on right: 43
loop_stmt (59)
    on left: 42 43, on right: 33
if_block (60)
    on left: 44, on right: 48 49 50 51
else (61)
    on left: 45, on right: 48 51
else_if_block_list (62)
    on left: 46 47, on right: 46 48 50
conditional_stmt (63)
    on left: 48 49 50 51, on right: 28
numeric_data_decl (64)
    on left: 52 53 54, on right: 40
empty_return (65)
    on left: 55, on right: 56 57
return_stmt (66)
    on left: 56 57, on right: 32
decl_stmt (67)
    on left: 58 59 60 61 62 63 64 65 66, on right: 27
img_decl (68)
    on left: 67 68 69 70, on right: 58
gray_img_decl (69)
    on left: 71 72 73 74, on right: 59
vid_decl (70)
    on left: 75 76, on right: 60
gray_vid_decl (71)
    on left: 77 78, on right: 61
num_decl (72)
    on left: 79 80, on right: 52 62
bool_decl (73)
    on left: 81 82, on right: 54 63
real_decl (74)
    on left: 83 84, on right: 53 64
num_array_decl (75)
    on left: 85 86 87, on right: 65
real_array_decl (76)
    on left: 88 89 90, on right: 66
brak_pred (77)
    on left: 91 92, on right: 87 90 93 94
brak_pred_list (78)
    on left: 93 94, on right: 91 93
lit_list (79)
    on left: 95 96, on right: 92 95
lit (80)
    on left: 97 98 99, on right: 95 96
call_stmt (81)
    on left: 100 101, on right: 29 116
arg_list (82)
    on left: 102 103, on right: 100 102 104 106
in_built_call_stmt (83)
    on left: 104 105 106 107, on right: 30 106 107 117
expr_pred (84)
    on left: 108 109 110 111 112 113 114 115 116 117 118 119 120 121
   , on right: 38 44 46 47 56 70 74 80 82 84 102 103 112 113 114 115
    119 120 121 122 123 124 125 126
expr_stmt (85)
    on left: 122 123, on right: 31
array_element (86)
    on left: 124 125 126, on right: 85 86 87 88 89 90 118 123


state 0

    0 $accept: . program $end

    INK  shift, and go to state 1

    program   go to state 2
    function  go to state 3


state 1

    9 function: INK . ID '(' par_list ')' ARROW RET_TYPE func_body
   10         | INK . ID '(' ')' ARROW RET_TYPE func_body
   11         | INK . ID '(' par_list ')' ARROW RET_TYPE new_lines func_body
   12         | INK . ID '(' ')' ARROW RET_TYPE new_lines func_body

    ID  shift, and go to state 4


state 2

    0 $accept: program . $end

    $end  shift, and go to state 5


state 3

    1 program: function . new_lines program
    2        | function . optional_new_lines

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 7
    optional_new_lines  go to state 8


state 4

    9 function: INK ID . '(' par_list ')' ARROW RET_TYPE func_body
   10         | INK ID . '(' ')' ARROW RET_TYPE func_body
   11         | INK ID . '(' par_list ')' ARROW RET_TYPE new_lines func_body
   12         | INK ID . '(' ')' ARROW RET_TYPE new_lines func_body

    '('  shift, and go to state 9


state 5

    0 $accept: program $end .

    $default  accept


state 6

    6 new_lines: NEWLINE .

    $default  reduce using rule 6 (new_lines)


state 7

    1 program: function new_lines . program
    5 new_lines: new_lines . NEWLINE
    8 optional_new_lines: new_lines .

    INK      shift, and go to state 1
    NEWLINE  shift, and go to state 10

    $default  reduce using rule 8 (optional_new_lines)

    program   go to state 11
    function  go to state 3


state 8

    2 program: function optional_new_lines .

    $default  reduce using rule 2 (program)


state 9

    9 function: INK ID '(' . par_list ')' ARROW RET_TYPE func_body
   10         | INK ID '(' . ')' ARROW RET_TYPE func_body
   11         | INK ID '(' . par_list ')' ARROW RET_TYPE new_lines func_body
   12         | INK ID '(' . ')' ARROW RET_TYPE new_lines func_body

    IMG       shift, and go to state 12
    GRAY_IMG  shift, and go to state 13
    VID       shift, and go to state 14
    GRAY_VID  shift, and go to state 15
    NUM       shift, and go to state 16
    REAL      shift, and go to state 17
    BOOL      shift, and go to state 18
    ')'       shift, and go to state 19

    par_list  go to state 20
    par       go to state 21
    datatype  go to state 22


state 10

    5 new_lines: new_lines NEWLINE .

    $default  reduce using rule 5 (new_lines)


state 11

    1 program: function new_lines program .

    $default  reduce using rule 1 (program)


state 12

   18 datatype: IMG .

    $default  reduce using rule 18 (datatype)


state 13

   19 datatype: GRAY_IMG .

    $default  reduce using rule 19 (datatype)


state 14

   20 datatype: VID .

    $default  reduce using rule 20 (datatype)


state 15

   21 datatype: GRAY_VID .

    $default  reduce using rule 21 (datatype)


state 16

   22 datatype: NUM .

    $default  reduce using rule 22 (datatype)


state 17

   23 datatype: REAL .

    $default  reduce using rule 23 (datatype)


state 18

   24 datatype: BOOL .

    $default  reduce using rule 24 (datatype)


state 19

   10 function: INK ID '(' ')' . ARROW RET_TYPE func_body
   12         | INK ID '(' ')' . ARROW RET_TYPE new_lines func_body

    ARROW  shift, and go to state 23


state 20

    9 function: INK ID '(' par_list . ')' ARROW RET_TYPE func_body
   11         | INK ID '(' par_list . ')' ARROW RET_TYPE new_lines func_body
   15 par_list: par_list . ',' par

    ')'  shift, and go to state 24
    ','  shift, and go to state 25


state 21

   16 par_list: par .

    $default  reduce using rule 16 (par_list)


state 22

   17 par: datatype . ID

    ID  shift, and go to state 26


state 23

   10 function: INK ID '(' ')' ARROW . RET_TYPE func_body
   12         | INK ID '(' ')' ARROW . RET_TYPE new_lines func_body

    IMG       shift, and go to state 12
    GRAY_IMG  shift, and go to state 13
    VID       shift, and go to state 14
    GRAY_VID  shift, and go to state 15
    NUM       shift, and go to state 16
    REAL      shift, and go to state 17
    VOID      shift, and go to state 27
    BOOL      shift, and go to state 18

    RET_TYPE  go to state 28
    datatype  go to state 29


state 24

    9 function: INK ID '(' par_list ')' . ARROW RET_TYPE func_body
   11         | INK ID '(' par_list ')' . ARROW RET_TYPE new_lines func_body

    ARROW  shift, and go to state 30


state 25

   15 par_list: par_list ',' . par

    IMG       shift, and go to state 12
    GRAY_IMG  shift, and go to state 13
    VID       shift, and go to state 14
    GRAY_VID  shift, and go to state 15
    NUM       shift, and go to state 16
    REAL      shift, and go to state 17
    BOOL      shift, and go to state 18

    par       go to state 31
    datatype  go to state 22


state 26

   17 par: datatype ID .

    $default  reduce using rule 17 (par)


state 27

   14 RET_TYPE: VOID .

    $default  reduce using rule 14 (RET_TYPE)


state 28

   10 function: INK ID '(' ')' ARROW RET_TYPE . func_body
   12         | INK ID '(' ')' ARROW RET_TYPE . new_lines func_body

    NEWLINE  shift, and go to state 6
    '{'      shift, and go to state 32

    func_body  go to state 33
    new_lines  go to state 34


state 29

   13 RET_TYPE: datatype .

    $default  reduce using rule 13 (RET_TYPE)


state 30

    9 function: INK ID '(' par_list ')' ARROW . RET_TYPE func_body
   11         | INK ID '(' par_list ')' ARROW . RET_TYPE new_lines func_body

    IMG       shift, and go to state 12
    GRAY_IMG  shift, and go to state 13
    VID       shift, and go to state 14
    GRAY_VID  shift, and go to state 15
    NUM       shift, and go to state 16
    REAL      shift, and go to state 17
    VOID      shift, and go to state 27
    BOOL      shift, and go to state 18

    RET_TYPE  go to state 35
    datatype  go to state 29


state 31

   15 par_list: par_list ',' par .

    $default  reduce using rule 15 (par_list)


state 32

    3 func_body: '{' . stmt_list '}'
    4          | '{' . new_lines stmt_list '}'

    IF        shift, and go to state 36
    RETURN    shift, and go to state 37
    LOOP      shift, and go to state 38
    IMG       shift, and go to state 39
    GRAY_IMG  shift, and go to state 40
    VID       shift, and go to state 41
    GRAY_VID  shift, and go to state 42
    NUM       shift, and go to state 43
    REAL      shift, and go to state 44
    BOOL      shift, and go to state 45
    NEWLINE   shift, and go to state 6
    ID        shift, and go to state 46
    '{'       shift, and go to state 47

    new_lines           go to state 48
    stmt_list           go to state 49
    stmt                go to state 50
    loop_stmt           go to state 51
    if_block            go to state 52
    conditional_stmt    go to state 53
    return_stmt         go to state 54
    decl_stmt           go to state 55
    img_decl            go to state 56
    gray_img_decl       go to state 57
    vid_decl            go to state 58
    gray_vid_decl       go to state 59
    num_decl            go to state 60
    bool_decl           go to state 61
    real_decl           go to state 62
    num_array_decl      go to state 63
    real_array_decl     go to state 64
    call_stmt           go to state 65
    in_built_call_stmt  go to state 66
    expr_stmt           go to state 67


state 33

   10 function: INK ID '(' ')' ARROW RET_TYPE func_body .

    $default  reduce using rule 10 (function)


state 34

    5 new_lines: new_lines . NEWLINE
   12 function: INK ID '(' ')' ARROW RET_TYPE new_lines . func_body

    NEWLINE  shift, and go to state 10
    '{'      shift, and go to state 32

    func_body  go to state 68


state 35

    9 function: INK ID '(' par_list ')' ARROW RET_TYPE . func_body
   11         | INK ID '(' par_list ')' ARROW RET_TYPE . new_lines func_body

    NEWLINE  shift, and go to state 6
    '{'      shift, and go to state 32

    func_body  go to state 69
    new_lines  go to state 70


state 36

   44 if_block: IF . optional_new_lines '(' expr_pred ')' optional_new_lines ARROW optional_new_lines func_body

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 71
    optional_new_lines  go to state 72


state 37

   56 return_stmt: RETURN . expr_pred empty_return new_lines
   57            | RETURN . VOID empty_return new_lines

    NEG_OP    shift, and go to state 73
    VOID      shift, and go to state 74
    BOOL_LIT  shift, and go to state 75
    ID        shift, and go to state 76
    NUM_LIT   shift, and go to state 77
    REAL_LIT  shift, and go to state 78
    INV_OP    shift, and go to state 79
    '('       shift, and go to state 80

    call_stmt           go to state 81
    in_built_call_stmt  go to state 82
    expr_pred           go to state 83


state 38

   42 loop_stmt: LOOP . optional_new_lines '(' optional_expr_pred ')' optional_new_lines func_body
   43          | LOOP . optional_new_lines '(' optional_num_data_decl ';' optional_expr_pred ';' optional_expr_pred ')' optional_new_lines func_body

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 71
    optional_new_lines  go to state 84


state 39

   67 img_decl: IMG . ID '<' NUM_LIT ',' NUM_LIT '>' new_lines
   68         | IMG . ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines
   69         | IMG . ID '<' PATH '>' new_lines
   70         | IMG . ID '=' expr_pred new_lines

    ID  shift, and go to state 85


state 40

   71 gray_img_decl: GRAY_IMG . ID '<' NUM_LIT ',' NUM_LIT '>' new_lines
   72              | GRAY_IMG . ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines
   73              | GRAY_IMG . ID '<' PATH '>' new_lines
   74              | GRAY_IMG . ID '=' expr_pred new_lines

    ID  shift, and go to state 86


state 41

   75 vid_decl: VID . ID '<' NUM_LIT ',' NUM_LIT '>' new_lines
   76         | VID . ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines

    ID  shift, and go to state 87


state 42

   77 gray_vid_decl: GRAY_VID . ID '<' NUM_LIT ',' NUM_LIT '>' new_lines
   78              | GRAY_VID . ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines

    ID  shift, and go to state 88


state 43

   79 num_decl: NUM . ID
   80         | NUM . ID '=' expr_pred
   85 num_array_decl: NUM . array_element ID new_lines
   86               | NUM . array_element ID '=' ID new_lines
   87               | NUM . array_element ID '=' brak_pred new_lines

    ID   shift, and go to state 89
    '['  shift, and go to state 90

    array_element  go to state 91


state 44

   83 real_decl: REAL . ID
   84          | REAL . ID '=' expr_pred
   88 real_array_decl: REAL . array_element ID new_lines
   89                | REAL . array_element ID '=' ID new_lines
   90                | REAL . array_element ID '=' brak_pred new_lines

    ID   shift, and go to state 92
    '['  shift, and go to state 90

    array_element  go to state 93


state 45

   81 bool_decl: BOOL . ID
   82          | BOOL . ID '=' expr_pred

    ID  shift, and go to state 94


state 46

  100 call_stmt: ID . '(' arg_list ')'
  101          | ID . '(' ')'
  104 in_built_call_stmt: ID . DOT_OP ID '(' arg_list ')'
  105                   | ID . DOT_OP ID '(' ')'
  122 expr_stmt: ID . '=' expr_pred new_lines
  123          | ID . array_element '=' expr_pred new_lines

    DOT_OP  shift, and go to state 95
    '('     shift, and go to state 96
    '='     shift, and go to state 97
    '['     shift, and go to state 90

    array_element  go to state 98


state 47

   34 stmt: '{' . new_lines stmt_list '}' new_lines
   35     | '{' . stmt_list '}' new_lines
   36     | '{' . new_lines '}' new_lines
   37     | '{' . '}' new_lines

    IF        shift, and go to state 36
    RETURN    shift, and go to state 37
    LOOP      shift, and go to state 38
    IMG       shift, and go to state 39
    GRAY_IMG  shift, and go to state 40
    VID       shift, and go to state 41
    GRAY_VID  shift, and go to state 42
    NUM       shift, and go to state 43
    REAL      shift, and go to state 44
    BOOL      shift, and go to state 45
    NEWLINE   shift, and go to state 6
    ID        shift, and go to state 46
    '{'       shift, and go to state 47
    '}'       shift, and go to state 99

    new_lines           go to state 100
    stmt_list           go to state 101
    stmt                go to state 50
    loop_stmt           go to state 51
    if_block            go to state 52
    conditional_stmt    go to state 53
    return_stmt         go to state 54
    decl_stmt           go to state 55
    img_decl            go to state 56
    gray_img_decl       go to state 57
    vid_decl            go to state 58
    gray_vid_decl       go to state 59
    num_decl            go to state 60
    bool_decl           go to state 61
    real_decl           go to state 62
    num_array_decl      go to state 63
    real_array_decl     go to state 64
    call_stmt           go to state 65
    in_built_call_stmt  go to state 66
    expr_stmt           go to state 67


state 48

    4 func_body: '{' new_lines . stmt_list '}'
    5 new_lines: new_lines . NEWLINE

    IF        shift, and go to state 36
    RETURN    shift, and go to state 37
    LOOP      shift, and go to state 38
    IMG       shift, and go to state 39
    GRAY_IMG  shift, and go to state 40
    VID       shift, and go to state 41
    GRAY_VID  shift, and go to state 42
    NUM       shift, and go to state 43
    REAL      shift, and go to state 44
    BOOL      shift, and go to state 45
    NEWLINE   shift, and go to state 10
    ID        shift, and go to state 46
    '{'       shift, and go to state 47

    stmt_list           go to state 102
    stmt                go to state 50
    loop_stmt           go to state 51
    if_block            go to state 52
    conditional_stmt    go to state 53
    return_stmt         go to state 54
    decl_stmt           go to state 55
    img_decl            go to state 56
    gray_img_decl       go to state 57
    vid_decl            go to state 58
    gray_vid_decl       go to state 59
    num_decl            go to state 60
    bool_decl           go to state 61
    real_decl           go to state 62
    num_array_decl      go to state 63
    real_array_decl     go to state 64
    call_stmt           go to state 65
    in_built_call_stmt  go to state 66
    expr_stmt           go to state 67


state 49

    3 func_body: '{' stmt_list . '}'
   26 stmt_list: stmt_list . stmt

    IF        shift, and go to state 36
    RETURN    shift, and go to state 37
    LOOP      shift, and go to state 38
    IMG       shift, and go to state 39
    GRAY_IMG  shift, and go to state 40
    VID       shift, and go to state 41
    GRAY_VID  shift, and go to state 42
    NUM       shift, and go to state 43
    REAL      shift, and go to state 44
    BOOL      shift, and go to state 45
    ID        shift, and go to state 46
    '{'       shift, and go to state 47
    '}'       shift, and go to state 103

    stmt                go to state 104
    loop_stmt           go to state 51
    if_block            go to state 52
    conditional_stmt    go to state 53
    return_stmt         go to state 54
    decl_stmt           go to state 55
    img_decl            go to state 56
    gray_img_decl       go to state 57
    vid_decl            go to state 58
    gray_vid_decl       go to state 59
    num_decl            go to state 60
    bool_decl           go to state 61
    real_decl           go to state 62
    num_array_decl      go to state 63
    real_array_decl     go to state 64
    call_stmt           go to state 65
    in_built_call_stmt  go to state 66
    expr_stmt           go to state 67


state 50

   25 stmt_list: stmt .

    $default  reduce using rule 25 (stmt_list)


state 51

   33 stmt: loop_stmt . new_lines

    NEWLINE  shift, and go to state 6

    new_lines  go to state 105


state 52

   48 conditional_stmt: if_block . optional_new_lines else_if_block_list optional_new_lines else new_lines
   49                 | if_block . new_lines
   50                 | if_block . optional_new_lines else_if_block_list new_lines
   51                 | if_block . optional_new_lines else new_lines

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 106
    optional_new_lines  go to state 107


state 53

   28 stmt: conditional_stmt .

    $default  reduce using rule 28 (stmt)


state 54

   32 stmt: return_stmt .

    $default  reduce using rule 32 (stmt)


state 55

   27 stmt: decl_stmt .

    $default  reduce using rule 27 (stmt)


state 56

   58 decl_stmt: img_decl .

    $default  reduce using rule 58 (decl_stmt)


state 57

   59 decl_stmt: gray_img_decl .

    $default  reduce using rule 59 (decl_stmt)


state 58

   60 decl_stmt: vid_decl .

    $default  reduce using rule 60 (decl_stmt)


state 59

   61 decl_stmt: gray_vid_decl .

    $default  reduce using rule 61 (decl_stmt)


state 60

   62 decl_stmt: num_decl . new_lines

    NEWLINE  shift, and go to state 6

    new_lines  go to state 108


state 61

   63 decl_stmt: bool_decl . new_lines

    NEWLINE  shift, and go to state 6

    new_lines  go to state 109


state 62

   64 decl_stmt: real_decl . new_lines

    NEWLINE  shift, and go to state 6

    new_lines  go to state 110


state 63

   65 decl_stmt: num_array_decl .

    $default  reduce using rule 65 (decl_stmt)


state 64

   66 decl_stmt: real_array_decl .

    $default  reduce using rule 66 (decl_stmt)


state 65

   29 stmt: call_stmt . new_lines

    NEWLINE  shift, and go to state 6

    new_lines  go to state 111


state 66

   30 stmt: in_built_call_stmt . new_lines
  106 in_built_call_stmt: in_built_call_stmt . DOT_OP ID '(' arg_list ')'
  107                   | in_built_call_stmt . DOT_OP ID '(' ')'

    DOT_OP   shift, and go to state 112
    NEWLINE  shift, and go to state 6

    new_lines  go to state 113


state 67

   31 stmt: expr_stmt .

    $default  reduce using rule 31 (stmt)


state 68

   12 function: INK ID '(' ')' ARROW RET_TYPE new_lines func_body .

    $default  reduce using rule 12 (function)


state 69

    9 function: INK ID '(' par_list ')' ARROW RET_TYPE func_body .

    $default  reduce using rule 9 (function)


state 70

    5 new_lines: new_lines . NEWLINE
   11 function: INK ID '(' par_list ')' ARROW RET_TYPE new_lines . func_body

    NEWLINE  shift, and go to state 10
    '{'      shift, and go to state 32

    func_body  go to state 114


state 71

    5 new_lines: new_lines . NEWLINE
    8 optional_new_lines: new_lines .

    NEWLINE  shift, and go to state 10

    $default  reduce using rule 8 (optional_new_lines)


state 72

   44 if_block: IF optional_new_lines . '(' expr_pred ')' optional_new_lines ARROW optional_new_lines func_body

    '('  shift, and go to state 115


state 73

  115 expr_pred: NEG_OP . expr_pred

    NEG_OP    shift, and go to state 73
    BOOL_LIT  shift, and go to state 75
    ID        shift, and go to state 76
    NUM_LIT   shift, and go to state 77
    REAL_LIT  shift, and go to state 78
    INV_OP    shift, and go to state 79
    '('       shift, and go to state 80

    call_stmt           go to state 81
    in_built_call_stmt  go to state 82
    expr_pred           go to state 116


state 74

   57 return_stmt: RETURN VOID . empty_return new_lines

    $default  reduce using rule 55 (empty_return)

    empty_return  go to state 117


state 75

  111 expr_pred: BOOL_LIT .

    $default  reduce using rule 111 (expr_pred)


state 76

  100 call_stmt: ID . '(' arg_list ')'
  101          | ID . '(' ')'
  104 in_built_call_stmt: ID . DOT_OP ID '(' arg_list ')'
  105                   | ID . DOT_OP ID '(' ')'
  108 expr_pred: ID .
  118          | ID . array_element

    DOT_OP  shift, and go to state 95
    '('     shift, and go to state 96
    '['     shift, and go to state 90

    $default  reduce using rule 108 (expr_pred)

    array_element  go to state 118


state 77

  109 expr_pred: NUM_LIT .

    $default  reduce using rule 109 (expr_pred)


state 78

  110 expr_pred: REAL_LIT .

    $default  reduce using rule 110 (expr_pred)


state 79

  121 expr_pred: INV_OP . expr_pred

    NEG_OP    shift, and go to state 73
    BOOL_LIT  shift, and go to state 75
    ID        shift, and go to state 76
    NUM_LIT   shift, and go to state 77
    REAL_LIT  shift, and go to state 78
    INV_OP    shift, and go to state 79
    '('       shift, and go to state 80

    call_stmt           go to state 81
    in_built_call_stmt  go to state 82
    expr_pred           go to state 119


state 80

  114 expr_pred: '(' . expr_pred ')'

    NEG_OP    shift, and go to state 73
    BOOL_LIT  shift, and go to state 75
    ID        shift, and go to state 76
    NUM_LIT   shift, and go to state 77
    REAL_LIT  shift, and go to state 78
    INV_OP    shift, and go to state 79
    '('       shift, and go to state 80

    call_stmt           go to state 81
    in_built_call_stmt  go to state 82
    expr_pred           go to state 120


state 81

  116 expr_pred: call_stmt .

    $default  reduce using rule 116 (expr_pred)


state 82

  106 in_built_call_stmt: in_built_call_stmt . DOT_OP ID '(' arg_list ')'
  107                   | in_built_call_stmt . DOT_OP ID '(' ')'
  117 expr_pred: in_built_call_stmt .

    DOT_OP  shift, and go to state 112

    $default  reduce using rule 117 (expr_pred)


state 83

   56 return_stmt: RETURN expr_pred . empty_return new_lines
  112 expr_pred: expr_pred . REL_OP expr_pred
  113          | expr_pred . LOG_OP expr_pred
  119          | expr_pred . BINARY_OP expr_pred
  120          | expr_pred . UNARY_OP

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    BINARY_OP  shift, and go to state 123
    UNARY_OP   shift, and go to state 124

    $default  reduce using rule 55 (empty_return)

    empty_return  go to state 125


state 84

   42 loop_stmt: LOOP optional_new_lines . '(' optional_expr_pred ')' optional_new_lines func_body
   43          | LOOP optional_new_lines . '(' optional_num_data_decl ';' optional_expr_pred ';' optional_expr_pred ')' optional_new_lines func_body

    '('  shift, and go to state 126


state 85

   67 img_decl: IMG ID . '<' NUM_LIT ',' NUM_LIT '>' new_lines
   68         | IMG ID . '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines
   69         | IMG ID . '<' PATH '>' new_lines
   70         | IMG ID . '=' expr_pred new_lines

    '<'  shift, and go to state 127
    '='  shift, and go to state 128


state 86

   71 gray_img_decl: GRAY_IMG ID . '<' NUM_LIT ',' NUM_LIT '>' new_lines
   72              | GRAY_IMG ID . '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines
   73              | GRAY_IMG ID . '<' PATH '>' new_lines
   74              | GRAY_IMG ID . '=' expr_pred new_lines

    '<'  shift, and go to state 129
    '='  shift, and go to state 130


state 87

   75 vid_decl: VID ID . '<' NUM_LIT ',' NUM_LIT '>' new_lines
   76         | VID ID . '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines

    '<'  shift, and go to state 131


state 88

   77 gray_vid_decl: GRAY_VID ID . '<' NUM_LIT ',' NUM_LIT '>' new_lines
   78              | GRAY_VID ID . '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines

    '<'  shift, and go to state 132


state 89

   79 num_decl: NUM ID .
   80         | NUM ID . '=' expr_pred

    '='  shift, and go to state 133

    $default  reduce using rule 79 (num_decl)


state 90

  124 array_element: '[' . expr_pred ']'
  125              | '[' . expr_pred ',' expr_pred ']'
  126              | '[' . expr_pred ',' expr_pred ',' expr_pred ']'

    NEG_OP    shift, and go to state 73
    BOOL_LIT  shift, and go to state 75
    ID        shift, and go to state 76
    NUM_LIT   shift, and go to state 77
    REAL_LIT  shift, and go to state 78
    INV_OP    shift, and go to state 79
    '('       shift, and go to state 80

    call_stmt           go to state 81
    in_built_call_stmt  go to state 82
    expr_pred           go to state 134


state 91

   85 num_array_decl: NUM array_element . ID new_lines
   86               | NUM array_element . ID '=' ID new_lines
   87               | NUM array_element . ID '=' brak_pred new_lines

    ID  shift, and go to state 135


state 92

   83 real_decl: REAL ID .
   84          | REAL ID . '=' expr_pred

    '='  shift, and go to state 136

    $default  reduce using rule 83 (real_decl)


state 93

   88 real_array_decl: REAL array_element . ID new_lines
   89                | REAL array_element . ID '=' ID new_lines
   90                | REAL array_element . ID '=' brak_pred new_lines

    ID  shift, and go to state 137


state 94

   81 bool_decl: BOOL ID .
   82          | BOOL ID . '=' expr_pred

    '='  shift, and go to state 138

    $default  reduce using rule 81 (bool_decl)


state 95

  104 in_built_call_stmt: ID DOT_OP . ID '(' arg_list ')'
  105                   | ID DOT_OP . ID '(' ')'

    ID  shift, and go to state 139


state 96

  100 call_stmt: ID '(' . arg_list ')'
  101          | ID '(' . ')'

    NEG_OP    shift, and go to state 73
    BOOL_LIT  shift, and go to state 75
    ID        shift, and go to state 76
    NUM_LIT   shift, and go to state 77
    REAL_LIT  shift, and go to state 78
    INV_OP    shift, and go to state 79
    '('       shift, and go to state 80
    ')'       shift, and go to state 140

    call_stmt           go to state 81
    arg_list            go to state 141
    in_built_call_stmt  go to state 82
    expr_pred           go to state 142


state 97

  122 expr_stmt: ID '=' . expr_pred new_lines

    NEG_OP    shift, and go to state 73
    BOOL_LIT  shift, and go to state 75
    ID        shift, and go to state 76
    NUM_LIT   shift, and go to state 77
    REAL_LIT  shift, and go to state 78
    INV_OP    shift, and go to state 79
    '('       shift, and go to state 80

    call_stmt           go to state 81
    in_built_call_stmt  go to state 82
    expr_pred           go to state 143


state 98

  123 expr_stmt: ID array_element . '=' expr_pred new_lines

    '='  shift, and go to state 144


state 99

   37 stmt: '{' '}' . new_lines

    NEWLINE  shift, and go to state 6

    new_lines  go to state 145


state 100

    5 new_lines: new_lines . NEWLINE
   34 stmt: '{' new_lines . stmt_list '}' new_lines
   36     | '{' new_lines . '}' new_lines

    IF        shift, and go to state 36
    RETURN    shift, and go to state 37
    LOOP      shift, and go to state 38
    IMG       shift, and go to state 39
    GRAY_IMG  shift, and go to state 40
    VID       shift, and go to state 41
    GRAY_VID  shift, and go to state 42
    NUM       shift, and go to state 43
    REAL      shift, and go to state 44
    BOOL      shift, and go to state 45
    NEWLINE   shift, and go to state 10
    ID        shift, and go to state 46
    '{'       shift, and go to state 47
    '}'       shift, and go to state 146

    stmt_list           go to state 147
    stmt                go to state 50
    loop_stmt           go to state 51
    if_block            go to state 52
    conditional_stmt    go to state 53
    return_stmt         go to state 54
    decl_stmt           go to state 55
    img_decl            go to state 56
    gray_img_decl       go to state 57
    vid_decl            go to state 58
    gray_vid_decl       go to state 59
    num_decl            go to state 60
    bool_decl           go to state 61
    real_decl           go to state 62
    num_array_decl      go to state 63
    real_array_decl     go to state 64
    call_stmt           go to state 65
    in_built_call_stmt  go to state 66
    expr_stmt           go to state 67


state 101

   26 stmt_list: stmt_list . stmt
   35 stmt: '{' stmt_list . '}' new_lines

    IF        shift, and go to state 36
    RETURN    shift, and go to state 37
    LOOP      shift, and go to state 38
    IMG       shift, and go to state 39
    GRAY_IMG  shift, and go to state 40
    VID       shift, and go to state 41
    GRAY_VID  shift, and go to state 42
    NUM       shift, and go to state 43
    REAL      shift, and go to state 44
    BOOL      shift, and go to state 45
    ID        shift, and go to state 46
    '{'       shift, and go to state 47
    '}'       shift, and go to state 148

    stmt                go to state 104
    loop_stmt           go to state 51
    if_block            go to state 52
    conditional_stmt    go to state 53
    return_stmt         go to state 54
    decl_stmt           go to state 55
    img_decl            go to state 56
    gray_img_decl       go to state 57
    vid_decl            go to state 58
    gray_vid_decl       go to state 59
    num_decl            go to state 60
    bool_decl           go to state 61
    real_decl           go to state 62
    num_array_decl      go to state 63
    real_array_decl     go to state 64
    call_stmt           go to state 65
    in_built_call_stmt  go to state 66
    expr_stmt           go to state 67


state 102

    4 func_body: '{' new_lines stmt_list . '}'
   26 stmt_list: stmt_list . stmt

    IF        shift, and go to state 36
    RETURN    shift, and go to state 37
    LOOP      shift, and go to state 38
    IMG       shift, and go to state 39
    GRAY_IMG  shift, and go to state 40
    VID       shift, and go to state 41
    GRAY_VID  shift, and go to state 42
    NUM       shift, and go to state 43
    REAL      shift, and go to state 44
    BOOL      shift, and go to state 45
    ID        shift, and go to state 46
    '{'       shift, and go to state 47
    '}'       shift, and go to state 149

    stmt                go to state 104
    loop_stmt           go to state 51
    if_block            go to state 52
    conditional_stmt    go to state 53
    return_stmt         go to state 54
    decl_stmt           go to state 55
    img_decl            go to state 56
    gray_img_decl       go to state 57
    vid_decl            go to state 58
    gray_vid_decl       go to state 59
    num_decl            go to state 60
    bool_decl           go to state 61
    real_decl           go to state 62
    num_array_decl      go to state 63
    real_array_decl     go to state 64
    call_stmt           go to state 65
    in_built_call_stmt  go to state 66
    expr_stmt           go to state 67


state 103

    3 func_body: '{' stmt_list '}' .

    $default  reduce using rule 3 (func_body)


state 104

   26 stmt_list: stmt_list stmt .

    $default  reduce using rule 26 (stmt_list)


state 105

    5 new_lines: new_lines . NEWLINE
   33 stmt: loop_stmt new_lines .

    NEWLINE  shift, and go to state 10

    $default  reduce using rule 33 (stmt)


state 106

    5 new_lines: new_lines . NEWLINE
    8 optional_new_lines: new_lines .
   49 conditional_stmt: if_block new_lines .

    NEWLINE  shift, and go to state 10

    ELSE_IF   reduce using rule 8 (optional_new_lines)
    ARROW     reduce using rule 8 (optional_new_lines)
    $default  reduce using rule 49 (conditional_stmt)


state 107

   48 conditional_stmt: if_block optional_new_lines . else_if_block_list optional_new_lines else new_lines
   50                 | if_block optional_new_lines . else_if_block_list new_lines
   51                 | if_block optional_new_lines . else new_lines

    ELSE_IF  shift, and go to state 150
    ARROW    shift, and go to state 151

    else                go to state 152
    else_if_block_list  go to state 153


state 108

    5 new_lines: new_lines . NEWLINE
   62 decl_stmt: num_decl new_lines .

    NEWLINE  shift, and go to state 10

    $default  reduce using rule 62 (decl_stmt)


state 109

    5 new_lines: new_lines . NEWLINE
   63 decl_stmt: bool_decl new_lines .

    NEWLINE  shift, and go to state 10

    $default  reduce using rule 63 (decl_stmt)


state 110

    5 new_lines: new_lines . NEWLINE
   64 decl_stmt: real_decl new_lines .

    NEWLINE  shift, and go to state 10

    $default  reduce using rule 64 (decl_stmt)


state 111

    5 new_lines: new_lines . NEWLINE
   29 stmt: call_stmt new_lines .

    NEWLINE  shift, and go to state 10

    $default  reduce using rule 29 (stmt)


state 112

  106 in_built_call_stmt: in_built_call_stmt DOT_OP . ID '(' arg_list ')'
  107                   | in_built_call_stmt DOT_OP . ID '(' ')'

    ID  shift, and go to state 154


state 113

    5 new_lines: new_lines . NEWLINE
   30 stmt: in_built_call_stmt new_lines .

    NEWLINE  shift, and go to state 10

    $default  reduce using rule 30 (stmt)


state 114

   11 function: INK ID '(' par_list ')' ARROW RET_TYPE new_lines func_body .

    $default  reduce using rule 11 (function)


state 115

   44 if_block: IF optional_new_lines '(' . expr_pred ')' optional_new_lines ARROW optional_new_lines func_body

    NEG_OP    shift, and go to state 73
    BOOL_LIT  shift, and go to state 75
    ID        shift, and go to state 76
    NUM_LIT   shift, and go to state 77
    REAL_LIT  shift, and go to state 78
    INV_OP    shift, and go to state 79
    '('       shift, and go to state 80

    call_stmt           go to state 81
    in_built_call_stmt  go to state 82
    expr_pred           go to state 155


state 116

  112 expr_pred: expr_pred . REL_OP expr_pred
  113          | expr_pred . LOG_OP expr_pred
  115          | NEG_OP expr_pred .
  119          | expr_pred . BINARY_OP expr_pred
  120          | expr_pred . UNARY_OP

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    BINARY_OP  shift, and go to state 123

    $default  reduce using rule 115 (expr_pred)


state 117

   57 return_stmt: RETURN VOID empty_return . new_lines

    NEWLINE  shift, and go to state 6

    new_lines  go to state 156


state 118

  118 expr_pred: ID array_element .

    $default  reduce using rule 118 (expr_pred)


state 119

  112 expr_pred: expr_pred . REL_OP expr_pred
  113          | expr_pred . LOG_OP expr_pred
  119          | expr_pred . BINARY_OP expr_pred
  120          | expr_pred . UNARY_OP
  121          | INV_OP expr_pred .

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    BINARY_OP  shift, and go to state 123

    $default  reduce using rule 121 (expr_pred)


state 120

  112 expr_pred: expr_pred . REL_OP expr_pred
  113          | expr_pred . LOG_OP expr_pred
  114          | '(' expr_pred . ')'
  119          | expr_pred . BINARY_OP expr_pred
  120          | expr_pred . UNARY_OP

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    BINARY_OP  shift, and go to state 123
    UNARY_OP   shift, and go to state 124
    ')'        shift, and go to state 157


state 121

  113 expr_pred: expr_pred LOG_OP . expr_pred

    NEG_OP    shift, and go to state 73
    BOOL_LIT  shift, and go to state 75
    ID        shift, and go to state 76
    NUM_LIT   shift, and go to state 77
    REAL_LIT  shift, and go to state 78
    INV_OP    shift, and go to state 79
    '('       shift, and go to state 80

    call_stmt           go to state 81
    in_built_call_stmt  go to state 82
    expr_pred           go to state 158


state 122

  112 expr_pred: expr_pred REL_OP . expr_pred

    NEG_OP    shift, and go to state 73
    BOOL_LIT  shift, and go to state 75
    ID        shift, and go to state 76
    NUM_LIT   shift, and go to state 77
    REAL_LIT  shift, and go to state 78
    INV_OP    shift, and go to state 79
    '('       shift, and go to state 80

    call_stmt           go to state 81
    in_built_call_stmt  go to state 82
    expr_pred           go to state 159


state 123

  119 expr_pred: expr_pred BINARY_OP . expr_pred

    NEG_OP    shift, and go to state 73
    BOOL_LIT  shift, and go to state 75
    ID        shift, and go to state 76
    NUM_LIT   shift, and go to state 77
    REAL_LIT  shift, and go to state 78
    INV_OP    shift, and go to state 79
    '('       shift, and go to state 80

    call_stmt           go to state 81
    in_built_call_stmt  go to state 82
    expr_pred           go to state 160


state 124

  120 expr_pred: expr_pred UNARY_OP .

    $default  reduce using rule 120 (expr_pred)


state 125

   56 return_stmt: RETURN expr_pred empty_return . new_lines

    NEWLINE  shift, and go to state 6

    new_lines  go to state 161


state 126

   42 loop_stmt: LOOP optional_new_lines '(' . optional_expr_pred ')' optional_new_lines func_body
   43          | LOOP optional_new_lines '(' . optional_num_data_decl ';' optional_expr_pred ';' optional_expr_pred ')' optional_new_lines func_body

    NEG_OP    shift, and go to state 73
    NUM       shift, and go to state 162
    REAL      shift, and go to state 163
    BOOL      shift, and go to state 45
    BOOL_LIT  shift, and go to state 75
    ID        shift, and go to state 76
    NUM_LIT   shift, and go to state 77
    REAL_LIT  shift, and go to state 78
    INV_OP    shift, and go to state 79
    '('       shift, and go to state 80

    ';'       reduce using rule 41 (optional_num_data_decl)
    $default  reduce using rule 39 (optional_expr_pred)

    optional_expr_pred      go to state 164
    optional_num_data_decl  go to state 165
    numeric_data_decl       go to state 166
    num_decl                go to state 167
    bool_decl               go to state 168
    real_decl               go to state 169
    call_stmt               go to state 81
    in_built_call_stmt      go to state 82
    expr_pred               go to state 170


state 127

   67 img_decl: IMG ID '<' . NUM_LIT ',' NUM_LIT '>' new_lines
   68         | IMG ID '<' . NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines
   69         | IMG ID '<' . PATH '>' new_lines

    NUM_LIT  shift, and go to state 171
    PATH     shift, and go to state 172


state 128

   70 img_decl: IMG ID '=' . expr_pred new_lines

    NEG_OP    shift, and go to state 73
    BOOL_LIT  shift, and go to state 75
    ID        shift, and go to state 76
    NUM_LIT   shift, and go to state 77
    REAL_LIT  shift, and go to state 78
    INV_OP    shift, and go to state 79
    '('       shift, and go to state 80

    call_stmt           go to state 81
    in_built_call_stmt  go to state 82
    expr_pred           go to state 173


state 129

   71 gray_img_decl: GRAY_IMG ID '<' . NUM_LIT ',' NUM_LIT '>' new_lines
   72              | GRAY_IMG ID '<' . NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines
   73              | GRAY_IMG ID '<' . PATH '>' new_lines

    NUM_LIT  shift, and go to state 174
    PATH     shift, and go to state 175


state 130

   74 gray_img_decl: GRAY_IMG ID '=' . expr_pred new_lines

    NEG_OP    shift, and go to state 73
    BOOL_LIT  shift, and go to state 75
    ID        shift, and go to state 76
    NUM_LIT   shift, and go to state 77
    REAL_LIT  shift, and go to state 78
    INV_OP    shift, and go to state 79
    '('       shift, and go to state 80

    call_stmt           go to state 81
    in_built_call_stmt  go to state 82
    expr_pred           go to state 176


state 131

   75 vid_decl: VID ID '<' . NUM_LIT ',' NUM_LIT '>' new_lines
   76         | VID ID '<' . NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines

    NUM_LIT  shift, and go to state 177


state 132

   77 gray_vid_decl: GRAY_VID ID '<' . NUM_LIT ',' NUM_LIT '>' new_lines
   78              | GRAY_VID ID '<' . NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines

    NUM_LIT  shift, and go to state 178


state 133

   80 num_decl: NUM ID '=' . expr_pred

    NEG_OP    shift, and go to state 73
    BOOL_LIT  shift, and go to state 75
    ID        shift, and go to state 76
    NUM_LIT   shift, and go to state 77
    REAL_LIT  shift, and go to state 78
    INV_OP    shift, and go to state 79
    '('       shift, and go to state 80

    call_stmt           go to state 81
    in_built_call_stmt  go to state 82
    expr_pred           go to state 179


state 134

  112 expr_pred: expr_pred . REL_OP expr_pred
  113          | expr_pred . LOG_OP expr_pred
  119          | expr_pred . BINARY_OP expr_pred
  120          | expr_pred . UNARY_OP
  124 array_element: '[' expr_pred . ']'
  125              | '[' expr_pred . ',' expr_pred ']'
  126              | '[' expr_pred . ',' expr_pred ',' expr_pred ']'

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    BINARY_OP  shift, and go to state 123
    UNARY_OP   shift, and go to state 124
    ','        shift, and go to state 180
    ']'        shift, and go to state 181


state 135

   85 num_array_decl: NUM array_element ID . new_lines
   86               | NUM array_element ID . '=' ID new_lines
   87               | NUM array_element ID . '=' brak_pred new_lines

    NEWLINE  shift, and go to state 6
    '='      shift, and go to state 182

    new_lines  go to state 183


state 136

   84 real_decl: REAL ID '=' . expr_pred

    NEG_OP    shift, and go to state 73
    BOOL_LIT  shift, and go to state 75
    ID        shift, and go to state 76
    NUM_LIT   shift, and go to state 77
    REAL_LIT  shift, and go to state 78
    INV_OP    shift, and go to state 79
    '('       shift, and go to state 80

    call_stmt           go to state 81
    in_built_call_stmt  go to state 82
    expr_pred           go to state 184


state 137

   88 real_array_decl: REAL array_element ID . new_lines
   89                | REAL array_element ID . '=' ID new_lines
   90                | REAL array_element ID . '=' brak_pred new_lines

    NEWLINE  shift, and go to state 6
    '='      shift, and go to state 185

    new_lines  go to state 186


state 138

   82 bool_decl: BOOL ID '=' . expr_pred

    NEG_OP    shift, and go to state 73
    BOOL_LIT  shift, and go to state 75
    ID        shift, and go to state 76
    NUM_LIT   shift, and go to state 77
    REAL_LIT  shift, and go to state 78
    INV_OP    shift, and go to state 79
    '('       shift, and go to state 80

    call_stmt           go to state 81
    in_built_call_stmt  go to state 82
    expr_pred           go to state 187


state 139

  104 in_built_call_stmt: ID DOT_OP ID . '(' arg_list ')'
  105                   | ID DOT_OP ID . '(' ')'

    '('  shift, and go to state 188


state 140

  101 call_stmt: ID '(' ')' .

    $default  reduce using rule 101 (call_stmt)


state 141

  100 call_stmt: ID '(' arg_list . ')'
  102 arg_list: arg_list . ',' expr_pred

    ')'  shift, and go to state 189
    ','  shift, and go to state 190


state 142

  103 arg_list: expr_pred .
  112 expr_pred: expr_pred . REL_OP expr_pred
  113          | expr_pred . LOG_OP expr_pred
  119          | expr_pred . BINARY_OP expr_pred
  120          | expr_pred . UNARY_OP

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    BINARY_OP  shift, and go to state 123
    UNARY_OP   shift, and go to state 124

    $default  reduce using rule 103 (arg_list)


state 143

  112 expr_pred: expr_pred . REL_OP expr_pred
  113          | expr_pred . LOG_OP expr_pred
  119          | expr_pred . BINARY_OP expr_pred
  120          | expr_pred . UNARY_OP
  122 expr_stmt: ID '=' expr_pred . new_lines

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    NEWLINE    shift, and go to state 6
    BINARY_OP  shift, and go to state 123
    UNARY_OP   shift, and go to state 124

    new_lines  go to state 191


state 144

  123 expr_stmt: ID array_element '=' . expr_pred new_lines

    NEG_OP    shift, and go to state 73
    BOOL_LIT  shift, and go to state 75
    ID        shift, and go to state 76
    NUM_LIT   shift, and go to state 77
    REAL_LIT  shift, and go to state 78
    INV_OP    shift, and go to state 79
    '('       shift, and go to state 80

    call_stmt           go to state 81
    in_built_call_stmt  go to state 82
    expr_pred           go to state 192


state 145

    5 new_lines: new_lines . NEWLINE
   37 stmt: '{' '}' new_lines .

    NEWLINE  shift, and go to state 10

    $default  reduce using rule 37 (stmt)


state 146

   36 stmt: '{' new_lines '}' . new_lines

    NEWLINE  shift, and go to state 6

    new_lines  go to state 193


state 147

   26 stmt_list: stmt_list . stmt
   34 stmt: '{' new_lines stmt_list . '}' new_lines

    IF        shift, and go to state 36
    RETURN    shift, and go to state 37
    LOOP      shift, and go to state 38
    IMG       shift, and go to state 39
    GRAY_IMG  shift, and go to state 40
    VID       shift, and go to state 41
    GRAY_VID  shift, and go to state 42
    NUM       shift, and go to state 43
    REAL      shift, and go to state 44
    BOOL      shift, and go to state 45
    ID        shift, and go to state 46
    '{'       shift, and go to state 47
    '}'       shift, and go to state 194

    stmt                go to state 104
    loop_stmt           go to state 51
    if_block            go to state 52
    conditional_stmt    go to state 53
    return_stmt         go to state 54
    decl_stmt           go to state 55
    img_decl            go to state 56
    gray_img_decl       go to state 57
    vid_decl            go to state 58
    gray_vid_decl       go to state 59
    num_decl            go to state 60
    bool_decl           go to state 61
    real_decl           go to state 62
    num_array_decl      go to state 63
    real_array_decl     go to state 64
    call_stmt           go to state 65
    in_built_call_stmt  go to state 66
    expr_stmt           go to state 67


state 148

   35 stmt: '{' stmt_list '}' . new_lines

    NEWLINE  shift, and go to state 6

    new_lines  go to state 195


state 149

    4 func_body: '{' new_lines stmt_list '}' .

    $default  reduce using rule 4 (func_body)


state 150

   47 else_if_block_list: ELSE_IF . optional_new_lines '(' expr_pred ')' optional_new_lines ARROW optional_new_lines func_body

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 71
    optional_new_lines  go to state 196


state 151

   45 else: ARROW . optional_new_lines func_body

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 71
    optional_new_lines  go to state 197


state 152

   51 conditional_stmt: if_block optional_new_lines else . new_lines

    NEWLINE  shift, and go to state 6

    new_lines  go to state 198


state 153

   46 else_if_block_list: else_if_block_list . optional_new_lines ELSE_IF optional_new_lines '(' expr_pred ')' optional_new_lines ARROW optional_new_lines func_body
   48 conditional_stmt: if_block optional_new_lines else_if_block_list . optional_new_lines else new_lines
   50                 | if_block optional_new_lines else_if_block_list . new_lines

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 199
    optional_new_lines  go to state 200


state 154

  106 in_built_call_stmt: in_built_call_stmt DOT_OP ID . '(' arg_list ')'
  107                   | in_built_call_stmt DOT_OP ID . '(' ')'

    '('  shift, and go to state 201


state 155

   44 if_block: IF optional_new_lines '(' expr_pred . ')' optional_new_lines ARROW optional_new_lines func_body
  112 expr_pred: expr_pred . REL_OP expr_pred
  113          | expr_pred . LOG_OP expr_pred
  119          | expr_pred . BINARY_OP expr_pred
  120          | expr_pred . UNARY_OP

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    BINARY_OP  shift, and go to state 123
    UNARY_OP   shift, and go to state 124
    ')'        shift, and go to state 202


state 156

    5 new_lines: new_lines . NEWLINE
   57 return_stmt: RETURN VOID empty_return new_lines .

    NEWLINE  shift, and go to state 10

    $default  reduce using rule 57 (return_stmt)


state 157

  114 expr_pred: '(' expr_pred ')' .

    $default  reduce using rule 114 (expr_pred)


state 158

  112 expr_pred: expr_pred . REL_OP expr_pred
  113          | expr_pred . LOG_OP expr_pred
  113          | expr_pred LOG_OP expr_pred .
  119          | expr_pred . BINARY_OP expr_pred
  120          | expr_pred . UNARY_OP

    REL_OP  shift, and go to state 122

    $default  reduce using rule 113 (expr_pred)


state 159

  112 expr_pred: expr_pred . REL_OP expr_pred
  112          | expr_pred REL_OP expr_pred .
  113          | expr_pred . LOG_OP expr_pred
  119          | expr_pred . BINARY_OP expr_pred
  120          | expr_pred . UNARY_OP

    $default  reduce using rule 112 (expr_pred)


state 160

  112 expr_pred: expr_pred . REL_OP expr_pred
  113          | expr_pred . LOG_OP expr_pred
  119          | expr_pred . BINARY_OP expr_pred
  119          | expr_pred BINARY_OP expr_pred .
  120          | expr_pred . UNARY_OP

    LOG_OP  shift, and go to state 121
    REL_OP  shift, and go to state 122

    $default  reduce using rule 119 (expr_pred)


state 161

    5 new_lines: new_lines . NEWLINE
   56 return_stmt: RETURN expr_pred empty_return new_lines .

    NEWLINE  shift, and go to state 10

    $default  reduce using rule 56 (return_stmt)


state 162

   79 num_decl: NUM . ID
   80         | NUM . ID '=' expr_pred

    ID  shift, and go to state 89


state 163

   83 real_decl: REAL . ID
   84          | REAL . ID '=' expr_pred

    ID  shift, and go to state 92


state 164

   42 loop_stmt: LOOP optional_new_lines '(' optional_expr_pred . ')' optional_new_lines func_body

    ')'  shift, and go to state 203


state 165

   43 loop_stmt: LOOP optional_new_lines '(' optional_num_data_decl . ';' optional_expr_pred ';' optional_expr_pred ')' optional_new_lines func_body

    ';'  shift, and go to state 204


state 166

   40 optional_num_data_decl: numeric_data_decl .

    $default  reduce using rule 40 (optional_num_data_decl)


state 167

   52 numeric_data_decl: num_decl .

    $default  reduce using rule 52 (numeric_data_decl)


state 168

   54 numeric_data_decl: bool_decl .

    $default  reduce using rule 54 (numeric_data_decl)


state 169

   53 numeric_data_decl: real_decl .

    $default  reduce using rule 53 (numeric_data_decl)


state 170

   38 optional_expr_pred: expr_pred .
  112 expr_pred: expr_pred . REL_OP expr_pred
  113          | expr_pred . LOG_OP expr_pred
  119          | expr_pred . BINARY_OP expr_pred
  120          | expr_pred . UNARY_OP

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    BINARY_OP  shift, and go to state 123
    UNARY_OP   shift, and go to state 124

    $default  reduce using rule 38 (optional_expr_pred)


state 171

   67 img_decl: IMG ID '<' NUM_LIT . ',' NUM_LIT '>' new_lines
   68         | IMG ID '<' NUM_LIT . ',' NUM_LIT ',' NUM_LIT '>' new_lines

    ','  shift, and go to state 205


state 172

   69 img_decl: IMG ID '<' PATH . '>' new_lines

    '>'  shift, and go to state 206


state 173

   70 img_decl: IMG ID '=' expr_pred . new_lines
  112 expr_pred: expr_pred . REL_OP expr_pred
  113          | expr_pred . LOG_OP expr_pred
  119          | expr_pred . BINARY_OP expr_pred
  120          | expr_pred . UNARY_OP

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    NEWLINE    shift, and go to state 6
    BINARY_OP  shift, and go to state 123
    UNARY_OP   shift, and go to state 124

    new_lines  go to state 207


state 174

   71 gray_img_decl: GRAY_IMG ID '<' NUM_LIT . ',' NUM_LIT '>' new_lines
   72              | GRAY_IMG ID '<' NUM_LIT . ',' NUM_LIT ',' NUM_LIT '>' new_lines

    ','  shift, and go to state 208


state 175

   73 gray_img_decl: GRAY_IMG ID '<' PATH . '>' new_lines

    '>'  shift, and go to state 209


state 176

   74 gray_img_decl: GRAY_IMG ID '=' expr_pred . new_lines
  112 expr_pred: expr_pred . REL_OP expr_pred
  113          | expr_pred . LOG_OP expr_pred
  119          | expr_pred . BINARY_OP expr_pred
  120          | expr_pred . UNARY_OP

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    NEWLINE    shift, and go to state 6
    BINARY_OP  shift, and go to state 123
    UNARY_OP   shift, and go to state 124

    new_lines  go to state 210


state 177

   75 vid_decl: VID ID '<' NUM_LIT . ',' NUM_LIT '>' new_lines
   76         | VID ID '<' NUM_LIT . ',' NUM_LIT ',' NUM_LIT '>' new_lines

    ','  shift, and go to state 211


state 178

   77 gray_vid_decl: GRAY_VID ID '<' NUM_LIT . ',' NUM_LIT '>' new_lines
   78              | GRAY_VID ID '<' NUM_LIT . ',' NUM_LIT ',' NUM_LIT '>' new_lines

    ','  shift, and go to state 212


state 179

   80 num_decl: NUM ID '=' expr_pred .
  112 expr_pred: expr_pred . REL_OP expr_pred
  113          | expr_pred . LOG_OP expr_pred
  119          | expr_pred . BINARY_OP expr_pred
  120          | expr_pred . UNARY_OP

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    BINARY_OP  shift, and go to state 123
    UNARY_OP   shift, and go to state 124

    $default  reduce using rule 80 (num_decl)


state 180

  125 array_element: '[' expr_pred ',' . expr_pred ']'
  126              | '[' expr_pred ',' . expr_pred ',' expr_pred ']'

    NEG_OP    shift, and go to state 73
    BOOL_LIT  shift, and go to state 75
    ID        shift, and go to state 76
    NUM_LIT   shift, and go to state 77
    REAL_LIT  shift, and go to state 78
    INV_OP    shift, and go to state 79
    '('       shift, and go to state 80

    call_stmt           go to state 81
    in_built_call_stmt  go to state 82
    expr_pred           go to state 213


state 181

  124 array_element: '[' expr_pred ']' .

    $default  reduce using rule 124 (array_element)


state 182

   86 num_array_decl: NUM array_element ID '=' . ID new_lines
   87               | NUM array_element ID '=' . brak_pred new_lines

    ID   shift, and go to state 214
    '{'  shift, and go to state 215

    brak_pred  go to state 216


state 183

    5 new_lines: new_lines . NEWLINE
   85 num_array_decl: NUM array_element ID new_lines .

    NEWLINE  shift, and go to state 10

    $default  reduce using rule 85 (num_array_decl)


state 184

   84 real_decl: REAL ID '=' expr_pred .
  112 expr_pred: expr_pred . REL_OP expr_pred
  113          | expr_pred . LOG_OP expr_pred
  119          | expr_pred . BINARY_OP expr_pred
  120          | expr_pred . UNARY_OP

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    BINARY_OP  shift, and go to state 123
    UNARY_OP   shift, and go to state 124

    $default  reduce using rule 84 (real_decl)


state 185

   89 real_array_decl: REAL array_element ID '=' . ID new_lines
   90                | REAL array_element ID '=' . brak_pred new_lines

    ID   shift, and go to state 217
    '{'  shift, and go to state 215

    brak_pred  go to state 218


state 186

    5 new_lines: new_lines . NEWLINE
   88 real_array_decl: REAL array_element ID new_lines .

    NEWLINE  shift, and go to state 10

    $default  reduce using rule 88 (real_array_decl)


state 187

   82 bool_decl: BOOL ID '=' expr_pred .
  112 expr_pred: expr_pred . REL_OP expr_pred
  113          | expr_pred . LOG_OP expr_pred
  119          | expr_pred . BINARY_OP expr_pred
  120          | expr_pred . UNARY_OP

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    BINARY_OP  shift, and go to state 123
    UNARY_OP   shift, and go to state 124

    $default  reduce using rule 82 (bool_decl)


state 188

  104 in_built_call_stmt: ID DOT_OP ID '(' . arg_list ')'
  105                   | ID DOT_OP ID '(' . ')'

    NEG_OP    shift, and go to state 73
    BOOL_LIT  shift, and go to state 75
    ID        shift, and go to state 76
    NUM_LIT   shift, and go to state 77
    REAL_LIT  shift, and go to state 78
    INV_OP    shift, and go to state 79
    '('       shift, and go to state 80
    ')'       shift, and go to state 219

    call_stmt           go to state 81
    arg_list            go to state 220
    in_built_call_stmt  go to state 82
    expr_pred           go to state 142


state 189

  100 call_stmt: ID '(' arg_list ')' .

    $default  reduce using rule 100 (call_stmt)


state 190

  102 arg_list: arg_list ',' . expr_pred

    NEG_OP    shift, and go to state 73
    BOOL_LIT  shift, and go to state 75
    ID        shift, and go to state 76
    NUM_LIT   shift, and go to state 77
    REAL_LIT  shift, and go to state 78
    INV_OP    shift, and go to state 79
    '('       shift, and go to state 80

    call_stmt           go to state 81
    in_built_call_stmt  go to state 82
    expr_pred           go to state 221


state 191

    5 new_lines: new_lines . NEWLINE
  122 expr_stmt: ID '=' expr_pred new_lines .

    NEWLINE  shift, and go to state 10

    $default  reduce using rule 122 (expr_stmt)


state 192

  112 expr_pred: expr_pred . REL_OP expr_pred
  113          | expr_pred . LOG_OP expr_pred
  119          | expr_pred . BINARY_OP expr_pred
  120          | expr_pred . UNARY_OP
  123 expr_stmt: ID array_element '=' expr_pred . new_lines

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    NEWLINE    shift, and go to state 6
    BINARY_OP  shift, and go to state 123
    UNARY_OP   shift, and go to state 124

    new_lines  go to state 222


state 193

    5 new_lines: new_lines . NEWLINE
   36 stmt: '{' new_lines '}' new_lines .

    NEWLINE  shift, and go to state 10

    $default  reduce using rule 36 (stmt)


state 194

   34 stmt: '{' new_lines stmt_list '}' . new_lines

    NEWLINE  shift, and go to state 6

    new_lines  go to state 223


state 195

    5 new_lines: new_lines . NEWLINE
   35 stmt: '{' stmt_list '}' new_lines .

    NEWLINE  shift, and go to state 10

    $default  reduce using rule 35 (stmt)


state 196

   47 else_if_block_list: ELSE_IF optional_new_lines . '(' expr_pred ')' optional_new_lines ARROW optional_new_lines func_body

    '('  shift, and go to state 224


state 197

   45 else: ARROW optional_new_lines . func_body

    '{'  shift, and go to state 32

    func_body  go to state 225


state 198

    5 new_lines: new_lines . NEWLINE
   51 conditional_stmt: if_block optional_new_lines else new_lines .

    NEWLINE  shift, and go to state 10

    $default  reduce using rule 51 (conditional_stmt)


state 199

    5 new_lines: new_lines . NEWLINE
    8 optional_new_lines: new_lines .
   50 conditional_stmt: if_block optional_new_lines else_if_block_list new_lines .

    NEWLINE  shift, and go to state 10

    ELSE_IF   reduce using rule 8 (optional_new_lines)
    ARROW     reduce using rule 8 (optional_new_lines)
    $default  reduce using rule 50 (conditional_stmt)


state 200

   46 else_if_block_list: else_if_block_list optional_new_lines . ELSE_IF optional_new_lines '(' expr_pred ')' optional_new_lines ARROW optional_new_lines func_body
   48 conditional_stmt: if_block optional_new_lines else_if_block_list optional_new_lines . else new_lines

    ELSE_IF  shift, and go to state 226
    ARROW    shift, and go to state 151

    else  go to state 227


state 201

  106 in_built_call_stmt: in_built_call_stmt DOT_OP ID '(' . arg_list ')'
  107                   | in_built_call_stmt DOT_OP ID '(' . ')'

    NEG_OP    shift, and go to state 73
    BOOL_LIT  shift, and go to state 75
    ID        shift, and go to state 76
    NUM_LIT   shift, and go to state 77
    REAL_LIT  shift, and go to state 78
    INV_OP    shift, and go to state 79
    '('       shift, and go to state 80
    ')'       shift, and go to state 228

    call_stmt           go to state 81
    arg_list            go to state 229
    in_built_call_stmt  go to state 82
    expr_pred           go to state 142


state 202

   44 if_block: IF optional_new_lines '(' expr_pred ')' . optional_new_lines ARROW optional_new_lines func_body

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 71
    optional_new_lines  go to state 230


state 203

   42 loop_stmt: LOOP optional_new_lines '(' optional_expr_pred ')' . optional_new_lines func_body

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 71
    optional_new_lines  go to state 231


state 204

   43 loop_stmt: LOOP optional_new_lines '(' optional_num_data_decl ';' . optional_expr_pred ';' optional_expr_pred ')' optional_new_lines func_body

    NEG_OP    shift, and go to state 73
    BOOL_LIT  shift, and go to state 75
    ID        shift, and go to state 76
    NUM_LIT   shift, and go to state 77
    REAL_LIT  shift, and go to state 78
    INV_OP    shift, and go to state 79
    '('       shift, and go to state 80

    $default  reduce using rule 39 (optional_expr_pred)

    optional_expr_pred  go to state 232
    call_stmt           go to state 81
    in_built_call_stmt  go to state 82
    expr_pred           go to state 170


state 205

   67 img_decl: IMG ID '<' NUM_LIT ',' . NUM_LIT '>' new_lines
   68         | IMG ID '<' NUM_LIT ',' . NUM_LIT ',' NUM_LIT '>' new_lines

    NUM_LIT  shift, and go to state 233


state 206

   69 img_decl: IMG ID '<' PATH '>' . new_lines

    NEWLINE  shift, and go to state 6

    new_lines  go to state 234


state 207

    5 new_lines: new_lines . NEWLINE
   70 img_decl: IMG ID '=' expr_pred new_lines .

    NEWLINE  shift, and go to state 10

    $default  reduce using rule 70 (img_decl)


state 208

   71 gray_img_decl: GRAY_IMG ID '<' NUM_LIT ',' . NUM_LIT '>' new_lines
   72              | GRAY_IMG ID '<' NUM_LIT ',' . NUM_LIT ',' NUM_LIT '>' new_lines

    NUM_LIT  shift, and go to state 235


state 209

   73 gray_img_decl: GRAY_IMG ID '<' PATH '>' . new_lines

    NEWLINE  shift, and go to state 6

    new_lines  go to state 236


state 210

    5 new_lines: new_lines . NEWLINE
   74 gray_img_decl: GRAY_IMG ID '=' expr_pred new_lines .

    NEWLINE  shift, and go to state 10

    $default  reduce using rule 74 (gray_img_decl)


state 211

   75 vid_decl: VID ID '<' NUM_LIT ',' . NUM_LIT '>' new_lines
   76         | VID ID '<' NUM_LIT ',' . NUM_LIT ',' NUM_LIT '>' new_lines

    NUM_LIT  shift, and go to state 237


state 212

   77 gray_vid_decl: GRAY_VID ID '<' NUM_LIT ',' . NUM_LIT '>' new_lines
   78              | GRAY_VID ID '<' NUM_LIT ',' . NUM_LIT ',' NUM_LIT '>' new_lines

    NUM_LIT  shift, and go to state 238


state 213

  112 expr_pred: expr_pred . REL_OP expr_pred
  113          | expr_pred . LOG_OP expr_pred
  119          | expr_pred . BINARY_OP expr_pred
  120          | expr_pred . UNARY_OP
  125 array_element: '[' expr_pred ',' expr_pred . ']'
  126              | '[' expr_pred ',' expr_pred . ',' expr_pred ']'

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    BINARY_OP  shift, and go to state 123
    UNARY_OP   shift, and go to state 124
    ','        shift, and go to state 239
    ']'        shift, and go to state 240


state 214

   86 num_array_decl: NUM array_element ID '=' ID . new_lines

    NEWLINE  shift, and go to state 6

    new_lines  go to state 241


state 215

   91 brak_pred: '{' . brak_pred_list '}'
   92          | '{' . lit_list '}'

    BOOL_LIT  shift, and go to state 242
    NUM_LIT   shift, and go to state 243
    REAL_LIT  shift, and go to state 244
    '{'       shift, and go to state 215

    brak_pred       go to state 245
    brak_pred_list  go to state 246
    lit_list        go to state 247
    lit             go to state 248


state 216

   87 num_array_decl: NUM array_element ID '=' brak_pred . new_lines

    NEWLINE  shift, and go to state 6

    new_lines  go to state 249


state 217

   89 real_array_decl: REAL array_element ID '=' ID . new_lines

    NEWLINE  shift, and go to state 6

    new_lines  go to state 250


state 218

   90 real_array_decl: REAL array_element ID '=' brak_pred . new_lines

    NEWLINE  shift, and go to state 6

    new_lines  go to state 251


state 219

  105 in_built_call_stmt: ID DOT_OP ID '(' ')' .

    $default  reduce using rule 105 (in_built_call_stmt)


state 220

  102 arg_list: arg_list . ',' expr_pred
  104 in_built_call_stmt: ID DOT_OP ID '(' arg_list . ')'

    ')'  shift, and go to state 252
    ','  shift, and go to state 190


state 221

  102 arg_list: arg_list ',' expr_pred .
  112 expr_pred: expr_pred . REL_OP expr_pred
  113          | expr_pred . LOG_OP expr_pred
  119          | expr_pred . BINARY_OP expr_pred
  120          | expr_pred . UNARY_OP

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    BINARY_OP  shift, and go to state 123
    UNARY_OP   shift, and go to state 124

    $default  reduce using rule 102 (arg_list)


state 222

    5 new_lines: new_lines . NEWLINE
  123 expr_stmt: ID array_element '=' expr_pred new_lines .

    NEWLINE  shift, and go to state 10

    $default  reduce using rule 123 (expr_stmt)


state 223

    5 new_lines: new_lines . NEWLINE
   34 stmt: '{' new_lines stmt_list '}' new_lines .

    NEWLINE  shift, and go to state 10

    $default  reduce using rule 34 (stmt)


state 224

   47 else_if_block_list: ELSE_IF optional_new_lines '(' . expr_pred ')' optional_new_lines ARROW optional_new_lines func_body

    NEG_OP    shift, and go to state 73
    BOOL_LIT  shift, and go to state 75
    ID        shift, and go to state 76
    NUM_LIT   shift, and go to state 77
    REAL_LIT  shift, and go to state 78
    INV_OP    shift, and go to state 79
    '('       shift, and go to state 80

    call_stmt           go to state 81
    in_built_call_stmt  go to state 82
    expr_pred           go to state 253


state 225

   45 else: ARROW optional_new_lines func_body .

    $default  reduce using rule 45 (else)


state 226

   46 else_if_block_list: else_if_block_list optional_new_lines ELSE_IF . optional_new_lines '(' expr_pred ')' optional_new_lines ARROW optional_new_lines func_body

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 71
    optional_new_lines  go to state 254


state 227

   48 conditional_stmt: if_block optional_new_lines else_if_block_list optional_new_lines else . new_lines

    NEWLINE  shift, and go to state 6

    new_lines  go to state 255


state 228

  107 in_built_call_stmt: in_built_call_stmt DOT_OP ID '(' ')' .

    $default  reduce using rule 107 (in_built_call_stmt)


state 229

  102 arg_list: arg_list . ',' expr_pred
  106 in_built_call_stmt: in_built_call_stmt DOT_OP ID '(' arg_list . ')'

    ')'  shift, and go to state 256
    ','  shift, and go to state 190


state 230

   44 if_block: IF optional_new_lines '(' expr_pred ')' optional_new_lines . ARROW optional_new_lines func_body

    ARROW  shift, and go to state 257


state 231

   42 loop_stmt: LOOP optional_new_lines '(' optional_expr_pred ')' optional_new_lines . func_body

    '{'  shift, and go to state 32

    func_body  go to state 258


state 232

   43 loop_stmt: LOOP optional_new_lines '(' optional_num_data_decl ';' optional_expr_pred . ';' optional_expr_pred ')' optional_new_lines func_body

    ';'  shift, and go to state 259


state 233

   67 img_decl: IMG ID '<' NUM_LIT ',' NUM_LIT . '>' new_lines
   68         | IMG ID '<' NUM_LIT ',' NUM_LIT . ',' NUM_LIT '>' new_lines

    ','  shift, and go to state 260
    '>'  shift, and go to state 261


state 234

    5 new_lines: new_lines . NEWLINE
   69 img_decl: IMG ID '<' PATH '>' new_lines .

    NEWLINE  shift, and go to state 10

    $default  reduce using rule 69 (img_decl)


state 235

   71 gray_img_decl: GRAY_IMG ID '<' NUM_LIT ',' NUM_LIT . '>' new_lines
   72              | GRAY_IMG ID '<' NUM_LIT ',' NUM_LIT . ',' NUM_LIT '>' new_lines

    ','  shift, and go to state 262
    '>'  shift, and go to state 263


state 236

    5 new_lines: new_lines . NEWLINE
   73 gray_img_decl: GRAY_IMG ID '<' PATH '>' new_lines .

    NEWLINE  shift, and go to state 10

    $default  reduce using rule 73 (gray_img_decl)


state 237

   75 vid_decl: VID ID '<' NUM_LIT ',' NUM_LIT . '>' new_lines
   76         | VID ID '<' NUM_LIT ',' NUM_LIT . ',' NUM_LIT '>' new_lines

    ','  shift, and go to state 264
    '>'  shift, and go to state 265


state 238

   77 gray_vid_decl: GRAY_VID ID '<' NUM_LIT ',' NUM_LIT . '>' new_lines
   78              | GRAY_VID ID '<' NUM_LIT ',' NUM_LIT . ',' NUM_LIT '>' new_lines

    ','  shift, and go to state 266
    '>'  shift, and go to state 267


state 239

  126 array_element: '[' expr_pred ',' expr_pred ',' . expr_pred ']'

    NEG_OP    shift, and go to state 73
    BOOL_LIT  shift, and go to state 75
    ID        shift, and go to state 76
    NUM_LIT   shift, and go to state 77
    REAL_LIT  shift, and go to state 78
    INV_OP    shift, and go to state 79
    '('       shift, and go to state 80

    call_stmt           go to state 81
    in_built_call_stmt  go to state 82
    expr_pred           go to state 268


state 240

  125 array_element: '[' expr_pred ',' expr_pred ']' .

    $default  reduce using rule 125 (array_element)


state 241

    5 new_lines: new_lines . NEWLINE
   86 num_array_decl: NUM array_element ID '=' ID new_lines .

    NEWLINE  shift, and go to state 10

    $default  reduce using rule 86 (num_array_decl)


state 242

   99 lit: BOOL_LIT .

    $default  reduce using rule 99 (lit)


state 243

   97 lit: NUM_LIT .

    $default  reduce using rule 97 (lit)


state 244

   98 lit: REAL_LIT .

    $default  reduce using rule 98 (lit)


state 245

   94 brak_pred_list: brak_pred .

    $default  reduce using rule 94 (brak_pred_list)


state 246

   91 brak_pred: '{' brak_pred_list . '}'
   93 brak_pred_list: brak_pred_list . ',' brak_pred

    '}'  shift, and go to state 269
    ','  shift, and go to state 270


state 247

   92 brak_pred: '{' lit_list . '}'
   95 lit_list: lit_list . ',' lit

    '}'  shift, and go to state 271
    ','  shift, and go to state 272


state 248

   96 lit_list: lit .

    $default  reduce using rule 96 (lit_list)


state 249

    5 new_lines: new_lines . NEWLINE
   87 num_array_decl: NUM array_element ID '=' brak_pred new_lines .

    NEWLINE  shift, and go to state 10

    $default  reduce using rule 87 (num_array_decl)


state 250

    5 new_lines: new_lines . NEWLINE
   89 real_array_decl: REAL array_element ID '=' ID new_lines .

    NEWLINE  shift, and go to state 10

    $default  reduce using rule 89 (real_array_decl)


state 251

    5 new_lines: new_lines . NEWLINE
   90 real_array_decl: REAL array_element ID '=' brak_pred new_lines .

    NEWLINE  shift, and go to state 10

    $default  reduce using rule 90 (real_array_decl)


state 252

  104 in_built_call_stmt: ID DOT_OP ID '(' arg_list ')' .

    $default  reduce using rule 104 (in_built_call_stmt)


state 253

   47 else_if_block_list: ELSE_IF optional_new_lines '(' expr_pred . ')' optional_new_lines ARROW optional_new_lines func_body
  112 expr_pred: expr_pred . REL_OP expr_pred
  113          | expr_pred . LOG_OP expr_pred
  119          | expr_pred . BINARY_OP expr_pred
  120          | expr_pred . UNARY_OP

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    BINARY_OP  shift, and go to state 123
    UNARY_OP   shift, and go to state 124
    ')'        shift, and go to state 273


state 254

   46 else_if_block_list: else_if_block_list optional_new_lines ELSE_IF optional_new_lines . '(' expr_pred ')' optional_new_lines ARROW optional_new_lines func_body

    '('  shift, and go to state 274


state 255

    5 new_lines: new_lines . NEWLINE
   48 conditional_stmt: if_block optional_new_lines else_if_block_list optional_new_lines else new_lines .

    NEWLINE  shift, and go to state 10

    $default  reduce using rule 48 (conditional_stmt)


state 256

  106 in_built_call_stmt: in_built_call_stmt DOT_OP ID '(' arg_list ')' .

    $default  reduce using rule 106 (in_built_call_stmt)


state 257

   44 if_block: IF optional_new_lines '(' expr_pred ')' optional_new_lines ARROW . optional_new_lines func_body

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 71
    optional_new_lines  go to state 275


state 258

   42 loop_stmt: LOOP optional_new_lines '(' optional_expr_pred ')' optional_new_lines func_body .

    $default  reduce using rule 42 (loop_stmt)


state 259

   43 loop_stmt: LOOP optional_new_lines '(' optional_num_data_decl ';' optional_expr_pred ';' . optional_expr_pred ')' optional_new_lines func_body

    NEG_OP    shift, and go to state 73
    BOOL_LIT  shift, and go to state 75
    ID        shift, and go to state 76
    NUM_LIT   shift, and go to state 77
    REAL_LIT  shift, and go to state 78
    INV_OP    shift, and go to state 79
    '('       shift, and go to state 80

    $default  reduce using rule 39 (optional_expr_pred)

    optional_expr_pred  go to state 276
    call_stmt           go to state 81
    in_built_call_stmt  go to state 82
    expr_pred           go to state 170


state 260

   68 img_decl: IMG ID '<' NUM_LIT ',' NUM_LIT ',' . NUM_LIT '>' new_lines

    NUM_LIT  shift, and go to state 277


state 261

   67 img_decl: IMG ID '<' NUM_LIT ',' NUM_LIT '>' . new_lines

    NEWLINE  shift, and go to state 6

    new_lines  go to state 278


state 262

   72 gray_img_decl: GRAY_IMG ID '<' NUM_LIT ',' NUM_LIT ',' . NUM_LIT '>' new_lines

    NUM_LIT  shift, and go to state 279


state 263

   71 gray_img_decl: GRAY_IMG ID '<' NUM_LIT ',' NUM_LIT '>' . new_lines

    NEWLINE  shift, and go to state 6

    new_lines  go to state 280


state 264

   76 vid_decl: VID ID '<' NUM_LIT ',' NUM_LIT ',' . NUM_LIT '>' new_lines

    NUM_LIT  shift, and go to state 281


state 265

   75 vid_decl: VID ID '<' NUM_LIT ',' NUM_LIT '>' . new_lines

    NEWLINE  shift, and go to state 6

    new_lines  go to state 282


state 266

   78 gray_vid_decl: GRAY_VID ID '<' NUM_LIT ',' NUM_LIT ',' . NUM_LIT '>' new_lines

    NUM_LIT  shift, and go to state 283


state 267

   77 gray_vid_decl: GRAY_VID ID '<' NUM_LIT ',' NUM_LIT '>' . new_lines

    NEWLINE  shift, and go to state 6

    new_lines  go to state 284


state 268

  112 expr_pred: expr_pred . REL_OP expr_pred
  113          | expr_pred . LOG_OP expr_pred
  119          | expr_pred . BINARY_OP expr_pred
  120          | expr_pred . UNARY_OP
  126 array_element: '[' expr_pred ',' expr_pred ',' expr_pred . ']'

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    BINARY_OP  shift, and go to state 123
    UNARY_OP   shift, and go to state 124
    ']'        shift, and go to state 285


state 269

   91 brak_pred: '{' brak_pred_list '}' .

    $default  reduce using rule 91 (brak_pred)


state 270

   93 brak_pred_list: brak_pred_list ',' . brak_pred

    '{'  shift, and go to state 215

    brak_pred  go to state 286


state 271

   92 brak_pred: '{' lit_list '}' .

    $default  reduce using rule 92 (brak_pred)


state 272

   95 lit_list: lit_list ',' . lit

    BOOL_LIT  shift, and go to state 242
    NUM_LIT   shift, and go to state 243
    REAL_LIT  shift, and go to state 244

    lit  go to state 287


state 273

   47 else_if_block_list: ELSE_IF optional_new_lines '(' expr_pred ')' . optional_new_lines ARROW optional_new_lines func_body

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 71
    optional_new_lines  go to state 288


state 274

   46 else_if_block_list: else_if_block_list optional_new_lines ELSE_IF optional_new_lines '(' . expr_pred ')' optional_new_lines ARROW optional_new_lines func_body

    NEG_OP    shift, and go to state 73
    BOOL_LIT  shift, and go to state 75
    ID        shift, and go to state 76
    NUM_LIT   shift, and go to state 77
    REAL_LIT  shift, and go to state 78
    INV_OP    shift, and go to state 79
    '('       shift, and go to state 80

    call_stmt           go to state 81
    in_built_call_stmt  go to state 82
    expr_pred           go to state 289


state 275

   44 if_block: IF optional_new_lines '(' expr_pred ')' optional_new_lines ARROW optional_new_lines . func_body

    '{'  shift, and go to state 32

    func_body  go to state 290


state 276

   43 loop_stmt: LOOP optional_new_lines '(' optional_num_data_decl ';' optional_expr_pred ';' optional_expr_pred . ')' optional_new_lines func_body

    ')'  shift, and go to state 291


state 277

   68 img_decl: IMG ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT . '>' new_lines

    '>'  shift, and go to state 292


state 278

    5 new_lines: new_lines . NEWLINE
   67 img_decl: IMG ID '<' NUM_LIT ',' NUM_LIT '>' new_lines .

    NEWLINE  shift, and go to state 10

    $default  reduce using rule 67 (img_decl)


state 279

   72 gray_img_decl: GRAY_IMG ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT . '>' new_lines

    '>'  shift, and go to state 293


state 280

    5 new_lines: new_lines . NEWLINE
   71 gray_img_decl: GRAY_IMG ID '<' NUM_LIT ',' NUM_LIT '>' new_lines .

    NEWLINE  shift, and go to state 10

    $default  reduce using rule 71 (gray_img_decl)


state 281

   76 vid_decl: VID ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT . '>' new_lines

    '>'  shift, and go to state 294


state 282

    5 new_lines: new_lines . NEWLINE
   75 vid_decl: VID ID '<' NUM_LIT ',' NUM_LIT '>' new_lines .

    NEWLINE  shift, and go to state 10

    $default  reduce using rule 75 (vid_decl)


state 283

   78 gray_vid_decl: GRAY_VID ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT . '>' new_lines

    '>'  shift, and go to state 295


state 284

    5 new_lines: new_lines . NEWLINE
   77 gray_vid_decl: GRAY_VID ID '<' NUM_LIT ',' NUM_LIT '>' new_lines .

    NEWLINE  shift, and go to state 10

    $default  reduce using rule 77 (gray_vid_decl)


state 285

  126 array_element: '[' expr_pred ',' expr_pred ',' expr_pred ']' .

    $default  reduce using rule 126 (array_element)


state 286

   93 brak_pred_list: brak_pred_list ',' brak_pred .

    $default  reduce using rule 93 (brak_pred_list)


state 287

   95 lit_list: lit_list ',' lit .

    $default  reduce using rule 95 (lit_list)


state 288

   47 else_if_block_list: ELSE_IF optional_new_lines '(' expr_pred ')' optional_new_lines . ARROW optional_new_lines func_body

    ARROW  shift, and go to state 296


state 289

   46 else_if_block_list: else_if_block_list optional_new_lines ELSE_IF optional_new_lines '(' expr_pred . ')' optional_new_lines ARROW optional_new_lines func_body
  112 expr_pred: expr_pred . REL_OP expr_pred
  113          | expr_pred . LOG_OP expr_pred
  119          | expr_pred . BINARY_OP expr_pred
  120          | expr_pred . UNARY_OP

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    BINARY_OP  shift, and go to state 123
    UNARY_OP   shift, and go to state 124
    ')'        shift, and go to state 297


state 290

   44 if_block: IF optional_new_lines '(' expr_pred ')' optional_new_lines ARROW optional_new_lines func_body .

    $default  reduce using rule 44 (if_block)


state 291

   43 loop_stmt: LOOP optional_new_lines '(' optional_num_data_decl ';' optional_expr_pred ';' optional_expr_pred ')' . optional_new_lines func_body

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 71
    optional_new_lines  go to state 298


state 292

   68 img_decl: IMG ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' . new_lines

    NEWLINE  shift, and go to state 6

    new_lines  go to state 299


state 293

   72 gray_img_decl: GRAY_IMG ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' . new_lines

    NEWLINE  shift, and go to state 6

    new_lines  go to state 300


state 294

   76 vid_decl: VID ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' . new_lines

    NEWLINE  shift, and go to state 6

    new_lines  go to state 301


state 295

   78 gray_vid_decl: GRAY_VID ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' . new_lines

    NEWLINE  shift, and go to state 6

    new_lines  go to state 302


state 296

   47 else_if_block_list: ELSE_IF optional_new_lines '(' expr_pred ')' optional_new_lines ARROW . optional_new_lines func_body

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 71
    optional_new_lines  go to state 303


state 297

   46 else_if_block_list: else_if_block_list optional_new_lines ELSE_IF optional_new_lines '(' expr_pred ')' . optional_new_lines ARROW optional_new_lines func_body

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 71
    optional_new_lines  go to state 304


state 298

   43 loop_stmt: LOOP optional_new_lines '(' optional_num_data_decl ';' optional_expr_pred ';' optional_expr_pred ')' optional_new_lines . func_body

    '{'  shift, and go to state 32

    func_body  go to state 305


state 299

    5 new_lines: new_lines . NEWLINE
   68 img_decl: IMG ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines .

    NEWLINE  shift, and go to state 10

    $default  reduce using rule 68 (img_decl)


state 300

    5 new_lines: new_lines . NEWLINE
   72 gray_img_decl: GRAY_IMG ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines .

    NEWLINE  shift, and go to state 10

    $default  reduce using rule 72 (gray_img_decl)


state 301

    5 new_lines: new_lines . NEWLINE
   76 vid_decl: VID ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines .

    NEWLINE  shift, and go to state 10

    $default  reduce using rule 76 (vid_decl)


state 302

    5 new_lines: new_lines . NEWLINE
   78 gray_vid_decl: GRAY_VID ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines .

    NEWLINE  shift, and go to state 10

    $default  reduce using rule 78 (gray_vid_decl)


state 303

   47 else_if_block_list: ELSE_IF optional_new_lines '(' expr_pred ')' optional_new_lines ARROW optional_new_lines . func_body

    '{'  shift, and go to state 32

    func_body  go to state 306


state 304

   46 else_if_block_list: else_if_block_list optional_new_lines ELSE_IF optional_new_lines '(' expr_pred ')' optional_new_lines . ARROW optional_new_lines func_body

    ARROW  shift, and go to state 307


state 305

   43 loop_stmt: LOOP optional_new_lines '(' optional_num_data_decl ';' optional_expr_pred ';' optional_expr_pred ')' optional_new_lines func_body .

    $default  reduce using rule 43 (loop_stmt)


state 306

   47 else_if_block_list: ELSE_IF optional_new_lines '(' expr_pred ')' optional_new_lines ARROW optional_new_lines func_body .

    $default  reduce using rule 47 (else_if_block_list)


state 307

   46 else_if_block_list: else_if_block_list optional_new_lines ELSE_IF optional_new_lines '(' expr_pred ')' optional_new_lines ARROW . optional_new_lines func_body

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 71
    optional_new_lines  go to state 308


state 308

   46 else_if_block_list: else_if_block_list optional_new_lines ELSE_IF optional_new_lines '(' expr_pred ')' optional_new_lines ARROW optional_new_lines . func_body

    '{'  shift, and go to state 32

    func_body  go to state 309


state 309

   46 else_if_block_list: else_if_block_list optional_new_lines ELSE_IF optional_new_lines '(' expr_pred ')' optional_new_lines ARROW optional_new_lines func_body .

    $default  reduce using rule 46 (else_if_block_list)
