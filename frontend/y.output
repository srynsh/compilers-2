Terminals unused in grammar

    CONTINUE
    BREAK
    SHORT_IF
    LONG_IF


State 52 conflicts: 1 shift/reduce
State 153 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program function new_lines
    2        | function new_lines
    3        | function
    4        | program function

    5 func_body: '{' stmt_list '}'
    6          | '{' new_lines stmt_list '}'

    7 new_lines: new_lines NEWLINE
    8          | NEWLINE

    9 optional_new_lines: ε
   10                   | new_lines

   11 function: INK ID '(' par_list ')' ARROW RET_TYPE func_body
   12         | INK ID '(' ')' ARROW RET_TYPE func_body
   13         | INK ID '(' par_list ')' ARROW RET_TYPE new_lines func_body
   14         | INK ID '(' ')' ARROW RET_TYPE new_lines func_body

   15 RET_TYPE: datatype
   16         | VOID

   17 par_list: par_list ',' par
   18         | par

   19 par: datatype ID

   20 datatype: IMG
   21         | GRAY_IMG
   22         | VID
   23         | GRAY_VID
   24         | NUM
   25         | REAL
   26         | BOOL

   27 stmt_list: stmt
   28          | stmt_list stmt

   29 stmt: decl_stmt
   30     | conditional_stmt
   31     | call_stmt new_lines
   32     | in_built_call_stmt new_lines
   33     | expr_stmt
   34     | return_stmt
   35     | loop_stmt new_lines
   36     | '{' new_lines stmt_list '}' new_lines
   37     | '{' stmt_list '}' new_lines
   38     | '{' new_lines '}' new_lines
   39     | '{' '}' new_lines

   40 optional_expr_pred: expr_pred
   41                   | ε

   42 optional_num_data_decl: numeric_data_decl
   43                       | ε

   44 loop_stmt: LOOP optional_new_lines '(' optional_expr_pred ')' optional_new_lines func_body
   45          | LOOP optional_new_lines '(' optional_num_data_decl ';' optional_expr_pred ';' optional_expr_pred ')' optional_new_lines func_body

   46 if_block: IF '(' expr_pred ')' optional_new_lines ARROW optional_new_lines func_body

   47 else: ARROW optional_new_lines func_body

   48 else_if_block_list: else_if_block_list optional_new_lines ELSE_IF '(' expr_pred ')' optional_new_lines ARROW optional_new_lines func_body
   49                   | ELSE_IF '(' expr_pred ')' optional_new_lines ARROW optional_new_lines func_body

   50 lmao: ε

   51 conditional_stmt: if_block optional_new_lines else_if_block_list optional_new_lines else lmao new_lines
   52                 | if_block lmao new_lines
   53                 | if_block optional_new_lines else_if_block_list lmao new_lines
   54                 | if_block optional_new_lines else lmao new_lines

   55 numeric_data_decl: num_decl
   56                  | real_decl
   57                  | bool_decl

   58 return_stmt: RETURN expr_pred new_lines
   59            | RETURN VOID new_lines

   60 decl_stmt: img_decl
   61          | gray_img_decl
   62          | vid_decl
   63          | gray_vid_decl
   64          | num_decl new_lines
   65          | bool_decl new_lines
   66          | real_decl new_lines
   67          | num_array_decl
   68          | real_array_decl

   69 img_decl: IMG ID '<' NUM_LIT ',' NUM_LIT '>' new_lines
   70         | IMG ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines
   71         | IMG ID '<' PATH '>' new_lines
   72         | IMG ID '=' expr_pred new_lines

   73 gray_img_decl: GRAY_IMG ID '<' NUM_LIT ',' NUM_LIT '>' new_lines
   74              | GRAY_IMG ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines
   75              | GRAY_IMG ID '<' PATH '>' new_lines
   76              | GRAY_IMG ID '=' expr_pred new_lines

   77 vid_decl: VID ID '<' NUM_LIT ',' NUM_LIT '>' new_lines
   78         | VID ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines

   79 gray_vid_decl: GRAY_VID ID '<' NUM_LIT ',' NUM_LIT '>' new_lines
   80              | GRAY_VID ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines

   81 num_decl: NUM ID
   82         | NUM ID '=' expr_pred

   83 bool_decl: BOOL ID
   84          | BOOL ID '=' expr_pred

   85 real_decl: REAL ID
   86          | REAL ID '=' expr_pred

   87 num_array_decl: NUM array_element ID new_lines
   88               | NUM array_element ID '=' ID new_lines
   89               | NUM array_element ID '=' brak_pred new_lines

   90 real_array_decl: REAL array_element ID new_lines
   91                | REAL array_element ID '=' ID new_lines
   92                | REAL array_element ID '=' brak_pred new_lines

   93 brak_pred: '{' brak_pred_list '}'
   94          | '{' lit_list '}'

   95 brak_pred_list: brak_pred_list ',' brak_pred
   96               | brak_pred

   97 lit_list: lit_list ',' lit
   98         | lit

   99 lit: NUM_LIT
  100    | REAL_LIT
  101    | BOOL_LIT

  102 call_stmt: ID '(' arg_list ')'
  103          | ID '(' ')'

  104 arg_list: arg_list ',' expr_pred
  105         | expr_pred

  106 in_built_call_stmt: ID DOT_OP ID '(' arg_list ')'
  107                   | ID DOT_OP ID '(' ')'
  108                   | in_built_call_stmt DOT_OP ID '(' arg_list ')'
  109                   | in_built_call_stmt DOT_OP ID '(' ')'

  110 expr_pred: ID
  111          | NUM_LIT
  112          | REAL_LIT
  113          | BOOL_LIT
  114          | expr_pred REL_OP expr_pred
  115          | expr_pred LOG_OP expr_pred
  116          | '(' expr_pred ')'
  117          | NEG_OP expr_pred
  118          | call_stmt
  119          | in_built_call_stmt
  120          | ID array_element
  121          | expr_pred BINARY_OP expr_pred
  122          | expr_pred UNARY_OP
  123          | INV_OP expr_pred

  124 expr_stmt: ID '=' expr_pred new_lines
  125          | ID array_element '=' expr_pred new_lines

  126 array_element: '[' expr_pred ']'
  127              | '[' expr_pred ',' expr_pred ']'
  128              | '[' expr_pred ',' expr_pred ',' expr_pred ']'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 11 12 13 14 44 45 46 48 49 102 103 106 107 108 109 116
    ')' (41) 11 12 13 14 44 45 46 48 49 102 103 106 107 108 109 116
    ',' (44) 17 69 70 73 74 77 78 79 80 95 97 104 127 128
    ';' (59) 45
    '<' (60) 69 70 71 73 74 75 77 78 79 80
    '=' (61) 72 76 82 84 86 88 89 91 92 124 125
    '>' (62) 69 70 71 73 74 75 77 78 79 80
    '[' (91) 126 127 128
    ']' (93) 126 127 128
    '{' (123) 5 6 36 37 38 39 93 94
    '}' (125) 5 6 36 37 38 39 93 94
    error (256)
    IF (258) 46
    ELSE_IF (259) 48 49
    RETURN (260) 58 59
    CONTINUE (261)
    BREAK (262)
    LOOP (263) 44 45
    INK (264) 11 12 13 14
    ARROW (265) 11 12 13 14 46 47 48 49
    DOT_OP (266) 106 107 108 109
    LOG_OP (267) 115
    REL_OP (268) 114
    NEG_OP (269) 117
    IMG (270) 20 69 70 71 72
    GRAY_IMG (271) 21 73 74 75 76
    VID (272) 22 77 78
    GRAY_VID (273) 23 79 80
    NUM (274) 24 81 82 87 88 89
    REAL (275) 25 85 86 90 91 92
    VOID (276) 16 59
    BOOL (277) 26 83 84
    BOOL_LIT (278) 101 113
    NEWLINE (279) 7 8
    ID (280) 11 12 13 14 19 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 102 103 106 107 108 109 110 120 124 125
    NUM_LIT (281) 69 70 73 74 77 78 79 80 99 111
    REAL_LIT (282) 100 112
    PATH (283) 71 75
    BINARY_OP (284) 121
    UNARY_OP (285) 122
    INV_OP (286) 123
    SHORT_IF (287)
    LONG_IF (288)


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    program (46)
        on left: 1 2 3 4
        on right: 0 1 4
    func_body (47)
        on left: 5 6
        on right: 11 12 13 14 44 45 46 47 48 49
    new_lines (48)
        on left: 7 8
        on right: 1 2 6 7 10 13 14 31 32 35 36 37 38 39 51 52 53 54 58 59 64 65 66 69 70 71 72 73 74 75 76 77 78 79 80 87 88 89 90 91 92 124 125
    optional_new_lines (49)
        on left: 9 10
        on right: 44 45 46 47 48 49 51 53 54
    function (50)
        on left: 11 12 13 14
        on right: 1 2 3 4
    RET_TYPE (51)
        on left: 15 16
        on right: 11 12 13 14
    par_list (52)
        on left: 17 18
        on right: 11 13 17
    par (53)
        on left: 19
        on right: 17 18
    datatype (54)
        on left: 20 21 22 23 24 25 26
        on right: 15 19
    stmt_list (55)
        on left: 27 28
        on right: 5 6 28 36 37
    stmt (56)
        on left: 29 30 31 32 33 34 35 36 37 38 39
        on right: 27 28
    optional_expr_pred (57)
        on left: 40 41
        on right: 44 45
    optional_num_data_decl (58)
        on left: 42 43
        on right: 45
    loop_stmt (59)
        on left: 44 45
        on right: 35
    if_block (60)
        on left: 46
        on right: 51 52 53 54
    else (61)
        on left: 47
        on right: 51 54
    else_if_block_list (62)
        on left: 48 49
        on right: 48 51 53
    lmao (63)
        on left: 50
        on right: 51 52 53 54
    conditional_stmt (64)
        on left: 51 52 53 54
        on right: 30
    numeric_data_decl (65)
        on left: 55 56 57
        on right: 42
    return_stmt (66)
        on left: 58 59
        on right: 34
    decl_stmt (67)
        on left: 60 61 62 63 64 65 66 67 68
        on right: 29
    img_decl (68)
        on left: 69 70 71 72
        on right: 60
    gray_img_decl (69)
        on left: 73 74 75 76
        on right: 61
    vid_decl (70)
        on left: 77 78
        on right: 62
    gray_vid_decl (71)
        on left: 79 80
        on right: 63
    num_decl (72)
        on left: 81 82
        on right: 55 64
    bool_decl (73)
        on left: 83 84
        on right: 57 65
    real_decl (74)
        on left: 85 86
        on right: 56 66
    num_array_decl (75)
        on left: 87 88 89
        on right: 67
    real_array_decl (76)
        on left: 90 91 92
        on right: 68
    brak_pred (77)
        on left: 93 94
        on right: 89 92 95 96
    brak_pred_list (78)
        on left: 95 96
        on right: 93 95
    lit_list (79)
        on left: 97 98
        on right: 94 97
    lit (80)
        on left: 99 100 101
        on right: 97 98
    call_stmt (81)
        on left: 102 103
        on right: 31 118
    arg_list (82)
        on left: 104 105
        on right: 102 104 106 108
    in_built_call_stmt (83)
        on left: 106 107 108 109
        on right: 32 108 109 119
    expr_pred (84)
        on left: 110 111 112 113 114 115 116 117 118 119 120 121 122 123
        on right: 40 46 48 49 58 72 76 82 84 86 104 105 114 115 116 117 121 122 123 124 125 126 127 128
    expr_stmt (85)
        on left: 124 125
        on right: 33
    array_element (86)
        on left: 126 127 128
        on right: 87 88 89 90 91 92 120 125


State 0

    0 $accept: • program $end

    INK  shift, and go to state 1

    program   go to state 2
    function  go to state 3


State 1

   11 function: INK • ID '(' par_list ')' ARROW RET_TYPE func_body
   12         | INK • ID '(' ')' ARROW RET_TYPE func_body
   13         | INK • ID '(' par_list ')' ARROW RET_TYPE new_lines func_body
   14         | INK • ID '(' ')' ARROW RET_TYPE new_lines func_body

    ID  shift, and go to state 4


State 2

    0 $accept: program • $end
    1 program: program • function new_lines
    4        | program • function

    $end  shift, and go to state 5
    INK   shift, and go to state 1

    function  go to state 6


State 3

    2 program: function • new_lines
    3        | function •

    NEWLINE  shift, and go to state 7

    $default  reduce using rule 3 (program)

    new_lines  go to state 8


State 4

   11 function: INK ID • '(' par_list ')' ARROW RET_TYPE func_body
   12         | INK ID • '(' ')' ARROW RET_TYPE func_body
   13         | INK ID • '(' par_list ')' ARROW RET_TYPE new_lines func_body
   14         | INK ID • '(' ')' ARROW RET_TYPE new_lines func_body

    '('  shift, and go to state 9


State 5

    0 $accept: program $end •

    $default  accept


State 6

    1 program: program function • new_lines
    4        | program function •

    NEWLINE  shift, and go to state 7

    $default  reduce using rule 4 (program)

    new_lines  go to state 10


State 7

    8 new_lines: NEWLINE •

    $default  reduce using rule 8 (new_lines)


State 8

    2 program: function new_lines •
    7 new_lines: new_lines • NEWLINE

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 2 (program)


State 9

   11 function: INK ID '(' • par_list ')' ARROW RET_TYPE func_body
   12         | INK ID '(' • ')' ARROW RET_TYPE func_body
   13         | INK ID '(' • par_list ')' ARROW RET_TYPE new_lines func_body
   14         | INK ID '(' • ')' ARROW RET_TYPE new_lines func_body

    IMG       shift, and go to state 12
    GRAY_IMG  shift, and go to state 13
    VID       shift, and go to state 14
    GRAY_VID  shift, and go to state 15
    NUM       shift, and go to state 16
    REAL      shift, and go to state 17
    BOOL      shift, and go to state 18
    ')'       shift, and go to state 19

    par_list  go to state 20
    par       go to state 21
    datatype  go to state 22


State 10

    1 program: program function new_lines •
    7 new_lines: new_lines • NEWLINE

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 1 (program)


State 11

    7 new_lines: new_lines NEWLINE •

    $default  reduce using rule 7 (new_lines)


State 12

   20 datatype: IMG •

    $default  reduce using rule 20 (datatype)


State 13

   21 datatype: GRAY_IMG •

    $default  reduce using rule 21 (datatype)


State 14

   22 datatype: VID •

    $default  reduce using rule 22 (datatype)


State 15

   23 datatype: GRAY_VID •

    $default  reduce using rule 23 (datatype)


State 16

   24 datatype: NUM •

    $default  reduce using rule 24 (datatype)


State 17

   25 datatype: REAL •

    $default  reduce using rule 25 (datatype)


State 18

   26 datatype: BOOL •

    $default  reduce using rule 26 (datatype)


State 19

   12 function: INK ID '(' ')' • ARROW RET_TYPE func_body
   14         | INK ID '(' ')' • ARROW RET_TYPE new_lines func_body

    ARROW  shift, and go to state 23


State 20

   11 function: INK ID '(' par_list • ')' ARROW RET_TYPE func_body
   13         | INK ID '(' par_list • ')' ARROW RET_TYPE new_lines func_body
   17 par_list: par_list • ',' par

    ')'  shift, and go to state 24
    ','  shift, and go to state 25


State 21

   18 par_list: par •

    $default  reduce using rule 18 (par_list)


State 22

   19 par: datatype • ID

    ID  shift, and go to state 26


State 23

   12 function: INK ID '(' ')' ARROW • RET_TYPE func_body
   14         | INK ID '(' ')' ARROW • RET_TYPE new_lines func_body

    IMG       shift, and go to state 12
    GRAY_IMG  shift, and go to state 13
    VID       shift, and go to state 14
    GRAY_VID  shift, and go to state 15
    NUM       shift, and go to state 16
    REAL      shift, and go to state 17
    VOID      shift, and go to state 27
    BOOL      shift, and go to state 18

    RET_TYPE  go to state 28
    datatype  go to state 29


State 24

   11 function: INK ID '(' par_list ')' • ARROW RET_TYPE func_body
   13         | INK ID '(' par_list ')' • ARROW RET_TYPE new_lines func_body

    ARROW  shift, and go to state 30


State 25

   17 par_list: par_list ',' • par

    IMG       shift, and go to state 12
    GRAY_IMG  shift, and go to state 13
    VID       shift, and go to state 14
    GRAY_VID  shift, and go to state 15
    NUM       shift, and go to state 16
    REAL      shift, and go to state 17
    BOOL      shift, and go to state 18

    par       go to state 31
    datatype  go to state 22


State 26

   19 par: datatype ID •

    $default  reduce using rule 19 (par)


State 27

   16 RET_TYPE: VOID •

    $default  reduce using rule 16 (RET_TYPE)


State 28

   12 function: INK ID '(' ')' ARROW RET_TYPE • func_body
   14         | INK ID '(' ')' ARROW RET_TYPE • new_lines func_body

    NEWLINE  shift, and go to state 7
    '{'      shift, and go to state 32

    func_body  go to state 33
    new_lines  go to state 34


State 29

   15 RET_TYPE: datatype •

    $default  reduce using rule 15 (RET_TYPE)


State 30

   11 function: INK ID '(' par_list ')' ARROW • RET_TYPE func_body
   13         | INK ID '(' par_list ')' ARROW • RET_TYPE new_lines func_body

    IMG       shift, and go to state 12
    GRAY_IMG  shift, and go to state 13
    VID       shift, and go to state 14
    GRAY_VID  shift, and go to state 15
    NUM       shift, and go to state 16
    REAL      shift, and go to state 17
    VOID      shift, and go to state 27
    BOOL      shift, and go to state 18

    RET_TYPE  go to state 35
    datatype  go to state 29


State 31

   17 par_list: par_list ',' par •

    $default  reduce using rule 17 (par_list)


State 32

    5 func_body: '{' • stmt_list '}'
    6          | '{' • new_lines stmt_list '}'

    IF        shift, and go to state 36
    RETURN    shift, and go to state 37
    LOOP      shift, and go to state 38
    IMG       shift, and go to state 39
    GRAY_IMG  shift, and go to state 40
    VID       shift, and go to state 41
    GRAY_VID  shift, and go to state 42
    NUM       shift, and go to state 43
    REAL      shift, and go to state 44
    BOOL      shift, and go to state 45
    NEWLINE   shift, and go to state 7
    ID        shift, and go to state 46
    '{'       shift, and go to state 47

    new_lines           go to state 48
    stmt_list           go to state 49
    stmt                go to state 50
    loop_stmt           go to state 51
    if_block            go to state 52
    conditional_stmt    go to state 53
    return_stmt         go to state 54
    decl_stmt           go to state 55
    img_decl            go to state 56
    gray_img_decl       go to state 57
    vid_decl            go to state 58
    gray_vid_decl       go to state 59
    num_decl            go to state 60
    bool_decl           go to state 61
    real_decl           go to state 62
    num_array_decl      go to state 63
    real_array_decl     go to state 64
    call_stmt           go to state 65
    in_built_call_stmt  go to state 66
    expr_stmt           go to state 67


State 33

   12 function: INK ID '(' ')' ARROW RET_TYPE func_body •

    $default  reduce using rule 12 (function)


State 34

    7 new_lines: new_lines • NEWLINE
   14 function: INK ID '(' ')' ARROW RET_TYPE new_lines • func_body

    NEWLINE  shift, and go to state 11
    '{'      shift, and go to state 32

    func_body  go to state 68


State 35

   11 function: INK ID '(' par_list ')' ARROW RET_TYPE • func_body
   13         | INK ID '(' par_list ')' ARROW RET_TYPE • new_lines func_body

    NEWLINE  shift, and go to state 7
    '{'      shift, and go to state 32

    func_body  go to state 69
    new_lines  go to state 70


State 36

   46 if_block: IF • '(' expr_pred ')' optional_new_lines ARROW optional_new_lines func_body

    '('  shift, and go to state 71


State 37

   58 return_stmt: RETURN • expr_pred new_lines
   59            | RETURN • VOID new_lines

    NEG_OP    shift, and go to state 72
    VOID      shift, and go to state 73
    BOOL_LIT  shift, and go to state 74
    ID        shift, and go to state 75
    NUM_LIT   shift, and go to state 76
    REAL_LIT  shift, and go to state 77
    INV_OP    shift, and go to state 78
    '('       shift, and go to state 79

    call_stmt           go to state 80
    in_built_call_stmt  go to state 81
    expr_pred           go to state 82


State 38

   44 loop_stmt: LOOP • optional_new_lines '(' optional_expr_pred ')' optional_new_lines func_body
   45          | LOOP • optional_new_lines '(' optional_num_data_decl ';' optional_expr_pred ';' optional_expr_pred ')' optional_new_lines func_body

    NEWLINE  shift, and go to state 7

    $default  reduce using rule 9 (optional_new_lines)

    new_lines           go to state 83
    optional_new_lines  go to state 84


State 39

   69 img_decl: IMG • ID '<' NUM_LIT ',' NUM_LIT '>' new_lines
   70         | IMG • ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines
   71         | IMG • ID '<' PATH '>' new_lines
   72         | IMG • ID '=' expr_pred new_lines

    ID  shift, and go to state 85


State 40

   73 gray_img_decl: GRAY_IMG • ID '<' NUM_LIT ',' NUM_LIT '>' new_lines
   74              | GRAY_IMG • ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines
   75              | GRAY_IMG • ID '<' PATH '>' new_lines
   76              | GRAY_IMG • ID '=' expr_pred new_lines

    ID  shift, and go to state 86


State 41

   77 vid_decl: VID • ID '<' NUM_LIT ',' NUM_LIT '>' new_lines
   78         | VID • ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines

    ID  shift, and go to state 87


State 42

   79 gray_vid_decl: GRAY_VID • ID '<' NUM_LIT ',' NUM_LIT '>' new_lines
   80              | GRAY_VID • ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines

    ID  shift, and go to state 88


State 43

   81 num_decl: NUM • ID
   82         | NUM • ID '=' expr_pred
   87 num_array_decl: NUM • array_element ID new_lines
   88               | NUM • array_element ID '=' ID new_lines
   89               | NUM • array_element ID '=' brak_pred new_lines

    ID   shift, and go to state 89
    '['  shift, and go to state 90

    array_element  go to state 91


State 44

   85 real_decl: REAL • ID
   86          | REAL • ID '=' expr_pred
   90 real_array_decl: REAL • array_element ID new_lines
   91                | REAL • array_element ID '=' ID new_lines
   92                | REAL • array_element ID '=' brak_pred new_lines

    ID   shift, and go to state 92
    '['  shift, and go to state 90

    array_element  go to state 93


State 45

   83 bool_decl: BOOL • ID
   84          | BOOL • ID '=' expr_pred

    ID  shift, and go to state 94


State 46

  102 call_stmt: ID • '(' arg_list ')'
  103          | ID • '(' ')'
  106 in_built_call_stmt: ID • DOT_OP ID '(' arg_list ')'
  107                   | ID • DOT_OP ID '(' ')'
  124 expr_stmt: ID • '=' expr_pred new_lines
  125          | ID • array_element '=' expr_pred new_lines

    DOT_OP  shift, and go to state 95
    '('     shift, and go to state 96
    '='     shift, and go to state 97
    '['     shift, and go to state 90

    array_element  go to state 98


State 47

   36 stmt: '{' • new_lines stmt_list '}' new_lines
   37     | '{' • stmt_list '}' new_lines
   38     | '{' • new_lines '}' new_lines
   39     | '{' • '}' new_lines

    IF        shift, and go to state 36
    RETURN    shift, and go to state 37
    LOOP      shift, and go to state 38
    IMG       shift, and go to state 39
    GRAY_IMG  shift, and go to state 40
    VID       shift, and go to state 41
    GRAY_VID  shift, and go to state 42
    NUM       shift, and go to state 43
    REAL      shift, and go to state 44
    BOOL      shift, and go to state 45
    NEWLINE   shift, and go to state 7
    ID        shift, and go to state 46
    '{'       shift, and go to state 47
    '}'       shift, and go to state 99

    new_lines           go to state 100
    stmt_list           go to state 101
    stmt                go to state 50
    loop_stmt           go to state 51
    if_block            go to state 52
    conditional_stmt    go to state 53
    return_stmt         go to state 54
    decl_stmt           go to state 55
    img_decl            go to state 56
    gray_img_decl       go to state 57
    vid_decl            go to state 58
    gray_vid_decl       go to state 59
    num_decl            go to state 60
    bool_decl           go to state 61
    real_decl           go to state 62
    num_array_decl      go to state 63
    real_array_decl     go to state 64
    call_stmt           go to state 65
    in_built_call_stmt  go to state 66
    expr_stmt           go to state 67


State 48

    6 func_body: '{' new_lines • stmt_list '}'
    7 new_lines: new_lines • NEWLINE

    IF        shift, and go to state 36
    RETURN    shift, and go to state 37
    LOOP      shift, and go to state 38
    IMG       shift, and go to state 39
    GRAY_IMG  shift, and go to state 40
    VID       shift, and go to state 41
    GRAY_VID  shift, and go to state 42
    NUM       shift, and go to state 43
    REAL      shift, and go to state 44
    BOOL      shift, and go to state 45
    NEWLINE   shift, and go to state 11
    ID        shift, and go to state 46
    '{'       shift, and go to state 47

    stmt_list           go to state 102
    stmt                go to state 50
    loop_stmt           go to state 51
    if_block            go to state 52
    conditional_stmt    go to state 53
    return_stmt         go to state 54
    decl_stmt           go to state 55
    img_decl            go to state 56
    gray_img_decl       go to state 57
    vid_decl            go to state 58
    gray_vid_decl       go to state 59
    num_decl            go to state 60
    bool_decl           go to state 61
    real_decl           go to state 62
    num_array_decl      go to state 63
    real_array_decl     go to state 64
    call_stmt           go to state 65
    in_built_call_stmt  go to state 66
    expr_stmt           go to state 67


State 49

    5 func_body: '{' stmt_list • '}'
   28 stmt_list: stmt_list • stmt

    IF        shift, and go to state 36
    RETURN    shift, and go to state 37
    LOOP      shift, and go to state 38
    IMG       shift, and go to state 39
    GRAY_IMG  shift, and go to state 40
    VID       shift, and go to state 41
    GRAY_VID  shift, and go to state 42
    NUM       shift, and go to state 43
    REAL      shift, and go to state 44
    BOOL      shift, and go to state 45
    ID        shift, and go to state 46
    '{'       shift, and go to state 47
    '}'       shift, and go to state 103

    stmt                go to state 104
    loop_stmt           go to state 51
    if_block            go to state 52
    conditional_stmt    go to state 53
    return_stmt         go to state 54
    decl_stmt           go to state 55
    img_decl            go to state 56
    gray_img_decl       go to state 57
    vid_decl            go to state 58
    gray_vid_decl       go to state 59
    num_decl            go to state 60
    bool_decl           go to state 61
    real_decl           go to state 62
    num_array_decl      go to state 63
    real_array_decl     go to state 64
    call_stmt           go to state 65
    in_built_call_stmt  go to state 66
    expr_stmt           go to state 67


State 50

   27 stmt_list: stmt •

    $default  reduce using rule 27 (stmt_list)


State 51

   35 stmt: loop_stmt • new_lines

    NEWLINE  shift, and go to state 7

    new_lines  go to state 105


State 52

   51 conditional_stmt: if_block • optional_new_lines else_if_block_list optional_new_lines else lmao new_lines
   52                 | if_block • lmao new_lines
   53                 | if_block • optional_new_lines else_if_block_list lmao new_lines
   54                 | if_block • optional_new_lines else lmao new_lines

    NEWLINE  shift, and go to state 7

    NEWLINE   [reduce using rule 50 (lmao)]
    $default  reduce using rule 9 (optional_new_lines)

    new_lines           go to state 83
    optional_new_lines  go to state 106
    lmao                go to state 107

    shift/reduce conflict on token NEWLINE:
       50 lmao: ε •
        8 new_lines: • NEWLINE
      First example: INK ID '(' ')' ARROW '{' if_block • NEWLINE else_if_block_list optional_new_lines else lmao new_lines '}' func_body new_lines $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                    $end
             ↳ 2: function                                                                                                                                                    new_lines
                  ↳ 12: INK ID '(' ')' ARROW func_body                                                                                                              func_body
                                             ↳ 5: '{' stmt_list                                                                                                 '}'
                                                      ↳ 27: stmt
                                                            ↳ 30: conditional_stmt
                                                                  ↳ 51: if_block optional_new_lines   else_if_block_list optional_new_lines else lmao new_lines
                                                                                 ↳ 10: new_lines
                                                                                       ↳ 8: • NEWLINE
      Second example: INK ID '(' ')' ARROW RET_TYPE '{' if_block • NEWLINE '}' new_lines $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                           $end
             ↳ 2: function                                                                                           new_lines
                  ↳ 12: INK ID '(' ')' ARROW RET_TYPE func_body
                                                      ↳ 5: '{' stmt_list                                         '}'
                                                               ↳ 27: stmt
                                                                     ↳ 30: conditional_stmt
                                                                           ↳ 52: if_block lmao      new_lines
                                                                                          ↳ 50: ε • ↳ 8: NEWLINE



State 53

   30 stmt: conditional_stmt •

    $default  reduce using rule 30 (stmt)


State 54

   34 stmt: return_stmt •

    $default  reduce using rule 34 (stmt)


State 55

   29 stmt: decl_stmt •

    $default  reduce using rule 29 (stmt)


State 56

   60 decl_stmt: img_decl •

    $default  reduce using rule 60 (decl_stmt)


State 57

   61 decl_stmt: gray_img_decl •

    $default  reduce using rule 61 (decl_stmt)


State 58

   62 decl_stmt: vid_decl •

    $default  reduce using rule 62 (decl_stmt)


State 59

   63 decl_stmt: gray_vid_decl •

    $default  reduce using rule 63 (decl_stmt)


State 60

   64 decl_stmt: num_decl • new_lines

    NEWLINE  shift, and go to state 7

    new_lines  go to state 108


State 61

   65 decl_stmt: bool_decl • new_lines

    NEWLINE  shift, and go to state 7

    new_lines  go to state 109


State 62

   66 decl_stmt: real_decl • new_lines

    NEWLINE  shift, and go to state 7

    new_lines  go to state 110


State 63

   67 decl_stmt: num_array_decl •

    $default  reduce using rule 67 (decl_stmt)


State 64

   68 decl_stmt: real_array_decl •

    $default  reduce using rule 68 (decl_stmt)


State 65

   31 stmt: call_stmt • new_lines

    NEWLINE  shift, and go to state 7

    new_lines  go to state 111


State 66

   32 stmt: in_built_call_stmt • new_lines
  108 in_built_call_stmt: in_built_call_stmt • DOT_OP ID '(' arg_list ')'
  109                   | in_built_call_stmt • DOT_OP ID '(' ')'

    DOT_OP   shift, and go to state 112
    NEWLINE  shift, and go to state 7

    new_lines  go to state 113


State 67

   33 stmt: expr_stmt •

    $default  reduce using rule 33 (stmt)


State 68

   14 function: INK ID '(' ')' ARROW RET_TYPE new_lines func_body •

    $default  reduce using rule 14 (function)


State 69

   11 function: INK ID '(' par_list ')' ARROW RET_TYPE func_body •

    $default  reduce using rule 11 (function)


State 70

    7 new_lines: new_lines • NEWLINE
   13 function: INK ID '(' par_list ')' ARROW RET_TYPE new_lines • func_body

    NEWLINE  shift, and go to state 11
    '{'      shift, and go to state 32

    func_body  go to state 114


State 71

   46 if_block: IF '(' • expr_pred ')' optional_new_lines ARROW optional_new_lines func_body

    NEG_OP    shift, and go to state 72
    BOOL_LIT  shift, and go to state 74
    ID        shift, and go to state 75
    NUM_LIT   shift, and go to state 76
    REAL_LIT  shift, and go to state 77
    INV_OP    shift, and go to state 78
    '('       shift, and go to state 79

    call_stmt           go to state 80
    in_built_call_stmt  go to state 81
    expr_pred           go to state 115


State 72

  117 expr_pred: NEG_OP • expr_pred

    NEG_OP    shift, and go to state 72
    BOOL_LIT  shift, and go to state 74
    ID        shift, and go to state 75
    NUM_LIT   shift, and go to state 76
    REAL_LIT  shift, and go to state 77
    INV_OP    shift, and go to state 78
    '('       shift, and go to state 79

    call_stmt           go to state 80
    in_built_call_stmt  go to state 81
    expr_pred           go to state 116


State 73

   59 return_stmt: RETURN VOID • new_lines

    NEWLINE  shift, and go to state 7

    new_lines  go to state 117


State 74

  113 expr_pred: BOOL_LIT •

    $default  reduce using rule 113 (expr_pred)


State 75

  102 call_stmt: ID • '(' arg_list ')'
  103          | ID • '(' ')'
  106 in_built_call_stmt: ID • DOT_OP ID '(' arg_list ')'
  107                   | ID • DOT_OP ID '(' ')'
  110 expr_pred: ID •
  120          | ID • array_element

    DOT_OP  shift, and go to state 95
    '('     shift, and go to state 96
    '['     shift, and go to state 90

    $default  reduce using rule 110 (expr_pred)

    array_element  go to state 118


State 76

  111 expr_pred: NUM_LIT •

    $default  reduce using rule 111 (expr_pred)


State 77

  112 expr_pred: REAL_LIT •

    $default  reduce using rule 112 (expr_pred)


State 78

  123 expr_pred: INV_OP • expr_pred

    NEG_OP    shift, and go to state 72
    BOOL_LIT  shift, and go to state 74
    ID        shift, and go to state 75
    NUM_LIT   shift, and go to state 76
    REAL_LIT  shift, and go to state 77
    INV_OP    shift, and go to state 78
    '('       shift, and go to state 79

    call_stmt           go to state 80
    in_built_call_stmt  go to state 81
    expr_pred           go to state 119


State 79

  116 expr_pred: '(' • expr_pred ')'

    NEG_OP    shift, and go to state 72
    BOOL_LIT  shift, and go to state 74
    ID        shift, and go to state 75
    NUM_LIT   shift, and go to state 76
    REAL_LIT  shift, and go to state 77
    INV_OP    shift, and go to state 78
    '('       shift, and go to state 79

    call_stmt           go to state 80
    in_built_call_stmt  go to state 81
    expr_pred           go to state 120


State 80

  118 expr_pred: call_stmt •

    $default  reduce using rule 118 (expr_pred)


State 81

  108 in_built_call_stmt: in_built_call_stmt • DOT_OP ID '(' arg_list ')'
  109                   | in_built_call_stmt • DOT_OP ID '(' ')'
  119 expr_pred: in_built_call_stmt •

    DOT_OP  shift, and go to state 112

    $default  reduce using rule 119 (expr_pred)


State 82

   58 return_stmt: RETURN expr_pred • new_lines
  114 expr_pred: expr_pred • REL_OP expr_pred
  115          | expr_pred • LOG_OP expr_pred
  121          | expr_pred • BINARY_OP expr_pred
  122          | expr_pred • UNARY_OP

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    NEWLINE    shift, and go to state 7
    BINARY_OP  shift, and go to state 123
    UNARY_OP   shift, and go to state 124

    new_lines  go to state 125


State 83

    7 new_lines: new_lines • NEWLINE
   10 optional_new_lines: new_lines •

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 10 (optional_new_lines)


State 84

   44 loop_stmt: LOOP optional_new_lines • '(' optional_expr_pred ')' optional_new_lines func_body
   45          | LOOP optional_new_lines • '(' optional_num_data_decl ';' optional_expr_pred ';' optional_expr_pred ')' optional_new_lines func_body

    '('  shift, and go to state 126


State 85

   69 img_decl: IMG ID • '<' NUM_LIT ',' NUM_LIT '>' new_lines
   70         | IMG ID • '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines
   71         | IMG ID • '<' PATH '>' new_lines
   72         | IMG ID • '=' expr_pred new_lines

    '<'  shift, and go to state 127
    '='  shift, and go to state 128


State 86

   73 gray_img_decl: GRAY_IMG ID • '<' NUM_LIT ',' NUM_LIT '>' new_lines
   74              | GRAY_IMG ID • '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines
   75              | GRAY_IMG ID • '<' PATH '>' new_lines
   76              | GRAY_IMG ID • '=' expr_pred new_lines

    '<'  shift, and go to state 129
    '='  shift, and go to state 130


State 87

   77 vid_decl: VID ID • '<' NUM_LIT ',' NUM_LIT '>' new_lines
   78         | VID ID • '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines

    '<'  shift, and go to state 131


State 88

   79 gray_vid_decl: GRAY_VID ID • '<' NUM_LIT ',' NUM_LIT '>' new_lines
   80              | GRAY_VID ID • '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines

    '<'  shift, and go to state 132


State 89

   81 num_decl: NUM ID •
   82         | NUM ID • '=' expr_pred

    '='  shift, and go to state 133

    $default  reduce using rule 81 (num_decl)


State 90

  126 array_element: '[' • expr_pred ']'
  127              | '[' • expr_pred ',' expr_pred ']'
  128              | '[' • expr_pred ',' expr_pred ',' expr_pred ']'

    NEG_OP    shift, and go to state 72
    BOOL_LIT  shift, and go to state 74
    ID        shift, and go to state 75
    NUM_LIT   shift, and go to state 76
    REAL_LIT  shift, and go to state 77
    INV_OP    shift, and go to state 78
    '('       shift, and go to state 79

    call_stmt           go to state 80
    in_built_call_stmt  go to state 81
    expr_pred           go to state 134


State 91

   87 num_array_decl: NUM array_element • ID new_lines
   88               | NUM array_element • ID '=' ID new_lines
   89               | NUM array_element • ID '=' brak_pred new_lines

    ID  shift, and go to state 135


State 92

   85 real_decl: REAL ID •
   86          | REAL ID • '=' expr_pred

    '='  shift, and go to state 136

    $default  reduce using rule 85 (real_decl)


State 93

   90 real_array_decl: REAL array_element • ID new_lines
   91                | REAL array_element • ID '=' ID new_lines
   92                | REAL array_element • ID '=' brak_pred new_lines

    ID  shift, and go to state 137


State 94

   83 bool_decl: BOOL ID •
   84          | BOOL ID • '=' expr_pred

    '='  shift, and go to state 138

    $default  reduce using rule 83 (bool_decl)


State 95

  106 in_built_call_stmt: ID DOT_OP • ID '(' arg_list ')'
  107                   | ID DOT_OP • ID '(' ')'

    ID  shift, and go to state 139


State 96

  102 call_stmt: ID '(' • arg_list ')'
  103          | ID '(' • ')'

    NEG_OP    shift, and go to state 72
    BOOL_LIT  shift, and go to state 74
    ID        shift, and go to state 75
    NUM_LIT   shift, and go to state 76
    REAL_LIT  shift, and go to state 77
    INV_OP    shift, and go to state 78
    '('       shift, and go to state 79
    ')'       shift, and go to state 140

    call_stmt           go to state 80
    arg_list            go to state 141
    in_built_call_stmt  go to state 81
    expr_pred           go to state 142


State 97

  124 expr_stmt: ID '=' • expr_pred new_lines

    NEG_OP    shift, and go to state 72
    BOOL_LIT  shift, and go to state 74
    ID        shift, and go to state 75
    NUM_LIT   shift, and go to state 76
    REAL_LIT  shift, and go to state 77
    INV_OP    shift, and go to state 78
    '('       shift, and go to state 79

    call_stmt           go to state 80
    in_built_call_stmt  go to state 81
    expr_pred           go to state 143


State 98

  125 expr_stmt: ID array_element • '=' expr_pred new_lines

    '='  shift, and go to state 144


State 99

   39 stmt: '{' '}' • new_lines

    NEWLINE  shift, and go to state 7

    new_lines  go to state 145


State 100

    7 new_lines: new_lines • NEWLINE
   36 stmt: '{' new_lines • stmt_list '}' new_lines
   38     | '{' new_lines • '}' new_lines

    IF        shift, and go to state 36
    RETURN    shift, and go to state 37
    LOOP      shift, and go to state 38
    IMG       shift, and go to state 39
    GRAY_IMG  shift, and go to state 40
    VID       shift, and go to state 41
    GRAY_VID  shift, and go to state 42
    NUM       shift, and go to state 43
    REAL      shift, and go to state 44
    BOOL      shift, and go to state 45
    NEWLINE   shift, and go to state 11
    ID        shift, and go to state 46
    '{'       shift, and go to state 47
    '}'       shift, and go to state 146

    stmt_list           go to state 147
    stmt                go to state 50
    loop_stmt           go to state 51
    if_block            go to state 52
    conditional_stmt    go to state 53
    return_stmt         go to state 54
    decl_stmt           go to state 55
    img_decl            go to state 56
    gray_img_decl       go to state 57
    vid_decl            go to state 58
    gray_vid_decl       go to state 59
    num_decl            go to state 60
    bool_decl           go to state 61
    real_decl           go to state 62
    num_array_decl      go to state 63
    real_array_decl     go to state 64
    call_stmt           go to state 65
    in_built_call_stmt  go to state 66
    expr_stmt           go to state 67


State 101

   28 stmt_list: stmt_list • stmt
   37 stmt: '{' stmt_list • '}' new_lines

    IF        shift, and go to state 36
    RETURN    shift, and go to state 37
    LOOP      shift, and go to state 38
    IMG       shift, and go to state 39
    GRAY_IMG  shift, and go to state 40
    VID       shift, and go to state 41
    GRAY_VID  shift, and go to state 42
    NUM       shift, and go to state 43
    REAL      shift, and go to state 44
    BOOL      shift, and go to state 45
    ID        shift, and go to state 46
    '{'       shift, and go to state 47
    '}'       shift, and go to state 148

    stmt                go to state 104
    loop_stmt           go to state 51
    if_block            go to state 52
    conditional_stmt    go to state 53
    return_stmt         go to state 54
    decl_stmt           go to state 55
    img_decl            go to state 56
    gray_img_decl       go to state 57
    vid_decl            go to state 58
    gray_vid_decl       go to state 59
    num_decl            go to state 60
    bool_decl           go to state 61
    real_decl           go to state 62
    num_array_decl      go to state 63
    real_array_decl     go to state 64
    call_stmt           go to state 65
    in_built_call_stmt  go to state 66
    expr_stmt           go to state 67


State 102

    6 func_body: '{' new_lines stmt_list • '}'
   28 stmt_list: stmt_list • stmt

    IF        shift, and go to state 36
    RETURN    shift, and go to state 37
    LOOP      shift, and go to state 38
    IMG       shift, and go to state 39
    GRAY_IMG  shift, and go to state 40
    VID       shift, and go to state 41
    GRAY_VID  shift, and go to state 42
    NUM       shift, and go to state 43
    REAL      shift, and go to state 44
    BOOL      shift, and go to state 45
    ID        shift, and go to state 46
    '{'       shift, and go to state 47
    '}'       shift, and go to state 149

    stmt                go to state 104
    loop_stmt           go to state 51
    if_block            go to state 52
    conditional_stmt    go to state 53
    return_stmt         go to state 54
    decl_stmt           go to state 55
    img_decl            go to state 56
    gray_img_decl       go to state 57
    vid_decl            go to state 58
    gray_vid_decl       go to state 59
    num_decl            go to state 60
    bool_decl           go to state 61
    real_decl           go to state 62
    num_array_decl      go to state 63
    real_array_decl     go to state 64
    call_stmt           go to state 65
    in_built_call_stmt  go to state 66
    expr_stmt           go to state 67


State 103

    5 func_body: '{' stmt_list '}' •

    $default  reduce using rule 5 (func_body)


State 104

   28 stmt_list: stmt_list stmt •

    $default  reduce using rule 28 (stmt_list)


State 105

    7 new_lines: new_lines • NEWLINE
   35 stmt: loop_stmt new_lines •

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 35 (stmt)


State 106

   51 conditional_stmt: if_block optional_new_lines • else_if_block_list optional_new_lines else lmao new_lines
   53                 | if_block optional_new_lines • else_if_block_list lmao new_lines
   54                 | if_block optional_new_lines • else lmao new_lines

    ELSE_IF  shift, and go to state 150
    ARROW    shift, and go to state 151

    else                go to state 152
    else_if_block_list  go to state 153


State 107

   52 conditional_stmt: if_block lmao • new_lines

    NEWLINE  shift, and go to state 7

    new_lines  go to state 154


State 108

    7 new_lines: new_lines • NEWLINE
   64 decl_stmt: num_decl new_lines •

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 64 (decl_stmt)


State 109

    7 new_lines: new_lines • NEWLINE
   65 decl_stmt: bool_decl new_lines •

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 65 (decl_stmt)


State 110

    7 new_lines: new_lines • NEWLINE
   66 decl_stmt: real_decl new_lines •

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 66 (decl_stmt)


State 111

    7 new_lines: new_lines • NEWLINE
   31 stmt: call_stmt new_lines •

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 31 (stmt)


State 112

  108 in_built_call_stmt: in_built_call_stmt DOT_OP • ID '(' arg_list ')'
  109                   | in_built_call_stmt DOT_OP • ID '(' ')'

    ID  shift, and go to state 155


State 113

    7 new_lines: new_lines • NEWLINE
   32 stmt: in_built_call_stmt new_lines •

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 32 (stmt)


State 114

   13 function: INK ID '(' par_list ')' ARROW RET_TYPE new_lines func_body •

    $default  reduce using rule 13 (function)


State 115

   46 if_block: IF '(' expr_pred • ')' optional_new_lines ARROW optional_new_lines func_body
  114 expr_pred: expr_pred • REL_OP expr_pred
  115          | expr_pred • LOG_OP expr_pred
  121          | expr_pred • BINARY_OP expr_pred
  122          | expr_pred • UNARY_OP

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    BINARY_OP  shift, and go to state 123
    UNARY_OP   shift, and go to state 124
    ')'        shift, and go to state 156


State 116

  114 expr_pred: expr_pred • REL_OP expr_pred
  115          | expr_pred • LOG_OP expr_pred
  117          | NEG_OP expr_pred •
  121          | expr_pred • BINARY_OP expr_pred
  122          | expr_pred • UNARY_OP

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    BINARY_OP  shift, and go to state 123

    $default  reduce using rule 117 (expr_pred)


State 117

    7 new_lines: new_lines • NEWLINE
   59 return_stmt: RETURN VOID new_lines •

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 59 (return_stmt)


State 118

  120 expr_pred: ID array_element •

    $default  reduce using rule 120 (expr_pred)


State 119

  114 expr_pred: expr_pred • REL_OP expr_pred
  115          | expr_pred • LOG_OP expr_pred
  121          | expr_pred • BINARY_OP expr_pred
  122          | expr_pred • UNARY_OP
  123          | INV_OP expr_pred •

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    BINARY_OP  shift, and go to state 123

    $default  reduce using rule 123 (expr_pred)


State 120

  114 expr_pred: expr_pred • REL_OP expr_pred
  115          | expr_pred • LOG_OP expr_pred
  116          | '(' expr_pred • ')'
  121          | expr_pred • BINARY_OP expr_pred
  122          | expr_pred • UNARY_OP

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    BINARY_OP  shift, and go to state 123
    UNARY_OP   shift, and go to state 124
    ')'        shift, and go to state 157


State 121

  115 expr_pred: expr_pred LOG_OP • expr_pred

    NEG_OP    shift, and go to state 72
    BOOL_LIT  shift, and go to state 74
    ID        shift, and go to state 75
    NUM_LIT   shift, and go to state 76
    REAL_LIT  shift, and go to state 77
    INV_OP    shift, and go to state 78
    '('       shift, and go to state 79

    call_stmt           go to state 80
    in_built_call_stmt  go to state 81
    expr_pred           go to state 158


State 122

  114 expr_pred: expr_pred REL_OP • expr_pred

    NEG_OP    shift, and go to state 72
    BOOL_LIT  shift, and go to state 74
    ID        shift, and go to state 75
    NUM_LIT   shift, and go to state 76
    REAL_LIT  shift, and go to state 77
    INV_OP    shift, and go to state 78
    '('       shift, and go to state 79

    call_stmt           go to state 80
    in_built_call_stmt  go to state 81
    expr_pred           go to state 159


State 123

  121 expr_pred: expr_pred BINARY_OP • expr_pred

    NEG_OP    shift, and go to state 72
    BOOL_LIT  shift, and go to state 74
    ID        shift, and go to state 75
    NUM_LIT   shift, and go to state 76
    REAL_LIT  shift, and go to state 77
    INV_OP    shift, and go to state 78
    '('       shift, and go to state 79

    call_stmt           go to state 80
    in_built_call_stmt  go to state 81
    expr_pred           go to state 160


State 124

  122 expr_pred: expr_pred UNARY_OP •

    $default  reduce using rule 122 (expr_pred)


State 125

    7 new_lines: new_lines • NEWLINE
   58 return_stmt: RETURN expr_pred new_lines •

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 58 (return_stmt)


State 126

   44 loop_stmt: LOOP optional_new_lines '(' • optional_expr_pred ')' optional_new_lines func_body
   45          | LOOP optional_new_lines '(' • optional_num_data_decl ';' optional_expr_pred ';' optional_expr_pred ')' optional_new_lines func_body

    NEG_OP    shift, and go to state 72
    NUM       shift, and go to state 161
    REAL      shift, and go to state 162
    BOOL      shift, and go to state 45
    BOOL_LIT  shift, and go to state 74
    ID        shift, and go to state 75
    NUM_LIT   shift, and go to state 76
    REAL_LIT  shift, and go to state 77
    INV_OP    shift, and go to state 78
    '('       shift, and go to state 79

    ';'       reduce using rule 43 (optional_num_data_decl)
    $default  reduce using rule 41 (optional_expr_pred)

    optional_expr_pred      go to state 163
    optional_num_data_decl  go to state 164
    numeric_data_decl       go to state 165
    num_decl                go to state 166
    bool_decl               go to state 167
    real_decl               go to state 168
    call_stmt               go to state 80
    in_built_call_stmt      go to state 81
    expr_pred               go to state 169


State 127

   69 img_decl: IMG ID '<' • NUM_LIT ',' NUM_LIT '>' new_lines
   70         | IMG ID '<' • NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines
   71         | IMG ID '<' • PATH '>' new_lines

    NUM_LIT  shift, and go to state 170
    PATH     shift, and go to state 171


State 128

   72 img_decl: IMG ID '=' • expr_pred new_lines

    NEG_OP    shift, and go to state 72
    BOOL_LIT  shift, and go to state 74
    ID        shift, and go to state 75
    NUM_LIT   shift, and go to state 76
    REAL_LIT  shift, and go to state 77
    INV_OP    shift, and go to state 78
    '('       shift, and go to state 79

    call_stmt           go to state 80
    in_built_call_stmt  go to state 81
    expr_pred           go to state 172


State 129

   73 gray_img_decl: GRAY_IMG ID '<' • NUM_LIT ',' NUM_LIT '>' new_lines
   74              | GRAY_IMG ID '<' • NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines
   75              | GRAY_IMG ID '<' • PATH '>' new_lines

    NUM_LIT  shift, and go to state 173
    PATH     shift, and go to state 174


State 130

   76 gray_img_decl: GRAY_IMG ID '=' • expr_pred new_lines

    NEG_OP    shift, and go to state 72
    BOOL_LIT  shift, and go to state 74
    ID        shift, and go to state 75
    NUM_LIT   shift, and go to state 76
    REAL_LIT  shift, and go to state 77
    INV_OP    shift, and go to state 78
    '('       shift, and go to state 79

    call_stmt           go to state 80
    in_built_call_stmt  go to state 81
    expr_pred           go to state 175


State 131

   77 vid_decl: VID ID '<' • NUM_LIT ',' NUM_LIT '>' new_lines
   78         | VID ID '<' • NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines

    NUM_LIT  shift, and go to state 176


State 132

   79 gray_vid_decl: GRAY_VID ID '<' • NUM_LIT ',' NUM_LIT '>' new_lines
   80              | GRAY_VID ID '<' • NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines

    NUM_LIT  shift, and go to state 177


State 133

   82 num_decl: NUM ID '=' • expr_pred

    NEG_OP    shift, and go to state 72
    BOOL_LIT  shift, and go to state 74
    ID        shift, and go to state 75
    NUM_LIT   shift, and go to state 76
    REAL_LIT  shift, and go to state 77
    INV_OP    shift, and go to state 78
    '('       shift, and go to state 79

    call_stmt           go to state 80
    in_built_call_stmt  go to state 81
    expr_pred           go to state 178


State 134

  114 expr_pred: expr_pred • REL_OP expr_pred
  115          | expr_pred • LOG_OP expr_pred
  121          | expr_pred • BINARY_OP expr_pred
  122          | expr_pred • UNARY_OP
  126 array_element: '[' expr_pred • ']'
  127              | '[' expr_pred • ',' expr_pred ']'
  128              | '[' expr_pred • ',' expr_pred ',' expr_pred ']'

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    BINARY_OP  shift, and go to state 123
    UNARY_OP   shift, and go to state 124
    ','        shift, and go to state 179
    ']'        shift, and go to state 180


State 135

   87 num_array_decl: NUM array_element ID • new_lines
   88               | NUM array_element ID • '=' ID new_lines
   89               | NUM array_element ID • '=' brak_pred new_lines

    NEWLINE  shift, and go to state 7
    '='      shift, and go to state 181

    new_lines  go to state 182


State 136

   86 real_decl: REAL ID '=' • expr_pred

    NEG_OP    shift, and go to state 72
    BOOL_LIT  shift, and go to state 74
    ID        shift, and go to state 75
    NUM_LIT   shift, and go to state 76
    REAL_LIT  shift, and go to state 77
    INV_OP    shift, and go to state 78
    '('       shift, and go to state 79

    call_stmt           go to state 80
    in_built_call_stmt  go to state 81
    expr_pred           go to state 183


State 137

   90 real_array_decl: REAL array_element ID • new_lines
   91                | REAL array_element ID • '=' ID new_lines
   92                | REAL array_element ID • '=' brak_pred new_lines

    NEWLINE  shift, and go to state 7
    '='      shift, and go to state 184

    new_lines  go to state 185


State 138

   84 bool_decl: BOOL ID '=' • expr_pred

    NEG_OP    shift, and go to state 72
    BOOL_LIT  shift, and go to state 74
    ID        shift, and go to state 75
    NUM_LIT   shift, and go to state 76
    REAL_LIT  shift, and go to state 77
    INV_OP    shift, and go to state 78
    '('       shift, and go to state 79

    call_stmt           go to state 80
    in_built_call_stmt  go to state 81
    expr_pred           go to state 186


State 139

  106 in_built_call_stmt: ID DOT_OP ID • '(' arg_list ')'
  107                   | ID DOT_OP ID • '(' ')'

    '('  shift, and go to state 187


State 140

  103 call_stmt: ID '(' ')' •

    $default  reduce using rule 103 (call_stmt)


State 141

  102 call_stmt: ID '(' arg_list • ')'
  104 arg_list: arg_list • ',' expr_pred

    ')'  shift, and go to state 188
    ','  shift, and go to state 189


State 142

  105 arg_list: expr_pred •
  114 expr_pred: expr_pred • REL_OP expr_pred
  115          | expr_pred • LOG_OP expr_pred
  121          | expr_pred • BINARY_OP expr_pred
  122          | expr_pred • UNARY_OP

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    BINARY_OP  shift, and go to state 123
    UNARY_OP   shift, and go to state 124

    $default  reduce using rule 105 (arg_list)


State 143

  114 expr_pred: expr_pred • REL_OP expr_pred
  115          | expr_pred • LOG_OP expr_pred
  121          | expr_pred • BINARY_OP expr_pred
  122          | expr_pred • UNARY_OP
  124 expr_stmt: ID '=' expr_pred • new_lines

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    NEWLINE    shift, and go to state 7
    BINARY_OP  shift, and go to state 123
    UNARY_OP   shift, and go to state 124

    new_lines  go to state 190


State 144

  125 expr_stmt: ID array_element '=' • expr_pred new_lines

    NEG_OP    shift, and go to state 72
    BOOL_LIT  shift, and go to state 74
    ID        shift, and go to state 75
    NUM_LIT   shift, and go to state 76
    REAL_LIT  shift, and go to state 77
    INV_OP    shift, and go to state 78
    '('       shift, and go to state 79

    call_stmt           go to state 80
    in_built_call_stmt  go to state 81
    expr_pred           go to state 191


State 145

    7 new_lines: new_lines • NEWLINE
   39 stmt: '{' '}' new_lines •

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 39 (stmt)


State 146

   38 stmt: '{' new_lines '}' • new_lines

    NEWLINE  shift, and go to state 7

    new_lines  go to state 192


State 147

   28 stmt_list: stmt_list • stmt
   36 stmt: '{' new_lines stmt_list • '}' new_lines

    IF        shift, and go to state 36
    RETURN    shift, and go to state 37
    LOOP      shift, and go to state 38
    IMG       shift, and go to state 39
    GRAY_IMG  shift, and go to state 40
    VID       shift, and go to state 41
    GRAY_VID  shift, and go to state 42
    NUM       shift, and go to state 43
    REAL      shift, and go to state 44
    BOOL      shift, and go to state 45
    ID        shift, and go to state 46
    '{'       shift, and go to state 47
    '}'       shift, and go to state 193

    stmt                go to state 104
    loop_stmt           go to state 51
    if_block            go to state 52
    conditional_stmt    go to state 53
    return_stmt         go to state 54
    decl_stmt           go to state 55
    img_decl            go to state 56
    gray_img_decl       go to state 57
    vid_decl            go to state 58
    gray_vid_decl       go to state 59
    num_decl            go to state 60
    bool_decl           go to state 61
    real_decl           go to state 62
    num_array_decl      go to state 63
    real_array_decl     go to state 64
    call_stmt           go to state 65
    in_built_call_stmt  go to state 66
    expr_stmt           go to state 67


State 148

   37 stmt: '{' stmt_list '}' • new_lines

    NEWLINE  shift, and go to state 7

    new_lines  go to state 194


State 149

    6 func_body: '{' new_lines stmt_list '}' •

    $default  reduce using rule 6 (func_body)


State 150

   49 else_if_block_list: ELSE_IF • '(' expr_pred ')' optional_new_lines ARROW optional_new_lines func_body

    '('  shift, and go to state 195


State 151

   47 else: ARROW • optional_new_lines func_body

    NEWLINE  shift, and go to state 7

    $default  reduce using rule 9 (optional_new_lines)

    new_lines           go to state 83
    optional_new_lines  go to state 196


State 152

   54 conditional_stmt: if_block optional_new_lines else • lmao new_lines

    $default  reduce using rule 50 (lmao)

    lmao  go to state 197


State 153

   48 else_if_block_list: else_if_block_list • optional_new_lines ELSE_IF '(' expr_pred ')' optional_new_lines ARROW optional_new_lines func_body
   51 conditional_stmt: if_block optional_new_lines else_if_block_list • optional_new_lines else lmao new_lines
   53                 | if_block optional_new_lines else_if_block_list • lmao new_lines

    NEWLINE  shift, and go to state 7

    NEWLINE   [reduce using rule 50 (lmao)]
    $default  reduce using rule 9 (optional_new_lines)

    new_lines           go to state 83
    optional_new_lines  go to state 198
    lmao                go to state 199

    shift/reduce conflict on token NEWLINE:
       50 lmao: ε •
        8 new_lines: • NEWLINE
      First example: INK ID '(' ')' ARROW '{' if_block optional_new_lines else_if_block_list • NEWLINE ELSE_IF '(' expr_pred ')' optional_new_lines ARROW optional_new_lines func_body optional_new_lines else lmao new_lines '}' func_body new_lines $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                                                                                                                             $end
             ↳ 2: function                                                                                                                                                                                                                                                             new_lines
                  ↳ 12: INK ID '(' ')' ARROW func_body                                                                                                                                                                                                                       func_body
                                             ↳ 5: '{' stmt_list                                                                                                                                                                                                          '}'
                                                      ↳ 27: stmt
                                                            ↳ 30: conditional_stmt
                                                                  ↳ 51: if_block optional_new_lines else_if_block_list                                                                                                            optional_new_lines else lmao new_lines
                                                                                                    ↳ 48: else_if_block_list optional_new_lines   ELSE_IF '(' expr_pred ')' optional_new_lines ARROW optional_new_lines func_body
                                                                                                                             ↳ 10: new_lines
                                                                                                                                   ↳ 8: • NEWLINE
      Second example: INK ID '(' ')' ARROW RET_TYPE '{' if_block optional_new_lines else_if_block_list • NEWLINE '}' new_lines $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                                 $end
             ↳ 2: function                                                                                                                                 new_lines
                  ↳ 12: INK ID '(' ')' ARROW RET_TYPE func_body
                                                      ↳ 5: '{' stmt_list                                                                               '}'
                                                               ↳ 27: stmt
                                                                     ↳ 30: conditional_stmt
                                                                           ↳ 53: if_block optional_new_lines else_if_block_list lmao      new_lines
                                                                                                                                ↳ 50: ε • ↳ 8: NEWLINE



State 154

    7 new_lines: new_lines • NEWLINE
   52 conditional_stmt: if_block lmao new_lines •

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 52 (conditional_stmt)


State 155

  108 in_built_call_stmt: in_built_call_stmt DOT_OP ID • '(' arg_list ')'
  109                   | in_built_call_stmt DOT_OP ID • '(' ')'

    '('  shift, and go to state 200


State 156

   46 if_block: IF '(' expr_pred ')' • optional_new_lines ARROW optional_new_lines func_body

    NEWLINE  shift, and go to state 7

    $default  reduce using rule 9 (optional_new_lines)

    new_lines           go to state 83
    optional_new_lines  go to state 201


State 157

  116 expr_pred: '(' expr_pred ')' •

    $default  reduce using rule 116 (expr_pred)


State 158

  114 expr_pred: expr_pred • REL_OP expr_pred
  115          | expr_pred • LOG_OP expr_pred
  115          | expr_pred LOG_OP expr_pred •
  121          | expr_pred • BINARY_OP expr_pred
  122          | expr_pred • UNARY_OP

    REL_OP  shift, and go to state 122

    $default  reduce using rule 115 (expr_pred)


State 159

  114 expr_pred: expr_pred • REL_OP expr_pred
  114          | expr_pred REL_OP expr_pred •
  115          | expr_pred • LOG_OP expr_pred
  121          | expr_pred • BINARY_OP expr_pred
  122          | expr_pred • UNARY_OP

    $default  reduce using rule 114 (expr_pred)


State 160

  114 expr_pred: expr_pred • REL_OP expr_pred
  115          | expr_pred • LOG_OP expr_pred
  121          | expr_pred • BINARY_OP expr_pred
  121          | expr_pred BINARY_OP expr_pred •
  122          | expr_pred • UNARY_OP

    LOG_OP  shift, and go to state 121
    REL_OP  shift, and go to state 122

    $default  reduce using rule 121 (expr_pred)


State 161

   81 num_decl: NUM • ID
   82         | NUM • ID '=' expr_pred

    ID  shift, and go to state 89


State 162

   85 real_decl: REAL • ID
   86          | REAL • ID '=' expr_pred

    ID  shift, and go to state 92


State 163

   44 loop_stmt: LOOP optional_new_lines '(' optional_expr_pred • ')' optional_new_lines func_body

    ')'  shift, and go to state 202


State 164

   45 loop_stmt: LOOP optional_new_lines '(' optional_num_data_decl • ';' optional_expr_pred ';' optional_expr_pred ')' optional_new_lines func_body

    ';'  shift, and go to state 203


State 165

   42 optional_num_data_decl: numeric_data_decl •

    $default  reduce using rule 42 (optional_num_data_decl)


State 166

   55 numeric_data_decl: num_decl •

    $default  reduce using rule 55 (numeric_data_decl)


State 167

   57 numeric_data_decl: bool_decl •

    $default  reduce using rule 57 (numeric_data_decl)


State 168

   56 numeric_data_decl: real_decl •

    $default  reduce using rule 56 (numeric_data_decl)


State 169

   40 optional_expr_pred: expr_pred •
  114 expr_pred: expr_pred • REL_OP expr_pred
  115          | expr_pred • LOG_OP expr_pred
  121          | expr_pred • BINARY_OP expr_pred
  122          | expr_pred • UNARY_OP

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    BINARY_OP  shift, and go to state 123
    UNARY_OP   shift, and go to state 124

    $default  reduce using rule 40 (optional_expr_pred)


State 170

   69 img_decl: IMG ID '<' NUM_LIT • ',' NUM_LIT '>' new_lines
   70         | IMG ID '<' NUM_LIT • ',' NUM_LIT ',' NUM_LIT '>' new_lines

    ','  shift, and go to state 204


State 171

   71 img_decl: IMG ID '<' PATH • '>' new_lines

    '>'  shift, and go to state 205


State 172

   72 img_decl: IMG ID '=' expr_pred • new_lines
  114 expr_pred: expr_pred • REL_OP expr_pred
  115          | expr_pred • LOG_OP expr_pred
  121          | expr_pred • BINARY_OP expr_pred
  122          | expr_pred • UNARY_OP

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    NEWLINE    shift, and go to state 7
    BINARY_OP  shift, and go to state 123
    UNARY_OP   shift, and go to state 124

    new_lines  go to state 206


State 173

   73 gray_img_decl: GRAY_IMG ID '<' NUM_LIT • ',' NUM_LIT '>' new_lines
   74              | GRAY_IMG ID '<' NUM_LIT • ',' NUM_LIT ',' NUM_LIT '>' new_lines

    ','  shift, and go to state 207


State 174

   75 gray_img_decl: GRAY_IMG ID '<' PATH • '>' new_lines

    '>'  shift, and go to state 208


State 175

   76 gray_img_decl: GRAY_IMG ID '=' expr_pred • new_lines
  114 expr_pred: expr_pred • REL_OP expr_pred
  115          | expr_pred • LOG_OP expr_pred
  121          | expr_pred • BINARY_OP expr_pred
  122          | expr_pred • UNARY_OP

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    NEWLINE    shift, and go to state 7
    BINARY_OP  shift, and go to state 123
    UNARY_OP   shift, and go to state 124

    new_lines  go to state 209


State 176

   77 vid_decl: VID ID '<' NUM_LIT • ',' NUM_LIT '>' new_lines
   78         | VID ID '<' NUM_LIT • ',' NUM_LIT ',' NUM_LIT '>' new_lines

    ','  shift, and go to state 210


State 177

   79 gray_vid_decl: GRAY_VID ID '<' NUM_LIT • ',' NUM_LIT '>' new_lines
   80              | GRAY_VID ID '<' NUM_LIT • ',' NUM_LIT ',' NUM_LIT '>' new_lines

    ','  shift, and go to state 211


State 178

   82 num_decl: NUM ID '=' expr_pred •
  114 expr_pred: expr_pred • REL_OP expr_pred
  115          | expr_pred • LOG_OP expr_pred
  121          | expr_pred • BINARY_OP expr_pred
  122          | expr_pred • UNARY_OP

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    BINARY_OP  shift, and go to state 123
    UNARY_OP   shift, and go to state 124

    $default  reduce using rule 82 (num_decl)


State 179

  127 array_element: '[' expr_pred ',' • expr_pred ']'
  128              | '[' expr_pred ',' • expr_pred ',' expr_pred ']'

    NEG_OP    shift, and go to state 72
    BOOL_LIT  shift, and go to state 74
    ID        shift, and go to state 75
    NUM_LIT   shift, and go to state 76
    REAL_LIT  shift, and go to state 77
    INV_OP    shift, and go to state 78
    '('       shift, and go to state 79

    call_stmt           go to state 80
    in_built_call_stmt  go to state 81
    expr_pred           go to state 212


State 180

  126 array_element: '[' expr_pred ']' •

    $default  reduce using rule 126 (array_element)


State 181

   88 num_array_decl: NUM array_element ID '=' • ID new_lines
   89               | NUM array_element ID '=' • brak_pred new_lines

    ID   shift, and go to state 213
    '{'  shift, and go to state 214

    brak_pred  go to state 215


State 182

    7 new_lines: new_lines • NEWLINE
   87 num_array_decl: NUM array_element ID new_lines •

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 87 (num_array_decl)


State 183

   86 real_decl: REAL ID '=' expr_pred •
  114 expr_pred: expr_pred • REL_OP expr_pred
  115          | expr_pred • LOG_OP expr_pred
  121          | expr_pred • BINARY_OP expr_pred
  122          | expr_pred • UNARY_OP

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    BINARY_OP  shift, and go to state 123
    UNARY_OP   shift, and go to state 124

    $default  reduce using rule 86 (real_decl)


State 184

   91 real_array_decl: REAL array_element ID '=' • ID new_lines
   92                | REAL array_element ID '=' • brak_pred new_lines

    ID   shift, and go to state 216
    '{'  shift, and go to state 214

    brak_pred  go to state 217


State 185

    7 new_lines: new_lines • NEWLINE
   90 real_array_decl: REAL array_element ID new_lines •

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 90 (real_array_decl)


State 186

   84 bool_decl: BOOL ID '=' expr_pred •
  114 expr_pred: expr_pred • REL_OP expr_pred
  115          | expr_pred • LOG_OP expr_pred
  121          | expr_pred • BINARY_OP expr_pred
  122          | expr_pred • UNARY_OP

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    BINARY_OP  shift, and go to state 123
    UNARY_OP   shift, and go to state 124

    $default  reduce using rule 84 (bool_decl)


State 187

  106 in_built_call_stmt: ID DOT_OP ID '(' • arg_list ')'
  107                   | ID DOT_OP ID '(' • ')'

    NEG_OP    shift, and go to state 72
    BOOL_LIT  shift, and go to state 74
    ID        shift, and go to state 75
    NUM_LIT   shift, and go to state 76
    REAL_LIT  shift, and go to state 77
    INV_OP    shift, and go to state 78
    '('       shift, and go to state 79
    ')'       shift, and go to state 218

    call_stmt           go to state 80
    arg_list            go to state 219
    in_built_call_stmt  go to state 81
    expr_pred           go to state 142


State 188

  102 call_stmt: ID '(' arg_list ')' •

    $default  reduce using rule 102 (call_stmt)


State 189

  104 arg_list: arg_list ',' • expr_pred

    NEG_OP    shift, and go to state 72
    BOOL_LIT  shift, and go to state 74
    ID        shift, and go to state 75
    NUM_LIT   shift, and go to state 76
    REAL_LIT  shift, and go to state 77
    INV_OP    shift, and go to state 78
    '('       shift, and go to state 79

    call_stmt           go to state 80
    in_built_call_stmt  go to state 81
    expr_pred           go to state 220


State 190

    7 new_lines: new_lines • NEWLINE
  124 expr_stmt: ID '=' expr_pred new_lines •

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 124 (expr_stmt)


State 191

  114 expr_pred: expr_pred • REL_OP expr_pred
  115          | expr_pred • LOG_OP expr_pred
  121          | expr_pred • BINARY_OP expr_pred
  122          | expr_pred • UNARY_OP
  125 expr_stmt: ID array_element '=' expr_pred • new_lines

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    NEWLINE    shift, and go to state 7
    BINARY_OP  shift, and go to state 123
    UNARY_OP   shift, and go to state 124

    new_lines  go to state 221


State 192

    7 new_lines: new_lines • NEWLINE
   38 stmt: '{' new_lines '}' new_lines •

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 38 (stmt)


State 193

   36 stmt: '{' new_lines stmt_list '}' • new_lines

    NEWLINE  shift, and go to state 7

    new_lines  go to state 222


State 194

    7 new_lines: new_lines • NEWLINE
   37 stmt: '{' stmt_list '}' new_lines •

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 37 (stmt)


State 195

   49 else_if_block_list: ELSE_IF '(' • expr_pred ')' optional_new_lines ARROW optional_new_lines func_body

    NEG_OP    shift, and go to state 72
    BOOL_LIT  shift, and go to state 74
    ID        shift, and go to state 75
    NUM_LIT   shift, and go to state 76
    REAL_LIT  shift, and go to state 77
    INV_OP    shift, and go to state 78
    '('       shift, and go to state 79

    call_stmt           go to state 80
    in_built_call_stmt  go to state 81
    expr_pred           go to state 223


State 196

   47 else: ARROW optional_new_lines • func_body

    '{'  shift, and go to state 32

    func_body  go to state 224


State 197

   54 conditional_stmt: if_block optional_new_lines else lmao • new_lines

    NEWLINE  shift, and go to state 7

    new_lines  go to state 225


State 198

   48 else_if_block_list: else_if_block_list optional_new_lines • ELSE_IF '(' expr_pred ')' optional_new_lines ARROW optional_new_lines func_body
   51 conditional_stmt: if_block optional_new_lines else_if_block_list optional_new_lines • else lmao new_lines

    ELSE_IF  shift, and go to state 226
    ARROW    shift, and go to state 151

    else  go to state 227


State 199

   53 conditional_stmt: if_block optional_new_lines else_if_block_list lmao • new_lines

    NEWLINE  shift, and go to state 7

    new_lines  go to state 228


State 200

  108 in_built_call_stmt: in_built_call_stmt DOT_OP ID '(' • arg_list ')'
  109                   | in_built_call_stmt DOT_OP ID '(' • ')'

    NEG_OP    shift, and go to state 72
    BOOL_LIT  shift, and go to state 74
    ID        shift, and go to state 75
    NUM_LIT   shift, and go to state 76
    REAL_LIT  shift, and go to state 77
    INV_OP    shift, and go to state 78
    '('       shift, and go to state 79
    ')'       shift, and go to state 229

    call_stmt           go to state 80
    arg_list            go to state 230
    in_built_call_stmt  go to state 81
    expr_pred           go to state 142


State 201

   46 if_block: IF '(' expr_pred ')' optional_new_lines • ARROW optional_new_lines func_body

    ARROW  shift, and go to state 231


State 202

   44 loop_stmt: LOOP optional_new_lines '(' optional_expr_pred ')' • optional_new_lines func_body

    NEWLINE  shift, and go to state 7

    $default  reduce using rule 9 (optional_new_lines)

    new_lines           go to state 83
    optional_new_lines  go to state 232


State 203

   45 loop_stmt: LOOP optional_new_lines '(' optional_num_data_decl ';' • optional_expr_pred ';' optional_expr_pred ')' optional_new_lines func_body

    NEG_OP    shift, and go to state 72
    BOOL_LIT  shift, and go to state 74
    ID        shift, and go to state 75
    NUM_LIT   shift, and go to state 76
    REAL_LIT  shift, and go to state 77
    INV_OP    shift, and go to state 78
    '('       shift, and go to state 79

    $default  reduce using rule 41 (optional_expr_pred)

    optional_expr_pred  go to state 233
    call_stmt           go to state 80
    in_built_call_stmt  go to state 81
    expr_pred           go to state 169


State 204

   69 img_decl: IMG ID '<' NUM_LIT ',' • NUM_LIT '>' new_lines
   70         | IMG ID '<' NUM_LIT ',' • NUM_LIT ',' NUM_LIT '>' new_lines

    NUM_LIT  shift, and go to state 234


State 205

   71 img_decl: IMG ID '<' PATH '>' • new_lines

    NEWLINE  shift, and go to state 7

    new_lines  go to state 235


State 206

    7 new_lines: new_lines • NEWLINE
   72 img_decl: IMG ID '=' expr_pred new_lines •

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 72 (img_decl)


State 207

   73 gray_img_decl: GRAY_IMG ID '<' NUM_LIT ',' • NUM_LIT '>' new_lines
   74              | GRAY_IMG ID '<' NUM_LIT ',' • NUM_LIT ',' NUM_LIT '>' new_lines

    NUM_LIT  shift, and go to state 236


State 208

   75 gray_img_decl: GRAY_IMG ID '<' PATH '>' • new_lines

    NEWLINE  shift, and go to state 7

    new_lines  go to state 237


State 209

    7 new_lines: new_lines • NEWLINE
   76 gray_img_decl: GRAY_IMG ID '=' expr_pred new_lines •

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 76 (gray_img_decl)


State 210

   77 vid_decl: VID ID '<' NUM_LIT ',' • NUM_LIT '>' new_lines
   78         | VID ID '<' NUM_LIT ',' • NUM_LIT ',' NUM_LIT '>' new_lines

    NUM_LIT  shift, and go to state 238


State 211

   79 gray_vid_decl: GRAY_VID ID '<' NUM_LIT ',' • NUM_LIT '>' new_lines
   80              | GRAY_VID ID '<' NUM_LIT ',' • NUM_LIT ',' NUM_LIT '>' new_lines

    NUM_LIT  shift, and go to state 239


State 212

  114 expr_pred: expr_pred • REL_OP expr_pred
  115          | expr_pred • LOG_OP expr_pred
  121          | expr_pred • BINARY_OP expr_pred
  122          | expr_pred • UNARY_OP
  127 array_element: '[' expr_pred ',' expr_pred • ']'
  128              | '[' expr_pred ',' expr_pred • ',' expr_pred ']'

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    BINARY_OP  shift, and go to state 123
    UNARY_OP   shift, and go to state 124
    ','        shift, and go to state 240
    ']'        shift, and go to state 241


State 213

   88 num_array_decl: NUM array_element ID '=' ID • new_lines

    NEWLINE  shift, and go to state 7

    new_lines  go to state 242


State 214

   93 brak_pred: '{' • brak_pred_list '}'
   94          | '{' • lit_list '}'

    BOOL_LIT  shift, and go to state 243
    NUM_LIT   shift, and go to state 244
    REAL_LIT  shift, and go to state 245
    '{'       shift, and go to state 214

    brak_pred       go to state 246
    brak_pred_list  go to state 247
    lit_list        go to state 248
    lit             go to state 249


State 215

   89 num_array_decl: NUM array_element ID '=' brak_pred • new_lines

    NEWLINE  shift, and go to state 7

    new_lines  go to state 250


State 216

   91 real_array_decl: REAL array_element ID '=' ID • new_lines

    NEWLINE  shift, and go to state 7

    new_lines  go to state 251


State 217

   92 real_array_decl: REAL array_element ID '=' brak_pred • new_lines

    NEWLINE  shift, and go to state 7

    new_lines  go to state 252


State 218

  107 in_built_call_stmt: ID DOT_OP ID '(' ')' •

    $default  reduce using rule 107 (in_built_call_stmt)


State 219

  104 arg_list: arg_list • ',' expr_pred
  106 in_built_call_stmt: ID DOT_OP ID '(' arg_list • ')'

    ')'  shift, and go to state 253
    ','  shift, and go to state 189


State 220

  104 arg_list: arg_list ',' expr_pred •
  114 expr_pred: expr_pred • REL_OP expr_pred
  115          | expr_pred • LOG_OP expr_pred
  121          | expr_pred • BINARY_OP expr_pred
  122          | expr_pred • UNARY_OP

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    BINARY_OP  shift, and go to state 123
    UNARY_OP   shift, and go to state 124

    $default  reduce using rule 104 (arg_list)


State 221

    7 new_lines: new_lines • NEWLINE
  125 expr_stmt: ID array_element '=' expr_pred new_lines •

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 125 (expr_stmt)


State 222

    7 new_lines: new_lines • NEWLINE
   36 stmt: '{' new_lines stmt_list '}' new_lines •

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 36 (stmt)


State 223

   49 else_if_block_list: ELSE_IF '(' expr_pred • ')' optional_new_lines ARROW optional_new_lines func_body
  114 expr_pred: expr_pred • REL_OP expr_pred
  115          | expr_pred • LOG_OP expr_pred
  121          | expr_pred • BINARY_OP expr_pred
  122          | expr_pred • UNARY_OP

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    BINARY_OP  shift, and go to state 123
    UNARY_OP   shift, and go to state 124
    ')'        shift, and go to state 254


State 224

   47 else: ARROW optional_new_lines func_body •

    $default  reduce using rule 47 (else)


State 225

    7 new_lines: new_lines • NEWLINE
   54 conditional_stmt: if_block optional_new_lines else lmao new_lines •

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 54 (conditional_stmt)


State 226

   48 else_if_block_list: else_if_block_list optional_new_lines ELSE_IF • '(' expr_pred ')' optional_new_lines ARROW optional_new_lines func_body

    '('  shift, and go to state 255


State 227

   51 conditional_stmt: if_block optional_new_lines else_if_block_list optional_new_lines else • lmao new_lines

    $default  reduce using rule 50 (lmao)

    lmao  go to state 256


State 228

    7 new_lines: new_lines • NEWLINE
   53 conditional_stmt: if_block optional_new_lines else_if_block_list lmao new_lines •

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 53 (conditional_stmt)


State 229

  109 in_built_call_stmt: in_built_call_stmt DOT_OP ID '(' ')' •

    $default  reduce using rule 109 (in_built_call_stmt)


State 230

  104 arg_list: arg_list • ',' expr_pred
  108 in_built_call_stmt: in_built_call_stmt DOT_OP ID '(' arg_list • ')'

    ')'  shift, and go to state 257
    ','  shift, and go to state 189


State 231

   46 if_block: IF '(' expr_pred ')' optional_new_lines ARROW • optional_new_lines func_body

    NEWLINE  shift, and go to state 7

    $default  reduce using rule 9 (optional_new_lines)

    new_lines           go to state 83
    optional_new_lines  go to state 258


State 232

   44 loop_stmt: LOOP optional_new_lines '(' optional_expr_pred ')' optional_new_lines • func_body

    '{'  shift, and go to state 32

    func_body  go to state 259


State 233

   45 loop_stmt: LOOP optional_new_lines '(' optional_num_data_decl ';' optional_expr_pred • ';' optional_expr_pred ')' optional_new_lines func_body

    ';'  shift, and go to state 260


State 234

   69 img_decl: IMG ID '<' NUM_LIT ',' NUM_LIT • '>' new_lines
   70         | IMG ID '<' NUM_LIT ',' NUM_LIT • ',' NUM_LIT '>' new_lines

    ','  shift, and go to state 261
    '>'  shift, and go to state 262


State 235

    7 new_lines: new_lines • NEWLINE
   71 img_decl: IMG ID '<' PATH '>' new_lines •

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 71 (img_decl)


State 236

   73 gray_img_decl: GRAY_IMG ID '<' NUM_LIT ',' NUM_LIT • '>' new_lines
   74              | GRAY_IMG ID '<' NUM_LIT ',' NUM_LIT • ',' NUM_LIT '>' new_lines

    ','  shift, and go to state 263
    '>'  shift, and go to state 264


State 237

    7 new_lines: new_lines • NEWLINE
   75 gray_img_decl: GRAY_IMG ID '<' PATH '>' new_lines •

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 75 (gray_img_decl)


State 238

   77 vid_decl: VID ID '<' NUM_LIT ',' NUM_LIT • '>' new_lines
   78         | VID ID '<' NUM_LIT ',' NUM_LIT • ',' NUM_LIT '>' new_lines

    ','  shift, and go to state 265
    '>'  shift, and go to state 266


State 239

   79 gray_vid_decl: GRAY_VID ID '<' NUM_LIT ',' NUM_LIT • '>' new_lines
   80              | GRAY_VID ID '<' NUM_LIT ',' NUM_LIT • ',' NUM_LIT '>' new_lines

    ','  shift, and go to state 267
    '>'  shift, and go to state 268


State 240

  128 array_element: '[' expr_pred ',' expr_pred ',' • expr_pred ']'

    NEG_OP    shift, and go to state 72
    BOOL_LIT  shift, and go to state 74
    ID        shift, and go to state 75
    NUM_LIT   shift, and go to state 76
    REAL_LIT  shift, and go to state 77
    INV_OP    shift, and go to state 78
    '('       shift, and go to state 79

    call_stmt           go to state 80
    in_built_call_stmt  go to state 81
    expr_pred           go to state 269


State 241

  127 array_element: '[' expr_pred ',' expr_pred ']' •

    $default  reduce using rule 127 (array_element)


State 242

    7 new_lines: new_lines • NEWLINE
   88 num_array_decl: NUM array_element ID '=' ID new_lines •

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 88 (num_array_decl)


State 243

  101 lit: BOOL_LIT •

    $default  reduce using rule 101 (lit)


State 244

   99 lit: NUM_LIT •

    $default  reduce using rule 99 (lit)


State 245

  100 lit: REAL_LIT •

    $default  reduce using rule 100 (lit)


State 246

   96 brak_pred_list: brak_pred •

    $default  reduce using rule 96 (brak_pred_list)


State 247

   93 brak_pred: '{' brak_pred_list • '}'
   95 brak_pred_list: brak_pred_list • ',' brak_pred

    '}'  shift, and go to state 270
    ','  shift, and go to state 271


State 248

   94 brak_pred: '{' lit_list • '}'
   97 lit_list: lit_list • ',' lit

    '}'  shift, and go to state 272
    ','  shift, and go to state 273


State 249

   98 lit_list: lit •

    $default  reduce using rule 98 (lit_list)


State 250

    7 new_lines: new_lines • NEWLINE
   89 num_array_decl: NUM array_element ID '=' brak_pred new_lines •

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 89 (num_array_decl)


State 251

    7 new_lines: new_lines • NEWLINE
   91 real_array_decl: REAL array_element ID '=' ID new_lines •

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 91 (real_array_decl)


State 252

    7 new_lines: new_lines • NEWLINE
   92 real_array_decl: REAL array_element ID '=' brak_pred new_lines •

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 92 (real_array_decl)


State 253

  106 in_built_call_stmt: ID DOT_OP ID '(' arg_list ')' •

    $default  reduce using rule 106 (in_built_call_stmt)


State 254

   49 else_if_block_list: ELSE_IF '(' expr_pred ')' • optional_new_lines ARROW optional_new_lines func_body

    NEWLINE  shift, and go to state 7

    $default  reduce using rule 9 (optional_new_lines)

    new_lines           go to state 83
    optional_new_lines  go to state 274


State 255

   48 else_if_block_list: else_if_block_list optional_new_lines ELSE_IF '(' • expr_pred ')' optional_new_lines ARROW optional_new_lines func_body

    NEG_OP    shift, and go to state 72
    BOOL_LIT  shift, and go to state 74
    ID        shift, and go to state 75
    NUM_LIT   shift, and go to state 76
    REAL_LIT  shift, and go to state 77
    INV_OP    shift, and go to state 78
    '('       shift, and go to state 79

    call_stmt           go to state 80
    in_built_call_stmt  go to state 81
    expr_pred           go to state 275


State 256

   51 conditional_stmt: if_block optional_new_lines else_if_block_list optional_new_lines else lmao • new_lines

    NEWLINE  shift, and go to state 7

    new_lines  go to state 276


State 257

  108 in_built_call_stmt: in_built_call_stmt DOT_OP ID '(' arg_list ')' •

    $default  reduce using rule 108 (in_built_call_stmt)


State 258

   46 if_block: IF '(' expr_pred ')' optional_new_lines ARROW optional_new_lines • func_body

    '{'  shift, and go to state 32

    func_body  go to state 277


State 259

   44 loop_stmt: LOOP optional_new_lines '(' optional_expr_pred ')' optional_new_lines func_body •

    $default  reduce using rule 44 (loop_stmt)


State 260

   45 loop_stmt: LOOP optional_new_lines '(' optional_num_data_decl ';' optional_expr_pred ';' • optional_expr_pred ')' optional_new_lines func_body

    NEG_OP    shift, and go to state 72
    BOOL_LIT  shift, and go to state 74
    ID        shift, and go to state 75
    NUM_LIT   shift, and go to state 76
    REAL_LIT  shift, and go to state 77
    INV_OP    shift, and go to state 78
    '('       shift, and go to state 79

    $default  reduce using rule 41 (optional_expr_pred)

    optional_expr_pred  go to state 278
    call_stmt           go to state 80
    in_built_call_stmt  go to state 81
    expr_pred           go to state 169


State 261

   70 img_decl: IMG ID '<' NUM_LIT ',' NUM_LIT ',' • NUM_LIT '>' new_lines

    NUM_LIT  shift, and go to state 279


State 262

   69 img_decl: IMG ID '<' NUM_LIT ',' NUM_LIT '>' • new_lines

    NEWLINE  shift, and go to state 7

    new_lines  go to state 280


State 263

   74 gray_img_decl: GRAY_IMG ID '<' NUM_LIT ',' NUM_LIT ',' • NUM_LIT '>' new_lines

    NUM_LIT  shift, and go to state 281


State 264

   73 gray_img_decl: GRAY_IMG ID '<' NUM_LIT ',' NUM_LIT '>' • new_lines

    NEWLINE  shift, and go to state 7

    new_lines  go to state 282


State 265

   78 vid_decl: VID ID '<' NUM_LIT ',' NUM_LIT ',' • NUM_LIT '>' new_lines

    NUM_LIT  shift, and go to state 283


State 266

   77 vid_decl: VID ID '<' NUM_LIT ',' NUM_LIT '>' • new_lines

    NEWLINE  shift, and go to state 7

    new_lines  go to state 284


State 267

   80 gray_vid_decl: GRAY_VID ID '<' NUM_LIT ',' NUM_LIT ',' • NUM_LIT '>' new_lines

    NUM_LIT  shift, and go to state 285


State 268

   79 gray_vid_decl: GRAY_VID ID '<' NUM_LIT ',' NUM_LIT '>' • new_lines

    NEWLINE  shift, and go to state 7

    new_lines  go to state 286


State 269

  114 expr_pred: expr_pred • REL_OP expr_pred
  115          | expr_pred • LOG_OP expr_pred
  121          | expr_pred • BINARY_OP expr_pred
  122          | expr_pred • UNARY_OP
  128 array_element: '[' expr_pred ',' expr_pred ',' expr_pred • ']'

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    BINARY_OP  shift, and go to state 123
    UNARY_OP   shift, and go to state 124
    ']'        shift, and go to state 287


State 270

   93 brak_pred: '{' brak_pred_list '}' •

    $default  reduce using rule 93 (brak_pred)


State 271

   95 brak_pred_list: brak_pred_list ',' • brak_pred

    '{'  shift, and go to state 214

    brak_pred  go to state 288


State 272

   94 brak_pred: '{' lit_list '}' •

    $default  reduce using rule 94 (brak_pred)


State 273

   97 lit_list: lit_list ',' • lit

    BOOL_LIT  shift, and go to state 243
    NUM_LIT   shift, and go to state 244
    REAL_LIT  shift, and go to state 245

    lit  go to state 289


State 274

   49 else_if_block_list: ELSE_IF '(' expr_pred ')' optional_new_lines • ARROW optional_new_lines func_body

    ARROW  shift, and go to state 290


State 275

   48 else_if_block_list: else_if_block_list optional_new_lines ELSE_IF '(' expr_pred • ')' optional_new_lines ARROW optional_new_lines func_body
  114 expr_pred: expr_pred • REL_OP expr_pred
  115          | expr_pred • LOG_OP expr_pred
  121          | expr_pred • BINARY_OP expr_pred
  122          | expr_pred • UNARY_OP

    LOG_OP     shift, and go to state 121
    REL_OP     shift, and go to state 122
    BINARY_OP  shift, and go to state 123
    UNARY_OP   shift, and go to state 124
    ')'        shift, and go to state 291


State 276

    7 new_lines: new_lines • NEWLINE
   51 conditional_stmt: if_block optional_new_lines else_if_block_list optional_new_lines else lmao new_lines •

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 51 (conditional_stmt)


State 277

   46 if_block: IF '(' expr_pred ')' optional_new_lines ARROW optional_new_lines func_body •

    $default  reduce using rule 46 (if_block)


State 278

   45 loop_stmt: LOOP optional_new_lines '(' optional_num_data_decl ';' optional_expr_pred ';' optional_expr_pred • ')' optional_new_lines func_body

    ')'  shift, and go to state 292


State 279

   70 img_decl: IMG ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT • '>' new_lines

    '>'  shift, and go to state 293


State 280

    7 new_lines: new_lines • NEWLINE
   69 img_decl: IMG ID '<' NUM_LIT ',' NUM_LIT '>' new_lines •

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 69 (img_decl)


State 281

   74 gray_img_decl: GRAY_IMG ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT • '>' new_lines

    '>'  shift, and go to state 294


State 282

    7 new_lines: new_lines • NEWLINE
   73 gray_img_decl: GRAY_IMG ID '<' NUM_LIT ',' NUM_LIT '>' new_lines •

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 73 (gray_img_decl)


State 283

   78 vid_decl: VID ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT • '>' new_lines

    '>'  shift, and go to state 295


State 284

    7 new_lines: new_lines • NEWLINE
   77 vid_decl: VID ID '<' NUM_LIT ',' NUM_LIT '>' new_lines •

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 77 (vid_decl)


State 285

   80 gray_vid_decl: GRAY_VID ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT • '>' new_lines

    '>'  shift, and go to state 296


State 286

    7 new_lines: new_lines • NEWLINE
   79 gray_vid_decl: GRAY_VID ID '<' NUM_LIT ',' NUM_LIT '>' new_lines •

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 79 (gray_vid_decl)


State 287

  128 array_element: '[' expr_pred ',' expr_pred ',' expr_pred ']' •

    $default  reduce using rule 128 (array_element)


State 288

   95 brak_pred_list: brak_pred_list ',' brak_pred •

    $default  reduce using rule 95 (brak_pred_list)


State 289

   97 lit_list: lit_list ',' lit •

    $default  reduce using rule 97 (lit_list)


State 290

   49 else_if_block_list: ELSE_IF '(' expr_pred ')' optional_new_lines ARROW • optional_new_lines func_body

    NEWLINE  shift, and go to state 7

    $default  reduce using rule 9 (optional_new_lines)

    new_lines           go to state 83
    optional_new_lines  go to state 297


State 291

   48 else_if_block_list: else_if_block_list optional_new_lines ELSE_IF '(' expr_pred ')' • optional_new_lines ARROW optional_new_lines func_body

    NEWLINE  shift, and go to state 7

    $default  reduce using rule 9 (optional_new_lines)

    new_lines           go to state 83
    optional_new_lines  go to state 298


State 292

   45 loop_stmt: LOOP optional_new_lines '(' optional_num_data_decl ';' optional_expr_pred ';' optional_expr_pred ')' • optional_new_lines func_body

    NEWLINE  shift, and go to state 7

    $default  reduce using rule 9 (optional_new_lines)

    new_lines           go to state 83
    optional_new_lines  go to state 299


State 293

   70 img_decl: IMG ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' • new_lines

    NEWLINE  shift, and go to state 7

    new_lines  go to state 300


State 294

   74 gray_img_decl: GRAY_IMG ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' • new_lines

    NEWLINE  shift, and go to state 7

    new_lines  go to state 301


State 295

   78 vid_decl: VID ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' • new_lines

    NEWLINE  shift, and go to state 7

    new_lines  go to state 302


State 296

   80 gray_vid_decl: GRAY_VID ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' • new_lines

    NEWLINE  shift, and go to state 7

    new_lines  go to state 303


State 297

   49 else_if_block_list: ELSE_IF '(' expr_pred ')' optional_new_lines ARROW optional_new_lines • func_body

    '{'  shift, and go to state 32

    func_body  go to state 304


State 298

   48 else_if_block_list: else_if_block_list optional_new_lines ELSE_IF '(' expr_pred ')' optional_new_lines • ARROW optional_new_lines func_body

    ARROW  shift, and go to state 305


State 299

   45 loop_stmt: LOOP optional_new_lines '(' optional_num_data_decl ';' optional_expr_pred ';' optional_expr_pred ')' optional_new_lines • func_body

    '{'  shift, and go to state 32

    func_body  go to state 306


State 300

    7 new_lines: new_lines • NEWLINE
   70 img_decl: IMG ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines •

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 70 (img_decl)


State 301

    7 new_lines: new_lines • NEWLINE
   74 gray_img_decl: GRAY_IMG ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines •

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 74 (gray_img_decl)


State 302

    7 new_lines: new_lines • NEWLINE
   78 vid_decl: VID ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines •

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 78 (vid_decl)


State 303

    7 new_lines: new_lines • NEWLINE
   80 gray_vid_decl: GRAY_VID ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines •

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 80 (gray_vid_decl)


State 304

   49 else_if_block_list: ELSE_IF '(' expr_pred ')' optional_new_lines ARROW optional_new_lines func_body •

    $default  reduce using rule 49 (else_if_block_list)


State 305

   48 else_if_block_list: else_if_block_list optional_new_lines ELSE_IF '(' expr_pred ')' optional_new_lines ARROW • optional_new_lines func_body

    NEWLINE  shift, and go to state 7

    $default  reduce using rule 9 (optional_new_lines)

    new_lines           go to state 83
    optional_new_lines  go to state 307


State 306

   45 loop_stmt: LOOP optional_new_lines '(' optional_num_data_decl ';' optional_expr_pred ';' optional_expr_pred ')' optional_new_lines func_body •

    $default  reduce using rule 45 (loop_stmt)


State 307

   48 else_if_block_list: else_if_block_list optional_new_lines ELSE_IF '(' expr_pred ')' optional_new_lines ARROW optional_new_lines • func_body

    '{'  shift, and go to state 32

    func_body  go to state 308


State 308

   48 else_if_block_list: else_if_block_list optional_new_lines ELSE_IF '(' expr_pred ')' optional_new_lines ARROW optional_new_lines func_body •

    $default  reduce using rule 48 (else_if_block_list)
