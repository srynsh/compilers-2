Grammar

    0 $accept: program1 $end

    1 program: function new_lines program
    2        | function optional_new_lines

    3 program1: optional_new_lines program

    4 func_body: '{' new_lines stmt_list '}'

    5 new_lines: new_lines NEWLINE
    6          | NEWLINE

    7 optional_new_lines: /* empty */
    8                   | new_lines

    9 function: INK ID '(' par_list ')' ARROW RET_TYPE func_body
   10         | INK ID '(' ')' ARROW RET_TYPE func_body
   11         | INK ID '(' par_list ')' ARROW RET_TYPE new_lines func_body
   12         | INK ID '(' ')' ARROW RET_TYPE new_lines func_body

   13 RET_TYPE: datatype
   14         | VOID

   15 par_list: par_list ',' par
   16         | par

   17 par: datatype ID

   18 datatype: IMG
   19         | GRAY_IMG
   20         | VID
   21         | GRAY_VID
   22         | NUM
   23         | REAL
   24         | BOOL

   25 stmt_list: stmt
   26          | stmt_list stmt

   27 l_stmt: decl_stmt
   28       | loop_conditional_stmt
   29       | call_stmt new_lines
   30       | in_built_call_stmt new_lines
   31       | expr_stmt
   32       | return_stmt
   33       | loop_stmt new_lines
   34       | '{' new_lines loop_stmt_list '}' new_lines
   35       | '{' new_lines '}' new_lines
   36       | '{' '}' new_lines
   37       | unary_stmt
   38       | BREAK new_lines
   39       | CONTINUE new_lines

   40 loop_stmt_list: l_stmt
   41               | loop_stmt_list l_stmt

   42 loop_body: '{' new_lines loop_stmt_list '}'

   43 stmt: decl_stmt
   44     | conditional_stmt
   45     | call_stmt new_lines
   46     | in_built_call_stmt new_lines
   47     | expr_stmt
   48     | return_stmt
   49     | loop_stmt new_lines
   50     | '{' new_lines stmt_list '}' new_lines
   51     | '{' new_lines '}' new_lines
   52     | '{' '}' new_lines
   53     | unary_stmt

   54 unary_stmt: ID UNARY_OP new_lines

   55 optional_expr_pred: expr_pred
   56                   | /* empty */

   57 optional_num_data_decl: numeric_data_decl
   58                       | /* empty */

   59 loop_stmt: LOOP optional_new_lines '(' optional_expr_pred ')' optional_new_lines loop_body
   60          | LOOP optional_new_lines '(' optional_num_data_decl ';' optional_expr_pred ';' optional_expr_pred ')' optional_new_lines loop_body

   61 if_block: IF optional_new_lines '(' expr_pred ')' optional_new_lines ARROW optional_new_lines func_body

   62 else: ARROW optional_new_lines func_body

   63 else_if_block_list: else_if_block_list optional_new_lines ELSE_IF '(' expr_pred ')' optional_new_lines ARROW optional_new_lines func_body
   64                   | ELSE_IF '(' expr_pred ')' optional_new_lines ARROW optional_new_lines func_body

   65 @1: /* empty */

   66 conditional_stmt: if_block optional_new_lines else_if_block_list optional_new_lines else @1 new_lines
   67                 | if_block new_lines
   68                 | if_block optional_new_lines else_if_block_list new_lines

   69 @2: /* empty */

   70 conditional_stmt: if_block optional_new_lines else @2 new_lines

   71 loop_if_block: IF optional_new_lines '(' expr_pred ')' optional_new_lines ARROW optional_new_lines loop_body

   72 loop_else: ARROW optional_new_lines loop_body

   73 loop_else_if_block_list: loop_else_if_block_list optional_new_lines ELSE_IF '(' expr_pred ')' optional_new_lines ARROW optional_new_lines loop_body
   74                        | ELSE_IF '(' expr_pred ')' optional_new_lines ARROW optional_new_lines loop_body

   75 @3: /* empty */

   76 loop_conditional_stmt: loop_if_block optional_new_lines loop_else_if_block_list optional_new_lines loop_else @3 new_lines
   77                      | loop_if_block new_lines
   78                      | loop_if_block optional_new_lines loop_else_if_block_list new_lines

   79 @4: /* empty */

   80 loop_conditional_stmt: loop_if_block optional_new_lines loop_else @4 new_lines

   81 numeric_data_decl: num_decl
   82                  | real_decl
   83                  | bool_decl

   84 empty_return: /* empty */

   85 return_stmt: RETURN expr_pred empty_return new_lines
   86            | RETURN VOID empty_return new_lines

   87 decl_stmt: img_decl
   88          | gray_img_decl
   89          | vid_decl
   90          | gray_vid_decl
   91          | num_decl new_lines
   92          | bool_decl new_lines
   93          | real_decl new_lines
   94          | num_array_decl
   95          | real_array_decl

   96 img_decl: IMG ID '<' NUM_LIT ',' NUM_LIT '>' new_lines
   97         | IMG ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines
   98         | IMG ID '<' PATH '>' new_lines
   99         | IMG ID '=' expr_pred new_lines

  100 gray_img_decl: GRAY_IMG ID '<' NUM_LIT ',' NUM_LIT '>' new_lines
  101              | GRAY_IMG ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines
  102              | GRAY_IMG ID '<' PATH '>' new_lines
  103              | GRAY_IMG ID '=' expr_pred new_lines

  104 vid_decl: VID ID '<' NUM_LIT ',' NUM_LIT '>' new_lines
  105         | VID ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines

  106 gray_vid_decl: GRAY_VID ID '<' NUM_LIT ',' NUM_LIT '>' new_lines
  107              | GRAY_VID ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines

  108 num_decl: NUM ID
  109         | NUM ID '=' expr_pred

  110 bool_decl: BOOL ID
  111          | BOOL ID '=' expr_pred

  112 real_decl: REAL ID
  113          | REAL ID '=' expr_pred

  114 num_array_decl: NUM array_element ID new_lines
  115               | NUM array_element ID '=' ID new_lines
  116               | NUM array_element ID '=' brak_pred new_lines

  117 real_array_decl: REAL array_element ID new_lines
  118                | REAL array_element ID '=' ID new_lines
  119                | REAL array_element ID '=' brak_pred new_lines

  120 brak_pred: '{' brak_pred_list '}'
  121          | '{' lit_list '}'

  122 brak_pred_list: brak_pred_list ',' brak_pred
  123               | brak_pred

  124 lit_list: lit_list ',' lit
  125         | lit

  126 lit: NUM_LIT
  127    | REAL_LIT
  128    | BOOL_LIT

  129 call_stmt: ID '(' arg_list ')'
  130          | ID '(' ')'

  131 arg_list: arg_list ',' expr_pred
  132         | expr_pred

  133 in_built_call_stmt: ID DOT_OP ID '(' arg_list ')'
  134                   | ID DOT_OP ID '(' ')'
  135                   | in_built_call_stmt DOT_OP ID '(' arg_list ')'
  136                   | in_built_call_stmt DOT_OP ID '(' ')'

  137 expr_pred: ID
  138          | NUM_LIT
  139          | REAL_LIT
  140          | BOOL_LIT
  141          | expr_pred REL_OP expr_pred
  142          | expr_pred LOG_OP expr_pred
  143          | '(' expr_pred ')'
  144          | NEG_OP expr_pred
  145          | call_stmt
  146          | in_built_call_stmt
  147          | ID array_element
  148          | expr_pred BINARY_OP expr_pred
  149          | expr_pred UNARY_OP
  150          | INV_OP expr_pred

  151 expr_stmt: ID '=' expr_pred new_lines
  152          | ID array_element '=' expr_pred new_lines

  153 array_element: '[' expr_pred ']'
  154              | '[' expr_pred ',' expr_pred ']'
  155              | '[' expr_pred ',' expr_pred ',' expr_pred ']'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 9 10 11 12 59 60 61 63 64 71 73 74 129 130 133 134 135 136
    143
')' (41) 9 10 11 12 59 60 61 63 64 71 73 74 129 130 133 134 135 136
    143
',' (44) 15 96 97 100 101 104 105 106 107 122 124 131 154 155
';' (59) 60
'<' (60) 96 97 98 100 101 102 104 105 106 107
'=' (61) 99 103 109 111 113 115 116 118 119 151 152
'>' (62) 96 97 98 100 101 102 104 105 106 107
'[' (91) 153 154 155
']' (93) 153 154 155
'{' (123) 4 34 35 36 42 50 51 52 120 121
'}' (125) 4 34 35 36 42 50 51 52 120 121
error (256)
IF (258) 61 71
ELSE_IF (259) 63 64 73 74
RETURN (260) 85 86
CONTINUE (261) 39
BREAK (262) 38
LOOP (263) 59 60
INK (264) 9 10 11 12
ARROW (265) 9 10 11 12 61 62 63 64 71 72 73 74
DOT_OP (266) 133 134 135 136
LOG_OP (267) 142
REL_OP (268) 141
NEG_OP (269) 144
IMG (270) 18 96 97 98 99
GRAY_IMG (271) 19 100 101 102 103
VID (272) 20 104 105
GRAY_VID (273) 21 106 107
NUM (274) 22 108 109 114 115 116
REAL (275) 23 112 113 117 118 119
VOID (276) 14 86
BOOL (277) 24 110 111
BOOL_LIT (278) 128 140
NEWLINE (279) 5 6
ID (280) 9 10 11 12 17 54 96 97 98 99 100 101 102 103 104 105 106 107
    108 109 110 111 112 113 114 115 116 117 118 119 129 130 133 134
    135 136 137 147 151 152
NUM_LIT (281) 96 97 100 101 104 105 106 107 126 138
REAL_LIT (282) 127 139
PATH (283) 98 102
BINARY_OP (284) 148
UNARY_OP (285) 54 149
INV_OP (286) 150


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
program (44)
    on left: 1 2, on right: 1 3
program1 (45)
    on left: 3, on right: 0
func_body (46)
    on left: 4, on right: 9 10 11 12 61 62 63 64
new_lines (47)
    on left: 5 6, on right: 1 4 5 8 11 12 29 30 33 34 35 36 38 39 42
    45 46 49 50 51 52 54 66 67 68 70 76 77 78 80 85 86 91 92 93 96
    97 98 99 100 101 102 103 104 105 106 107 114 115 116 117 118 119
    151 152
optional_new_lines (48)
    on left: 7 8, on right: 2 3 59 60 61 62 63 64 66 68 70 71 72 73
    74 76 78 80
function (49)
    on left: 9 10 11 12, on right: 1 2
RET_TYPE (50)
    on left: 13 14, on right: 9 10 11 12
par_list (51)
    on left: 15 16, on right: 9 11 15
par (52)
    on left: 17, on right: 15 16
datatype (53)
    on left: 18 19 20 21 22 23 24, on right: 13 17
stmt_list (54)
    on left: 25 26, on right: 4 26 50
l_stmt (55)
    on left: 27 28 29 30 31 32 33 34 35 36 37 38 39,
    on right: 40 41
loop_stmt_list (56)
    on left: 40 41, on right: 34 41 42
loop_body (57)
    on left: 42, on right: 59 60 71 72 73 74
stmt (58)
    on left: 43 44 45 46 47 48 49 50 51 52 53, on right: 25 26
unary_stmt (59)
    on left: 54, on right: 37 53
optional_expr_pred (60)
    on left: 55 56, on right: 59 60
optional_num_data_decl (61)
    on left: 57 58, on right: 60
loop_stmt (62)
    on left: 59 60, on right: 33 49
if_block (63)
    on left: 61, on right: 66 67 68 70
else (64)
    on left: 62, on right: 66 70
else_if_block_list (65)
    on left: 63 64, on right: 63 66 68
conditional_stmt (66)
    on left: 66 67 68 70, on right: 44
@1 (67)
    on left: 65, on right: 66
@2 (68)
    on left: 69, on right: 70
loop_if_block (69)
    on left: 71, on right: 76 77 78 80
loop_else (70)
    on left: 72, on right: 76 80
loop_else_if_block_list (71)
    on left: 73 74, on right: 73 76 78
loop_conditional_stmt (72)
    on left: 76 77 78 80, on right: 28
@3 (73)
    on left: 75, on right: 76
@4 (74)
    on left: 79, on right: 80
numeric_data_decl (75)
    on left: 81 82 83, on right: 57
empty_return (76)
    on left: 84, on right: 85 86
return_stmt (77)
    on left: 85 86, on right: 32 48
decl_stmt (78)
    on left: 87 88 89 90 91 92 93 94 95, on right: 27 43
img_decl (79)
    on left: 96 97 98 99, on right: 87
gray_img_decl (80)
    on left: 100 101 102 103, on right: 88
vid_decl (81)
    on left: 104 105, on right: 89
gray_vid_decl (82)
    on left: 106 107, on right: 90
num_decl (83)
    on left: 108 109, on right: 81 91
bool_decl (84)
    on left: 110 111, on right: 83 92
real_decl (85)
    on left: 112 113, on right: 82 93
num_array_decl (86)
    on left: 114 115 116, on right: 94
real_array_decl (87)
    on left: 117 118 119, on right: 95
brak_pred (88)
    on left: 120 121, on right: 116 119 122 123
brak_pred_list (89)
    on left: 122 123, on right: 120 122
lit_list (90)
    on left: 124 125, on right: 121 124
lit (91)
    on left: 126 127 128, on right: 124 125
call_stmt (92)
    on left: 129 130, on right: 29 45 145
arg_list (93)
    on left: 131 132, on right: 129 131 133 135
in_built_call_stmt (94)
    on left: 133 134 135 136, on right: 30 46 135 136 146
expr_pred (95)
    on left: 137 138 139 140 141 142 143 144 145 146 147 148 149 150
   , on right: 55 61 63 64 71 73 74 85 99 103 109 111 113 131 132 141
    142 143 144 148 149 150 151 152 153 154 155
expr_stmt (96)
    on left: 151 152, on right: 31 47
array_element (97)
    on left: 153 154 155, on right: 114 115 116 117 118 119 147 152


state 0

    0 $accept: . program1 $end

    NEWLINE  shift, and go to state 1

    $default  reduce using rule 7 (optional_new_lines)

    program1            go to state 2
    new_lines           go to state 3
    optional_new_lines  go to state 4


state 1

    6 new_lines: NEWLINE .

    $default  reduce using rule 6 (new_lines)


state 2

    0 $accept: program1 . $end

    $end  shift, and go to state 5


state 3

    5 new_lines: new_lines . NEWLINE
    8 optional_new_lines: new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 8 (optional_new_lines)


state 4

    3 program1: optional_new_lines . program

    INK  shift, and go to state 7

    program   go to state 8
    function  go to state 9


state 5

    0 $accept: program1 $end .

    $default  accept


state 6

    5 new_lines: new_lines NEWLINE .

    $default  reduce using rule 5 (new_lines)


state 7

    9 function: INK . ID '(' par_list ')' ARROW RET_TYPE func_body
   10         | INK . ID '(' ')' ARROW RET_TYPE func_body
   11         | INK . ID '(' par_list ')' ARROW RET_TYPE new_lines func_body
   12         | INK . ID '(' ')' ARROW RET_TYPE new_lines func_body

    ID  shift, and go to state 10


state 8

    3 program1: optional_new_lines program .

    $default  reduce using rule 3 (program1)


state 9

    1 program: function . new_lines program
    2        | function . optional_new_lines

    NEWLINE  shift, and go to state 1

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 11
    optional_new_lines  go to state 12


state 10

    9 function: INK ID . '(' par_list ')' ARROW RET_TYPE func_body
   10         | INK ID . '(' ')' ARROW RET_TYPE func_body
   11         | INK ID . '(' par_list ')' ARROW RET_TYPE new_lines func_body
   12         | INK ID . '(' ')' ARROW RET_TYPE new_lines func_body

    '('  shift, and go to state 13


state 11

    1 program: function new_lines . program
    5 new_lines: new_lines . NEWLINE
    8 optional_new_lines: new_lines .

    INK      shift, and go to state 7
    NEWLINE  shift, and go to state 6

    $default  reduce using rule 8 (optional_new_lines)

    program   go to state 14
    function  go to state 9


state 12

    2 program: function optional_new_lines .

    $default  reduce using rule 2 (program)


state 13

    9 function: INK ID '(' . par_list ')' ARROW RET_TYPE func_body
   10         | INK ID '(' . ')' ARROW RET_TYPE func_body
   11         | INK ID '(' . par_list ')' ARROW RET_TYPE new_lines func_body
   12         | INK ID '(' . ')' ARROW RET_TYPE new_lines func_body

    IMG       shift, and go to state 15
    GRAY_IMG  shift, and go to state 16
    VID       shift, and go to state 17
    GRAY_VID  shift, and go to state 18
    NUM       shift, and go to state 19
    REAL      shift, and go to state 20
    BOOL      shift, and go to state 21
    ')'       shift, and go to state 22

    par_list  go to state 23
    par       go to state 24
    datatype  go to state 25


state 14

    1 program: function new_lines program .

    $default  reduce using rule 1 (program)


state 15

   18 datatype: IMG .

    $default  reduce using rule 18 (datatype)


state 16

   19 datatype: GRAY_IMG .

    $default  reduce using rule 19 (datatype)


state 17

   20 datatype: VID .

    $default  reduce using rule 20 (datatype)


state 18

   21 datatype: GRAY_VID .

    $default  reduce using rule 21 (datatype)


state 19

   22 datatype: NUM .

    $default  reduce using rule 22 (datatype)


state 20

   23 datatype: REAL .

    $default  reduce using rule 23 (datatype)


state 21

   24 datatype: BOOL .

    $default  reduce using rule 24 (datatype)


state 22

   10 function: INK ID '(' ')' . ARROW RET_TYPE func_body
   12         | INK ID '(' ')' . ARROW RET_TYPE new_lines func_body

    ARROW  shift, and go to state 26


state 23

    9 function: INK ID '(' par_list . ')' ARROW RET_TYPE func_body
   11         | INK ID '(' par_list . ')' ARROW RET_TYPE new_lines func_body
   15 par_list: par_list . ',' par

    ')'  shift, and go to state 27
    ','  shift, and go to state 28


state 24

   16 par_list: par .

    $default  reduce using rule 16 (par_list)


state 25

   17 par: datatype . ID

    ID  shift, and go to state 29


state 26

   10 function: INK ID '(' ')' ARROW . RET_TYPE func_body
   12         | INK ID '(' ')' ARROW . RET_TYPE new_lines func_body

    IMG       shift, and go to state 15
    GRAY_IMG  shift, and go to state 16
    VID       shift, and go to state 17
    GRAY_VID  shift, and go to state 18
    NUM       shift, and go to state 19
    REAL      shift, and go to state 20
    VOID      shift, and go to state 30
    BOOL      shift, and go to state 21

    RET_TYPE  go to state 31
    datatype  go to state 32


state 27

    9 function: INK ID '(' par_list ')' . ARROW RET_TYPE func_body
   11         | INK ID '(' par_list ')' . ARROW RET_TYPE new_lines func_body

    ARROW  shift, and go to state 33


state 28

   15 par_list: par_list ',' . par

    IMG       shift, and go to state 15
    GRAY_IMG  shift, and go to state 16
    VID       shift, and go to state 17
    GRAY_VID  shift, and go to state 18
    NUM       shift, and go to state 19
    REAL      shift, and go to state 20
    BOOL      shift, and go to state 21

    par       go to state 34
    datatype  go to state 25


state 29

   17 par: datatype ID .

    $default  reduce using rule 17 (par)


state 30

   14 RET_TYPE: VOID .

    $default  reduce using rule 14 (RET_TYPE)


state 31

   10 function: INK ID '(' ')' ARROW RET_TYPE . func_body
   12         | INK ID '(' ')' ARROW RET_TYPE . new_lines func_body

    NEWLINE  shift, and go to state 1
    '{'      shift, and go to state 35

    func_body  go to state 36
    new_lines  go to state 37


state 32

   13 RET_TYPE: datatype .

    $default  reduce using rule 13 (RET_TYPE)


state 33

    9 function: INK ID '(' par_list ')' ARROW . RET_TYPE func_body
   11         | INK ID '(' par_list ')' ARROW . RET_TYPE new_lines func_body

    IMG       shift, and go to state 15
    GRAY_IMG  shift, and go to state 16
    VID       shift, and go to state 17
    GRAY_VID  shift, and go to state 18
    NUM       shift, and go to state 19
    REAL      shift, and go to state 20
    VOID      shift, and go to state 30
    BOOL      shift, and go to state 21

    RET_TYPE  go to state 38
    datatype  go to state 32


state 34

   15 par_list: par_list ',' par .

    $default  reduce using rule 15 (par_list)


state 35

    4 func_body: '{' . new_lines stmt_list '}'

    NEWLINE  shift, and go to state 1

    new_lines  go to state 39


state 36

   10 function: INK ID '(' ')' ARROW RET_TYPE func_body .

    $default  reduce using rule 10 (function)


state 37

    5 new_lines: new_lines . NEWLINE
   12 function: INK ID '(' ')' ARROW RET_TYPE new_lines . func_body

    NEWLINE  shift, and go to state 6
    '{'      shift, and go to state 35

    func_body  go to state 40


state 38

    9 function: INK ID '(' par_list ')' ARROW RET_TYPE . func_body
   11         | INK ID '(' par_list ')' ARROW RET_TYPE . new_lines func_body

    NEWLINE  shift, and go to state 1
    '{'      shift, and go to state 35

    func_body  go to state 41
    new_lines  go to state 42


state 39

    4 func_body: '{' new_lines . stmt_list '}'
    5 new_lines: new_lines . NEWLINE

    IF        shift, and go to state 43
    RETURN    shift, and go to state 44
    LOOP      shift, and go to state 45
    IMG       shift, and go to state 46
    GRAY_IMG  shift, and go to state 47
    VID       shift, and go to state 48
    GRAY_VID  shift, and go to state 49
    NUM       shift, and go to state 50
    REAL      shift, and go to state 51
    BOOL      shift, and go to state 52
    NEWLINE   shift, and go to state 6
    ID        shift, and go to state 53
    '{'       shift, and go to state 54

    stmt_list           go to state 55
    stmt                go to state 56
    unary_stmt          go to state 57
    loop_stmt           go to state 58
    if_block            go to state 59
    conditional_stmt    go to state 60
    return_stmt         go to state 61
    decl_stmt           go to state 62
    img_decl            go to state 63
    gray_img_decl       go to state 64
    vid_decl            go to state 65
    gray_vid_decl       go to state 66
    num_decl            go to state 67
    bool_decl           go to state 68
    real_decl           go to state 69
    num_array_decl      go to state 70
    real_array_decl     go to state 71
    call_stmt           go to state 72
    in_built_call_stmt  go to state 73
    expr_stmt           go to state 74


state 40

   12 function: INK ID '(' ')' ARROW RET_TYPE new_lines func_body .

    $default  reduce using rule 12 (function)


state 41

    9 function: INK ID '(' par_list ')' ARROW RET_TYPE func_body .

    $default  reduce using rule 9 (function)


state 42

    5 new_lines: new_lines . NEWLINE
   11 function: INK ID '(' par_list ')' ARROW RET_TYPE new_lines . func_body

    NEWLINE  shift, and go to state 6
    '{'      shift, and go to state 35

    func_body  go to state 75


state 43

   61 if_block: IF . optional_new_lines '(' expr_pred ')' optional_new_lines ARROW optional_new_lines func_body

    NEWLINE  shift, and go to state 1

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 3
    optional_new_lines  go to state 76


state 44

   85 return_stmt: RETURN . expr_pred empty_return new_lines
   86            | RETURN . VOID empty_return new_lines

    NEG_OP    shift, and go to state 77
    VOID      shift, and go to state 78
    BOOL_LIT  shift, and go to state 79
    ID        shift, and go to state 80
    NUM_LIT   shift, and go to state 81
    REAL_LIT  shift, and go to state 82
    INV_OP    shift, and go to state 83
    '('       shift, and go to state 84

    call_stmt           go to state 85
    in_built_call_stmt  go to state 86
    expr_pred           go to state 87


state 45

   59 loop_stmt: LOOP . optional_new_lines '(' optional_expr_pred ')' optional_new_lines loop_body
   60          | LOOP . optional_new_lines '(' optional_num_data_decl ';' optional_expr_pred ';' optional_expr_pred ')' optional_new_lines loop_body

    NEWLINE  shift, and go to state 1

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 3
    optional_new_lines  go to state 88


state 46

   96 img_decl: IMG . ID '<' NUM_LIT ',' NUM_LIT '>' new_lines
   97         | IMG . ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines
   98         | IMG . ID '<' PATH '>' new_lines
   99         | IMG . ID '=' expr_pred new_lines

    ID  shift, and go to state 89


state 47

  100 gray_img_decl: GRAY_IMG . ID '<' NUM_LIT ',' NUM_LIT '>' new_lines
  101              | GRAY_IMG . ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines
  102              | GRAY_IMG . ID '<' PATH '>' new_lines
  103              | GRAY_IMG . ID '=' expr_pred new_lines

    ID  shift, and go to state 90


state 48

  104 vid_decl: VID . ID '<' NUM_LIT ',' NUM_LIT '>' new_lines
  105         | VID . ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines

    ID  shift, and go to state 91


state 49

  106 gray_vid_decl: GRAY_VID . ID '<' NUM_LIT ',' NUM_LIT '>' new_lines
  107              | GRAY_VID . ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines

    ID  shift, and go to state 92


state 50

  108 num_decl: NUM . ID
  109         | NUM . ID '=' expr_pred
  114 num_array_decl: NUM . array_element ID new_lines
  115               | NUM . array_element ID '=' ID new_lines
  116               | NUM . array_element ID '=' brak_pred new_lines

    ID   shift, and go to state 93
    '['  shift, and go to state 94

    array_element  go to state 95


state 51

  112 real_decl: REAL . ID
  113          | REAL . ID '=' expr_pred
  117 real_array_decl: REAL . array_element ID new_lines
  118                | REAL . array_element ID '=' ID new_lines
  119                | REAL . array_element ID '=' brak_pred new_lines

    ID   shift, and go to state 96
    '['  shift, and go to state 94

    array_element  go to state 97


state 52

  110 bool_decl: BOOL . ID
  111          | BOOL . ID '=' expr_pred

    ID  shift, and go to state 98


state 53

   54 unary_stmt: ID . UNARY_OP new_lines
  129 call_stmt: ID . '(' arg_list ')'
  130          | ID . '(' ')'
  133 in_built_call_stmt: ID . DOT_OP ID '(' arg_list ')'
  134                   | ID . DOT_OP ID '(' ')'
  151 expr_stmt: ID . '=' expr_pred new_lines
  152          | ID . array_element '=' expr_pred new_lines

    DOT_OP    shift, and go to state 99
    UNARY_OP  shift, and go to state 100
    '('       shift, and go to state 101
    '='       shift, and go to state 102
    '['       shift, and go to state 94

    array_element  go to state 103


state 54

   50 stmt: '{' . new_lines stmt_list '}' new_lines
   51     | '{' . new_lines '}' new_lines
   52     | '{' . '}' new_lines

    NEWLINE  shift, and go to state 1
    '}'      shift, and go to state 104

    new_lines  go to state 105


state 55

    4 func_body: '{' new_lines stmt_list . '}'
   26 stmt_list: stmt_list . stmt

    IF        shift, and go to state 43
    RETURN    shift, and go to state 44
    LOOP      shift, and go to state 45
    IMG       shift, and go to state 46
    GRAY_IMG  shift, and go to state 47
    VID       shift, and go to state 48
    GRAY_VID  shift, and go to state 49
    NUM       shift, and go to state 50
    REAL      shift, and go to state 51
    BOOL      shift, and go to state 52
    ID        shift, and go to state 53
    '{'       shift, and go to state 54
    '}'       shift, and go to state 106

    stmt                go to state 107
    unary_stmt          go to state 57
    loop_stmt           go to state 58
    if_block            go to state 59
    conditional_stmt    go to state 60
    return_stmt         go to state 61
    decl_stmt           go to state 62
    img_decl            go to state 63
    gray_img_decl       go to state 64
    vid_decl            go to state 65
    gray_vid_decl       go to state 66
    num_decl            go to state 67
    bool_decl           go to state 68
    real_decl           go to state 69
    num_array_decl      go to state 70
    real_array_decl     go to state 71
    call_stmt           go to state 72
    in_built_call_stmt  go to state 73
    expr_stmt           go to state 74


state 56

   25 stmt_list: stmt .

    $default  reduce using rule 25 (stmt_list)


state 57

   53 stmt: unary_stmt .

    $default  reduce using rule 53 (stmt)


state 58

   49 stmt: loop_stmt . new_lines

    NEWLINE  shift, and go to state 1

    new_lines  go to state 108


state 59

   66 conditional_stmt: if_block . optional_new_lines else_if_block_list optional_new_lines else @1 new_lines
   67                 | if_block . new_lines
   68                 | if_block . optional_new_lines else_if_block_list new_lines
   70                 | if_block . optional_new_lines else @2 new_lines

    NEWLINE  shift, and go to state 1

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 109
    optional_new_lines  go to state 110


state 60

   44 stmt: conditional_stmt .

    $default  reduce using rule 44 (stmt)


state 61

   48 stmt: return_stmt .

    $default  reduce using rule 48 (stmt)


state 62

   43 stmt: decl_stmt .

    $default  reduce using rule 43 (stmt)


state 63

   87 decl_stmt: img_decl .

    $default  reduce using rule 87 (decl_stmt)


state 64

   88 decl_stmt: gray_img_decl .

    $default  reduce using rule 88 (decl_stmt)


state 65

   89 decl_stmt: vid_decl .

    $default  reduce using rule 89 (decl_stmt)


state 66

   90 decl_stmt: gray_vid_decl .

    $default  reduce using rule 90 (decl_stmt)


state 67

   91 decl_stmt: num_decl . new_lines

    NEWLINE  shift, and go to state 1

    new_lines  go to state 111


state 68

   92 decl_stmt: bool_decl . new_lines

    NEWLINE  shift, and go to state 1

    new_lines  go to state 112


state 69

   93 decl_stmt: real_decl . new_lines

    NEWLINE  shift, and go to state 1

    new_lines  go to state 113


state 70

   94 decl_stmt: num_array_decl .

    $default  reduce using rule 94 (decl_stmt)


state 71

   95 decl_stmt: real_array_decl .

    $default  reduce using rule 95 (decl_stmt)


state 72

   45 stmt: call_stmt . new_lines

    NEWLINE  shift, and go to state 1

    new_lines  go to state 114


state 73

   46 stmt: in_built_call_stmt . new_lines
  135 in_built_call_stmt: in_built_call_stmt . DOT_OP ID '(' arg_list ')'
  136                   | in_built_call_stmt . DOT_OP ID '(' ')'

    DOT_OP   shift, and go to state 115
    NEWLINE  shift, and go to state 1

    new_lines  go to state 116


state 74

   47 stmt: expr_stmt .

    $default  reduce using rule 47 (stmt)


state 75

   11 function: INK ID '(' par_list ')' ARROW RET_TYPE new_lines func_body .

    $default  reduce using rule 11 (function)


state 76

   61 if_block: IF optional_new_lines . '(' expr_pred ')' optional_new_lines ARROW optional_new_lines func_body

    '('  shift, and go to state 117


state 77

  144 expr_pred: NEG_OP . expr_pred

    NEG_OP    shift, and go to state 77
    BOOL_LIT  shift, and go to state 79
    ID        shift, and go to state 80
    NUM_LIT   shift, and go to state 81
    REAL_LIT  shift, and go to state 82
    INV_OP    shift, and go to state 83
    '('       shift, and go to state 84

    call_stmt           go to state 85
    in_built_call_stmt  go to state 86
    expr_pred           go to state 118


state 78

   86 return_stmt: RETURN VOID . empty_return new_lines

    $default  reduce using rule 84 (empty_return)

    empty_return  go to state 119


state 79

  140 expr_pred: BOOL_LIT .

    $default  reduce using rule 140 (expr_pred)


state 80

  129 call_stmt: ID . '(' arg_list ')'
  130          | ID . '(' ')'
  133 in_built_call_stmt: ID . DOT_OP ID '(' arg_list ')'
  134                   | ID . DOT_OP ID '(' ')'
  137 expr_pred: ID .
  147          | ID . array_element

    DOT_OP  shift, and go to state 99
    '('     shift, and go to state 101
    '['     shift, and go to state 94

    $default  reduce using rule 137 (expr_pred)

    array_element  go to state 120


state 81

  138 expr_pred: NUM_LIT .

    $default  reduce using rule 138 (expr_pred)


state 82

  139 expr_pred: REAL_LIT .

    $default  reduce using rule 139 (expr_pred)


state 83

  150 expr_pred: INV_OP . expr_pred

    NEG_OP    shift, and go to state 77
    BOOL_LIT  shift, and go to state 79
    ID        shift, and go to state 80
    NUM_LIT   shift, and go to state 81
    REAL_LIT  shift, and go to state 82
    INV_OP    shift, and go to state 83
    '('       shift, and go to state 84

    call_stmt           go to state 85
    in_built_call_stmt  go to state 86
    expr_pred           go to state 121


state 84

  143 expr_pred: '(' . expr_pred ')'

    NEG_OP    shift, and go to state 77
    BOOL_LIT  shift, and go to state 79
    ID        shift, and go to state 80
    NUM_LIT   shift, and go to state 81
    REAL_LIT  shift, and go to state 82
    INV_OP    shift, and go to state 83
    '('       shift, and go to state 84

    call_stmt           go to state 85
    in_built_call_stmt  go to state 86
    expr_pred           go to state 122


state 85

  145 expr_pred: call_stmt .

    $default  reduce using rule 145 (expr_pred)


state 86

  135 in_built_call_stmt: in_built_call_stmt . DOT_OP ID '(' arg_list ')'
  136                   | in_built_call_stmt . DOT_OP ID '(' ')'
  146 expr_pred: in_built_call_stmt .

    DOT_OP  shift, and go to state 115

    $default  reduce using rule 146 (expr_pred)


state 87

   85 return_stmt: RETURN expr_pred . empty_return new_lines
  141 expr_pred: expr_pred . REL_OP expr_pred
  142          | expr_pred . LOG_OP expr_pred
  148          | expr_pred . BINARY_OP expr_pred
  149          | expr_pred . UNARY_OP

    LOG_OP     shift, and go to state 123
    REL_OP     shift, and go to state 124
    BINARY_OP  shift, and go to state 125
    UNARY_OP   shift, and go to state 126

    $default  reduce using rule 84 (empty_return)

    empty_return  go to state 127


state 88

   59 loop_stmt: LOOP optional_new_lines . '(' optional_expr_pred ')' optional_new_lines loop_body
   60          | LOOP optional_new_lines . '(' optional_num_data_decl ';' optional_expr_pred ';' optional_expr_pred ')' optional_new_lines loop_body

    '('  shift, and go to state 128


state 89

   96 img_decl: IMG ID . '<' NUM_LIT ',' NUM_LIT '>' new_lines
   97         | IMG ID . '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines
   98         | IMG ID . '<' PATH '>' new_lines
   99         | IMG ID . '=' expr_pred new_lines

    '<'  shift, and go to state 129
    '='  shift, and go to state 130


state 90

  100 gray_img_decl: GRAY_IMG ID . '<' NUM_LIT ',' NUM_LIT '>' new_lines
  101              | GRAY_IMG ID . '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines
  102              | GRAY_IMG ID . '<' PATH '>' new_lines
  103              | GRAY_IMG ID . '=' expr_pred new_lines

    '<'  shift, and go to state 131
    '='  shift, and go to state 132


state 91

  104 vid_decl: VID ID . '<' NUM_LIT ',' NUM_LIT '>' new_lines
  105         | VID ID . '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines

    '<'  shift, and go to state 133


state 92

  106 gray_vid_decl: GRAY_VID ID . '<' NUM_LIT ',' NUM_LIT '>' new_lines
  107              | GRAY_VID ID . '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines

    '<'  shift, and go to state 134


state 93

  108 num_decl: NUM ID .
  109         | NUM ID . '=' expr_pred

    '='  shift, and go to state 135

    $default  reduce using rule 108 (num_decl)


state 94

  153 array_element: '[' . expr_pred ']'
  154              | '[' . expr_pred ',' expr_pred ']'
  155              | '[' . expr_pred ',' expr_pred ',' expr_pred ']'

    NEG_OP    shift, and go to state 77
    BOOL_LIT  shift, and go to state 79
    ID        shift, and go to state 80
    NUM_LIT   shift, and go to state 81
    REAL_LIT  shift, and go to state 82
    INV_OP    shift, and go to state 83
    '('       shift, and go to state 84

    call_stmt           go to state 85
    in_built_call_stmt  go to state 86
    expr_pred           go to state 136


state 95

  114 num_array_decl: NUM array_element . ID new_lines
  115               | NUM array_element . ID '=' ID new_lines
  116               | NUM array_element . ID '=' brak_pred new_lines

    ID  shift, and go to state 137


state 96

  112 real_decl: REAL ID .
  113          | REAL ID . '=' expr_pred

    '='  shift, and go to state 138

    $default  reduce using rule 112 (real_decl)


state 97

  117 real_array_decl: REAL array_element . ID new_lines
  118                | REAL array_element . ID '=' ID new_lines
  119                | REAL array_element . ID '=' brak_pred new_lines

    ID  shift, and go to state 139


state 98

  110 bool_decl: BOOL ID .
  111          | BOOL ID . '=' expr_pred

    '='  shift, and go to state 140

    $default  reduce using rule 110 (bool_decl)


state 99

  133 in_built_call_stmt: ID DOT_OP . ID '(' arg_list ')'
  134                   | ID DOT_OP . ID '(' ')'

    ID  shift, and go to state 141


state 100

   54 unary_stmt: ID UNARY_OP . new_lines

    NEWLINE  shift, and go to state 1

    new_lines  go to state 142


state 101

  129 call_stmt: ID '(' . arg_list ')'
  130          | ID '(' . ')'

    NEG_OP    shift, and go to state 77
    BOOL_LIT  shift, and go to state 79
    ID        shift, and go to state 80
    NUM_LIT   shift, and go to state 81
    REAL_LIT  shift, and go to state 82
    INV_OP    shift, and go to state 83
    '('       shift, and go to state 84
    ')'       shift, and go to state 143

    call_stmt           go to state 85
    arg_list            go to state 144
    in_built_call_stmt  go to state 86
    expr_pred           go to state 145


state 102

  151 expr_stmt: ID '=' . expr_pred new_lines

    NEG_OP    shift, and go to state 77
    BOOL_LIT  shift, and go to state 79
    ID        shift, and go to state 80
    NUM_LIT   shift, and go to state 81
    REAL_LIT  shift, and go to state 82
    INV_OP    shift, and go to state 83
    '('       shift, and go to state 84

    call_stmt           go to state 85
    in_built_call_stmt  go to state 86
    expr_pred           go to state 146


state 103

  152 expr_stmt: ID array_element . '=' expr_pred new_lines

    '='  shift, and go to state 147


state 104

   52 stmt: '{' '}' . new_lines

    NEWLINE  shift, and go to state 1

    new_lines  go to state 148


state 105

    5 new_lines: new_lines . NEWLINE
   50 stmt: '{' new_lines . stmt_list '}' new_lines
   51     | '{' new_lines . '}' new_lines

    IF        shift, and go to state 43
    RETURN    shift, and go to state 44
    LOOP      shift, and go to state 45
    IMG       shift, and go to state 46
    GRAY_IMG  shift, and go to state 47
    VID       shift, and go to state 48
    GRAY_VID  shift, and go to state 49
    NUM       shift, and go to state 50
    REAL      shift, and go to state 51
    BOOL      shift, and go to state 52
    NEWLINE   shift, and go to state 6
    ID        shift, and go to state 53
    '{'       shift, and go to state 54
    '}'       shift, and go to state 149

    stmt_list           go to state 150
    stmt                go to state 56
    unary_stmt          go to state 57
    loop_stmt           go to state 58
    if_block            go to state 59
    conditional_stmt    go to state 60
    return_stmt         go to state 61
    decl_stmt           go to state 62
    img_decl            go to state 63
    gray_img_decl       go to state 64
    vid_decl            go to state 65
    gray_vid_decl       go to state 66
    num_decl            go to state 67
    bool_decl           go to state 68
    real_decl           go to state 69
    num_array_decl      go to state 70
    real_array_decl     go to state 71
    call_stmt           go to state 72
    in_built_call_stmt  go to state 73
    expr_stmt           go to state 74


state 106

    4 func_body: '{' new_lines stmt_list '}' .

    $default  reduce using rule 4 (func_body)


state 107

   26 stmt_list: stmt_list stmt .

    $default  reduce using rule 26 (stmt_list)


state 108

    5 new_lines: new_lines . NEWLINE
   49 stmt: loop_stmt new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 49 (stmt)


state 109

    5 new_lines: new_lines . NEWLINE
    8 optional_new_lines: new_lines .
   67 conditional_stmt: if_block new_lines .

    NEWLINE  shift, and go to state 6

    ELSE_IF   reduce using rule 8 (optional_new_lines)
    ARROW     reduce using rule 8 (optional_new_lines)
    $default  reduce using rule 67 (conditional_stmt)


state 110

   66 conditional_stmt: if_block optional_new_lines . else_if_block_list optional_new_lines else @1 new_lines
   68                 | if_block optional_new_lines . else_if_block_list new_lines
   70                 | if_block optional_new_lines . else @2 new_lines

    ELSE_IF  shift, and go to state 151
    ARROW    shift, and go to state 152

    else                go to state 153
    else_if_block_list  go to state 154


state 111

    5 new_lines: new_lines . NEWLINE
   91 decl_stmt: num_decl new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 91 (decl_stmt)


state 112

    5 new_lines: new_lines . NEWLINE
   92 decl_stmt: bool_decl new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 92 (decl_stmt)


state 113

    5 new_lines: new_lines . NEWLINE
   93 decl_stmt: real_decl new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 93 (decl_stmt)


state 114

    5 new_lines: new_lines . NEWLINE
   45 stmt: call_stmt new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 45 (stmt)


state 115

  135 in_built_call_stmt: in_built_call_stmt DOT_OP . ID '(' arg_list ')'
  136                   | in_built_call_stmt DOT_OP . ID '(' ')'

    ID  shift, and go to state 155


state 116

    5 new_lines: new_lines . NEWLINE
   46 stmt: in_built_call_stmt new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 46 (stmt)


state 117

   61 if_block: IF optional_new_lines '(' . expr_pred ')' optional_new_lines ARROW optional_new_lines func_body

    NEG_OP    shift, and go to state 77
    BOOL_LIT  shift, and go to state 79
    ID        shift, and go to state 80
    NUM_LIT   shift, and go to state 81
    REAL_LIT  shift, and go to state 82
    INV_OP    shift, and go to state 83
    '('       shift, and go to state 84

    call_stmt           go to state 85
    in_built_call_stmt  go to state 86
    expr_pred           go to state 156


state 118

  141 expr_pred: expr_pred . REL_OP expr_pred
  142          | expr_pred . LOG_OP expr_pred
  144          | NEG_OP expr_pred .
  148          | expr_pred . BINARY_OP expr_pred
  149          | expr_pred . UNARY_OP

    LOG_OP     shift, and go to state 123
    REL_OP     shift, and go to state 124
    BINARY_OP  shift, and go to state 125

    $default  reduce using rule 144 (expr_pred)


state 119

   86 return_stmt: RETURN VOID empty_return . new_lines

    NEWLINE  shift, and go to state 1

    new_lines  go to state 157


state 120

  147 expr_pred: ID array_element .

    $default  reduce using rule 147 (expr_pred)


state 121

  141 expr_pred: expr_pred . REL_OP expr_pred
  142          | expr_pred . LOG_OP expr_pred
  148          | expr_pred . BINARY_OP expr_pred
  149          | expr_pred . UNARY_OP
  150          | INV_OP expr_pred .

    LOG_OP     shift, and go to state 123
    REL_OP     shift, and go to state 124
    BINARY_OP  shift, and go to state 125

    $default  reduce using rule 150 (expr_pred)


state 122

  141 expr_pred: expr_pred . REL_OP expr_pred
  142          | expr_pred . LOG_OP expr_pred
  143          | '(' expr_pred . ')'
  148          | expr_pred . BINARY_OP expr_pred
  149          | expr_pred . UNARY_OP

    LOG_OP     shift, and go to state 123
    REL_OP     shift, and go to state 124
    BINARY_OP  shift, and go to state 125
    UNARY_OP   shift, and go to state 126
    ')'        shift, and go to state 158


state 123

  142 expr_pred: expr_pred LOG_OP . expr_pred

    NEG_OP    shift, and go to state 77
    BOOL_LIT  shift, and go to state 79
    ID        shift, and go to state 80
    NUM_LIT   shift, and go to state 81
    REAL_LIT  shift, and go to state 82
    INV_OP    shift, and go to state 83
    '('       shift, and go to state 84

    call_stmt           go to state 85
    in_built_call_stmt  go to state 86
    expr_pred           go to state 159


state 124

  141 expr_pred: expr_pred REL_OP . expr_pred

    NEG_OP    shift, and go to state 77
    BOOL_LIT  shift, and go to state 79
    ID        shift, and go to state 80
    NUM_LIT   shift, and go to state 81
    REAL_LIT  shift, and go to state 82
    INV_OP    shift, and go to state 83
    '('       shift, and go to state 84

    call_stmt           go to state 85
    in_built_call_stmt  go to state 86
    expr_pred           go to state 160


state 125

  148 expr_pred: expr_pred BINARY_OP . expr_pred

    NEG_OP    shift, and go to state 77
    BOOL_LIT  shift, and go to state 79
    ID        shift, and go to state 80
    NUM_LIT   shift, and go to state 81
    REAL_LIT  shift, and go to state 82
    INV_OP    shift, and go to state 83
    '('       shift, and go to state 84

    call_stmt           go to state 85
    in_built_call_stmt  go to state 86
    expr_pred           go to state 161


state 126

  149 expr_pred: expr_pred UNARY_OP .

    $default  reduce using rule 149 (expr_pred)


state 127

   85 return_stmt: RETURN expr_pred empty_return . new_lines

    NEWLINE  shift, and go to state 1

    new_lines  go to state 162


state 128

   59 loop_stmt: LOOP optional_new_lines '(' . optional_expr_pred ')' optional_new_lines loop_body
   60          | LOOP optional_new_lines '(' . optional_num_data_decl ';' optional_expr_pred ';' optional_expr_pred ')' optional_new_lines loop_body

    NEG_OP    shift, and go to state 77
    NUM       shift, and go to state 163
    REAL      shift, and go to state 164
    BOOL      shift, and go to state 52
    BOOL_LIT  shift, and go to state 79
    ID        shift, and go to state 80
    NUM_LIT   shift, and go to state 81
    REAL_LIT  shift, and go to state 82
    INV_OP    shift, and go to state 83
    '('       shift, and go to state 84

    ';'       reduce using rule 58 (optional_num_data_decl)
    $default  reduce using rule 56 (optional_expr_pred)

    optional_expr_pred      go to state 165
    optional_num_data_decl  go to state 166
    numeric_data_decl       go to state 167
    num_decl                go to state 168
    bool_decl               go to state 169
    real_decl               go to state 170
    call_stmt               go to state 85
    in_built_call_stmt      go to state 86
    expr_pred               go to state 171


state 129

   96 img_decl: IMG ID '<' . NUM_LIT ',' NUM_LIT '>' new_lines
   97         | IMG ID '<' . NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines
   98         | IMG ID '<' . PATH '>' new_lines

    NUM_LIT  shift, and go to state 172
    PATH     shift, and go to state 173


state 130

   99 img_decl: IMG ID '=' . expr_pred new_lines

    NEG_OP    shift, and go to state 77
    BOOL_LIT  shift, and go to state 79
    ID        shift, and go to state 80
    NUM_LIT   shift, and go to state 81
    REAL_LIT  shift, and go to state 82
    INV_OP    shift, and go to state 83
    '('       shift, and go to state 84

    call_stmt           go to state 85
    in_built_call_stmt  go to state 86
    expr_pred           go to state 174


state 131

  100 gray_img_decl: GRAY_IMG ID '<' . NUM_LIT ',' NUM_LIT '>' new_lines
  101              | GRAY_IMG ID '<' . NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines
  102              | GRAY_IMG ID '<' . PATH '>' new_lines

    NUM_LIT  shift, and go to state 175
    PATH     shift, and go to state 176


state 132

  103 gray_img_decl: GRAY_IMG ID '=' . expr_pred new_lines

    NEG_OP    shift, and go to state 77
    BOOL_LIT  shift, and go to state 79
    ID        shift, and go to state 80
    NUM_LIT   shift, and go to state 81
    REAL_LIT  shift, and go to state 82
    INV_OP    shift, and go to state 83
    '('       shift, and go to state 84

    call_stmt           go to state 85
    in_built_call_stmt  go to state 86
    expr_pred           go to state 177


state 133

  104 vid_decl: VID ID '<' . NUM_LIT ',' NUM_LIT '>' new_lines
  105         | VID ID '<' . NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines

    NUM_LIT  shift, and go to state 178


state 134

  106 gray_vid_decl: GRAY_VID ID '<' . NUM_LIT ',' NUM_LIT '>' new_lines
  107              | GRAY_VID ID '<' . NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines

    NUM_LIT  shift, and go to state 179


state 135

  109 num_decl: NUM ID '=' . expr_pred

    NEG_OP    shift, and go to state 77
    BOOL_LIT  shift, and go to state 79
    ID        shift, and go to state 80
    NUM_LIT   shift, and go to state 81
    REAL_LIT  shift, and go to state 82
    INV_OP    shift, and go to state 83
    '('       shift, and go to state 84

    call_stmt           go to state 85
    in_built_call_stmt  go to state 86
    expr_pred           go to state 180


state 136

  141 expr_pred: expr_pred . REL_OP expr_pred
  142          | expr_pred . LOG_OP expr_pred
  148          | expr_pred . BINARY_OP expr_pred
  149          | expr_pred . UNARY_OP
  153 array_element: '[' expr_pred . ']'
  154              | '[' expr_pred . ',' expr_pred ']'
  155              | '[' expr_pred . ',' expr_pred ',' expr_pred ']'

    LOG_OP     shift, and go to state 123
    REL_OP     shift, and go to state 124
    BINARY_OP  shift, and go to state 125
    UNARY_OP   shift, and go to state 126
    ','        shift, and go to state 181
    ']'        shift, and go to state 182


state 137

  114 num_array_decl: NUM array_element ID . new_lines
  115               | NUM array_element ID . '=' ID new_lines
  116               | NUM array_element ID . '=' brak_pred new_lines

    NEWLINE  shift, and go to state 1
    '='      shift, and go to state 183

    new_lines  go to state 184


state 138

  113 real_decl: REAL ID '=' . expr_pred

    NEG_OP    shift, and go to state 77
    BOOL_LIT  shift, and go to state 79
    ID        shift, and go to state 80
    NUM_LIT   shift, and go to state 81
    REAL_LIT  shift, and go to state 82
    INV_OP    shift, and go to state 83
    '('       shift, and go to state 84

    call_stmt           go to state 85
    in_built_call_stmt  go to state 86
    expr_pred           go to state 185


state 139

  117 real_array_decl: REAL array_element ID . new_lines
  118                | REAL array_element ID . '=' ID new_lines
  119                | REAL array_element ID . '=' brak_pred new_lines

    NEWLINE  shift, and go to state 1
    '='      shift, and go to state 186

    new_lines  go to state 187


state 140

  111 bool_decl: BOOL ID '=' . expr_pred

    NEG_OP    shift, and go to state 77
    BOOL_LIT  shift, and go to state 79
    ID        shift, and go to state 80
    NUM_LIT   shift, and go to state 81
    REAL_LIT  shift, and go to state 82
    INV_OP    shift, and go to state 83
    '('       shift, and go to state 84

    call_stmt           go to state 85
    in_built_call_stmt  go to state 86
    expr_pred           go to state 188


state 141

  133 in_built_call_stmt: ID DOT_OP ID . '(' arg_list ')'
  134                   | ID DOT_OP ID . '(' ')'

    '('  shift, and go to state 189


state 142

    5 new_lines: new_lines . NEWLINE
   54 unary_stmt: ID UNARY_OP new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 54 (unary_stmt)


state 143

  130 call_stmt: ID '(' ')' .

    $default  reduce using rule 130 (call_stmt)


state 144

  129 call_stmt: ID '(' arg_list . ')'
  131 arg_list: arg_list . ',' expr_pred

    ')'  shift, and go to state 190
    ','  shift, and go to state 191


state 145

  132 arg_list: expr_pred .
  141 expr_pred: expr_pred . REL_OP expr_pred
  142          | expr_pred . LOG_OP expr_pred
  148          | expr_pred . BINARY_OP expr_pred
  149          | expr_pred . UNARY_OP

    LOG_OP     shift, and go to state 123
    REL_OP     shift, and go to state 124
    BINARY_OP  shift, and go to state 125
    UNARY_OP   shift, and go to state 126

    $default  reduce using rule 132 (arg_list)


state 146

  141 expr_pred: expr_pred . REL_OP expr_pred
  142          | expr_pred . LOG_OP expr_pred
  148          | expr_pred . BINARY_OP expr_pred
  149          | expr_pred . UNARY_OP
  151 expr_stmt: ID '=' expr_pred . new_lines

    LOG_OP     shift, and go to state 123
    REL_OP     shift, and go to state 124
    NEWLINE    shift, and go to state 1
    BINARY_OP  shift, and go to state 125
    UNARY_OP   shift, and go to state 126

    new_lines  go to state 192


state 147

  152 expr_stmt: ID array_element '=' . expr_pred new_lines

    NEG_OP    shift, and go to state 77
    BOOL_LIT  shift, and go to state 79
    ID        shift, and go to state 80
    NUM_LIT   shift, and go to state 81
    REAL_LIT  shift, and go to state 82
    INV_OP    shift, and go to state 83
    '('       shift, and go to state 84

    call_stmt           go to state 85
    in_built_call_stmt  go to state 86
    expr_pred           go to state 193


state 148

    5 new_lines: new_lines . NEWLINE
   52 stmt: '{' '}' new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 52 (stmt)


state 149

   51 stmt: '{' new_lines '}' . new_lines

    NEWLINE  shift, and go to state 1

    new_lines  go to state 194


state 150

   26 stmt_list: stmt_list . stmt
   50 stmt: '{' new_lines stmt_list . '}' new_lines

    IF        shift, and go to state 43
    RETURN    shift, and go to state 44
    LOOP      shift, and go to state 45
    IMG       shift, and go to state 46
    GRAY_IMG  shift, and go to state 47
    VID       shift, and go to state 48
    GRAY_VID  shift, and go to state 49
    NUM       shift, and go to state 50
    REAL      shift, and go to state 51
    BOOL      shift, and go to state 52
    ID        shift, and go to state 53
    '{'       shift, and go to state 54
    '}'       shift, and go to state 195

    stmt                go to state 107
    unary_stmt          go to state 57
    loop_stmt           go to state 58
    if_block            go to state 59
    conditional_stmt    go to state 60
    return_stmt         go to state 61
    decl_stmt           go to state 62
    img_decl            go to state 63
    gray_img_decl       go to state 64
    vid_decl            go to state 65
    gray_vid_decl       go to state 66
    num_decl            go to state 67
    bool_decl           go to state 68
    real_decl           go to state 69
    num_array_decl      go to state 70
    real_array_decl     go to state 71
    call_stmt           go to state 72
    in_built_call_stmt  go to state 73
    expr_stmt           go to state 74


state 151

   64 else_if_block_list: ELSE_IF . '(' expr_pred ')' optional_new_lines ARROW optional_new_lines func_body

    '('  shift, and go to state 196


state 152

   62 else: ARROW . optional_new_lines func_body

    NEWLINE  shift, and go to state 1

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 3
    optional_new_lines  go to state 197


state 153

   70 conditional_stmt: if_block optional_new_lines else . @2 new_lines

    $default  reduce using rule 69 (@2)

    @2  go to state 198


state 154

   63 else_if_block_list: else_if_block_list . optional_new_lines ELSE_IF '(' expr_pred ')' optional_new_lines ARROW optional_new_lines func_body
   66 conditional_stmt: if_block optional_new_lines else_if_block_list . optional_new_lines else @1 new_lines
   68                 | if_block optional_new_lines else_if_block_list . new_lines

    NEWLINE  shift, and go to state 1

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 199
    optional_new_lines  go to state 200


state 155

  135 in_built_call_stmt: in_built_call_stmt DOT_OP ID . '(' arg_list ')'
  136                   | in_built_call_stmt DOT_OP ID . '(' ')'

    '('  shift, and go to state 201


state 156

   61 if_block: IF optional_new_lines '(' expr_pred . ')' optional_new_lines ARROW optional_new_lines func_body
  141 expr_pred: expr_pred . REL_OP expr_pred
  142          | expr_pred . LOG_OP expr_pred
  148          | expr_pred . BINARY_OP expr_pred
  149          | expr_pred . UNARY_OP

    LOG_OP     shift, and go to state 123
    REL_OP     shift, and go to state 124
    BINARY_OP  shift, and go to state 125
    UNARY_OP   shift, and go to state 126
    ')'        shift, and go to state 202


state 157

    5 new_lines: new_lines . NEWLINE
   86 return_stmt: RETURN VOID empty_return new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 86 (return_stmt)


state 158

  143 expr_pred: '(' expr_pred ')' .

    $default  reduce using rule 143 (expr_pred)


state 159

  141 expr_pred: expr_pred . REL_OP expr_pred
  142          | expr_pred . LOG_OP expr_pred
  142          | expr_pred LOG_OP expr_pred .
  148          | expr_pred . BINARY_OP expr_pred
  149          | expr_pred . UNARY_OP

    REL_OP  shift, and go to state 124

    $default  reduce using rule 142 (expr_pred)


state 160

  141 expr_pred: expr_pred . REL_OP expr_pred
  141          | expr_pred REL_OP expr_pred .
  142          | expr_pred . LOG_OP expr_pred
  148          | expr_pred . BINARY_OP expr_pred
  149          | expr_pred . UNARY_OP

    $default  reduce using rule 141 (expr_pred)


state 161

  141 expr_pred: expr_pred . REL_OP expr_pred
  142          | expr_pred . LOG_OP expr_pred
  148          | expr_pred . BINARY_OP expr_pred
  148          | expr_pred BINARY_OP expr_pred .
  149          | expr_pred . UNARY_OP

    LOG_OP  shift, and go to state 123
    REL_OP  shift, and go to state 124

    $default  reduce using rule 148 (expr_pred)


state 162

    5 new_lines: new_lines . NEWLINE
   85 return_stmt: RETURN expr_pred empty_return new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 85 (return_stmt)


state 163

  108 num_decl: NUM . ID
  109         | NUM . ID '=' expr_pred

    ID  shift, and go to state 93


state 164

  112 real_decl: REAL . ID
  113          | REAL . ID '=' expr_pred

    ID  shift, and go to state 96


state 165

   59 loop_stmt: LOOP optional_new_lines '(' optional_expr_pred . ')' optional_new_lines loop_body

    ')'  shift, and go to state 203


state 166

   60 loop_stmt: LOOP optional_new_lines '(' optional_num_data_decl . ';' optional_expr_pred ';' optional_expr_pred ')' optional_new_lines loop_body

    ';'  shift, and go to state 204


state 167

   57 optional_num_data_decl: numeric_data_decl .

    $default  reduce using rule 57 (optional_num_data_decl)


state 168

   81 numeric_data_decl: num_decl .

    $default  reduce using rule 81 (numeric_data_decl)


state 169

   83 numeric_data_decl: bool_decl .

    $default  reduce using rule 83 (numeric_data_decl)


state 170

   82 numeric_data_decl: real_decl .

    $default  reduce using rule 82 (numeric_data_decl)


state 171

   55 optional_expr_pred: expr_pred .
  141 expr_pred: expr_pred . REL_OP expr_pred
  142          | expr_pred . LOG_OP expr_pred
  148          | expr_pred . BINARY_OP expr_pred
  149          | expr_pred . UNARY_OP

    LOG_OP     shift, and go to state 123
    REL_OP     shift, and go to state 124
    BINARY_OP  shift, and go to state 125
    UNARY_OP   shift, and go to state 126

    $default  reduce using rule 55 (optional_expr_pred)


state 172

   96 img_decl: IMG ID '<' NUM_LIT . ',' NUM_LIT '>' new_lines
   97         | IMG ID '<' NUM_LIT . ',' NUM_LIT ',' NUM_LIT '>' new_lines

    ','  shift, and go to state 205


state 173

   98 img_decl: IMG ID '<' PATH . '>' new_lines

    '>'  shift, and go to state 206


state 174

   99 img_decl: IMG ID '=' expr_pred . new_lines
  141 expr_pred: expr_pred . REL_OP expr_pred
  142          | expr_pred . LOG_OP expr_pred
  148          | expr_pred . BINARY_OP expr_pred
  149          | expr_pred . UNARY_OP

    LOG_OP     shift, and go to state 123
    REL_OP     shift, and go to state 124
    NEWLINE    shift, and go to state 1
    BINARY_OP  shift, and go to state 125
    UNARY_OP   shift, and go to state 126

    new_lines  go to state 207


state 175

  100 gray_img_decl: GRAY_IMG ID '<' NUM_LIT . ',' NUM_LIT '>' new_lines
  101              | GRAY_IMG ID '<' NUM_LIT . ',' NUM_LIT ',' NUM_LIT '>' new_lines

    ','  shift, and go to state 208


state 176

  102 gray_img_decl: GRAY_IMG ID '<' PATH . '>' new_lines

    '>'  shift, and go to state 209


state 177

  103 gray_img_decl: GRAY_IMG ID '=' expr_pred . new_lines
  141 expr_pred: expr_pred . REL_OP expr_pred
  142          | expr_pred . LOG_OP expr_pred
  148          | expr_pred . BINARY_OP expr_pred
  149          | expr_pred . UNARY_OP

    LOG_OP     shift, and go to state 123
    REL_OP     shift, and go to state 124
    NEWLINE    shift, and go to state 1
    BINARY_OP  shift, and go to state 125
    UNARY_OP   shift, and go to state 126

    new_lines  go to state 210


state 178

  104 vid_decl: VID ID '<' NUM_LIT . ',' NUM_LIT '>' new_lines
  105         | VID ID '<' NUM_LIT . ',' NUM_LIT ',' NUM_LIT '>' new_lines

    ','  shift, and go to state 211


state 179

  106 gray_vid_decl: GRAY_VID ID '<' NUM_LIT . ',' NUM_LIT '>' new_lines
  107              | GRAY_VID ID '<' NUM_LIT . ',' NUM_LIT ',' NUM_LIT '>' new_lines

    ','  shift, and go to state 212


state 180

  109 num_decl: NUM ID '=' expr_pred .
  141 expr_pred: expr_pred . REL_OP expr_pred
  142          | expr_pred . LOG_OP expr_pred
  148          | expr_pred . BINARY_OP expr_pred
  149          | expr_pred . UNARY_OP

    LOG_OP     shift, and go to state 123
    REL_OP     shift, and go to state 124
    BINARY_OP  shift, and go to state 125
    UNARY_OP   shift, and go to state 126

    $default  reduce using rule 109 (num_decl)


state 181

  154 array_element: '[' expr_pred ',' . expr_pred ']'
  155              | '[' expr_pred ',' . expr_pred ',' expr_pred ']'

    NEG_OP    shift, and go to state 77
    BOOL_LIT  shift, and go to state 79
    ID        shift, and go to state 80
    NUM_LIT   shift, and go to state 81
    REAL_LIT  shift, and go to state 82
    INV_OP    shift, and go to state 83
    '('       shift, and go to state 84

    call_stmt           go to state 85
    in_built_call_stmt  go to state 86
    expr_pred           go to state 213


state 182

  153 array_element: '[' expr_pred ']' .

    $default  reduce using rule 153 (array_element)


state 183

  115 num_array_decl: NUM array_element ID '=' . ID new_lines
  116               | NUM array_element ID '=' . brak_pred new_lines

    ID   shift, and go to state 214
    '{'  shift, and go to state 215

    brak_pred  go to state 216


state 184

    5 new_lines: new_lines . NEWLINE
  114 num_array_decl: NUM array_element ID new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 114 (num_array_decl)


state 185

  113 real_decl: REAL ID '=' expr_pred .
  141 expr_pred: expr_pred . REL_OP expr_pred
  142          | expr_pred . LOG_OP expr_pred
  148          | expr_pred . BINARY_OP expr_pred
  149          | expr_pred . UNARY_OP

    LOG_OP     shift, and go to state 123
    REL_OP     shift, and go to state 124
    BINARY_OP  shift, and go to state 125
    UNARY_OP   shift, and go to state 126

    $default  reduce using rule 113 (real_decl)


state 186

  118 real_array_decl: REAL array_element ID '=' . ID new_lines
  119                | REAL array_element ID '=' . brak_pred new_lines

    ID   shift, and go to state 217
    '{'  shift, and go to state 215

    brak_pred  go to state 218


state 187

    5 new_lines: new_lines . NEWLINE
  117 real_array_decl: REAL array_element ID new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 117 (real_array_decl)


state 188

  111 bool_decl: BOOL ID '=' expr_pred .
  141 expr_pred: expr_pred . REL_OP expr_pred
  142          | expr_pred . LOG_OP expr_pred
  148          | expr_pred . BINARY_OP expr_pred
  149          | expr_pred . UNARY_OP

    LOG_OP     shift, and go to state 123
    REL_OP     shift, and go to state 124
    BINARY_OP  shift, and go to state 125
    UNARY_OP   shift, and go to state 126

    $default  reduce using rule 111 (bool_decl)


state 189

  133 in_built_call_stmt: ID DOT_OP ID '(' . arg_list ')'
  134                   | ID DOT_OP ID '(' . ')'

    NEG_OP    shift, and go to state 77
    BOOL_LIT  shift, and go to state 79
    ID        shift, and go to state 80
    NUM_LIT   shift, and go to state 81
    REAL_LIT  shift, and go to state 82
    INV_OP    shift, and go to state 83
    '('       shift, and go to state 84
    ')'       shift, and go to state 219

    call_stmt           go to state 85
    arg_list            go to state 220
    in_built_call_stmt  go to state 86
    expr_pred           go to state 145


state 190

  129 call_stmt: ID '(' arg_list ')' .

    $default  reduce using rule 129 (call_stmt)


state 191

  131 arg_list: arg_list ',' . expr_pred

    NEG_OP    shift, and go to state 77
    BOOL_LIT  shift, and go to state 79
    ID        shift, and go to state 80
    NUM_LIT   shift, and go to state 81
    REAL_LIT  shift, and go to state 82
    INV_OP    shift, and go to state 83
    '('       shift, and go to state 84

    call_stmt           go to state 85
    in_built_call_stmt  go to state 86
    expr_pred           go to state 221


state 192

    5 new_lines: new_lines . NEWLINE
  151 expr_stmt: ID '=' expr_pred new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 151 (expr_stmt)


state 193

  141 expr_pred: expr_pred . REL_OP expr_pred
  142          | expr_pred . LOG_OP expr_pred
  148          | expr_pred . BINARY_OP expr_pred
  149          | expr_pred . UNARY_OP
  152 expr_stmt: ID array_element '=' expr_pred . new_lines

    LOG_OP     shift, and go to state 123
    REL_OP     shift, and go to state 124
    NEWLINE    shift, and go to state 1
    BINARY_OP  shift, and go to state 125
    UNARY_OP   shift, and go to state 126

    new_lines  go to state 222


state 194

    5 new_lines: new_lines . NEWLINE
   51 stmt: '{' new_lines '}' new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 51 (stmt)


state 195

   50 stmt: '{' new_lines stmt_list '}' . new_lines

    NEWLINE  shift, and go to state 1

    new_lines  go to state 223


state 196

   64 else_if_block_list: ELSE_IF '(' . expr_pred ')' optional_new_lines ARROW optional_new_lines func_body

    NEG_OP    shift, and go to state 77
    BOOL_LIT  shift, and go to state 79
    ID        shift, and go to state 80
    NUM_LIT   shift, and go to state 81
    REAL_LIT  shift, and go to state 82
    INV_OP    shift, and go to state 83
    '('       shift, and go to state 84

    call_stmt           go to state 85
    in_built_call_stmt  go to state 86
    expr_pred           go to state 224


state 197

   62 else: ARROW optional_new_lines . func_body

    '{'  shift, and go to state 35

    func_body  go to state 225


state 198

   70 conditional_stmt: if_block optional_new_lines else @2 . new_lines

    NEWLINE  shift, and go to state 1

    new_lines  go to state 226


state 199

    5 new_lines: new_lines . NEWLINE
    8 optional_new_lines: new_lines .
   68 conditional_stmt: if_block optional_new_lines else_if_block_list new_lines .

    NEWLINE  shift, and go to state 6

    ELSE_IF   reduce using rule 8 (optional_new_lines)
    ARROW     reduce using rule 8 (optional_new_lines)
    $default  reduce using rule 68 (conditional_stmt)


state 200

   63 else_if_block_list: else_if_block_list optional_new_lines . ELSE_IF '(' expr_pred ')' optional_new_lines ARROW optional_new_lines func_body
   66 conditional_stmt: if_block optional_new_lines else_if_block_list optional_new_lines . else @1 new_lines

    ELSE_IF  shift, and go to state 227
    ARROW    shift, and go to state 152

    else  go to state 228


state 201

  135 in_built_call_stmt: in_built_call_stmt DOT_OP ID '(' . arg_list ')'
  136                   | in_built_call_stmt DOT_OP ID '(' . ')'

    NEG_OP    shift, and go to state 77
    BOOL_LIT  shift, and go to state 79
    ID        shift, and go to state 80
    NUM_LIT   shift, and go to state 81
    REAL_LIT  shift, and go to state 82
    INV_OP    shift, and go to state 83
    '('       shift, and go to state 84
    ')'       shift, and go to state 229

    call_stmt           go to state 85
    arg_list            go to state 230
    in_built_call_stmt  go to state 86
    expr_pred           go to state 145


state 202

   61 if_block: IF optional_new_lines '(' expr_pred ')' . optional_new_lines ARROW optional_new_lines func_body

    NEWLINE  shift, and go to state 1

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 3
    optional_new_lines  go to state 231


state 203

   59 loop_stmt: LOOP optional_new_lines '(' optional_expr_pred ')' . optional_new_lines loop_body

    NEWLINE  shift, and go to state 1

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 3
    optional_new_lines  go to state 232


state 204

   60 loop_stmt: LOOP optional_new_lines '(' optional_num_data_decl ';' . optional_expr_pred ';' optional_expr_pred ')' optional_new_lines loop_body

    NEG_OP    shift, and go to state 77
    BOOL_LIT  shift, and go to state 79
    ID        shift, and go to state 80
    NUM_LIT   shift, and go to state 81
    REAL_LIT  shift, and go to state 82
    INV_OP    shift, and go to state 83
    '('       shift, and go to state 84

    $default  reduce using rule 56 (optional_expr_pred)

    optional_expr_pred  go to state 233
    call_stmt           go to state 85
    in_built_call_stmt  go to state 86
    expr_pred           go to state 171


state 205

   96 img_decl: IMG ID '<' NUM_LIT ',' . NUM_LIT '>' new_lines
   97         | IMG ID '<' NUM_LIT ',' . NUM_LIT ',' NUM_LIT '>' new_lines

    NUM_LIT  shift, and go to state 234


state 206

   98 img_decl: IMG ID '<' PATH '>' . new_lines

    NEWLINE  shift, and go to state 1

    new_lines  go to state 235


state 207

    5 new_lines: new_lines . NEWLINE
   99 img_decl: IMG ID '=' expr_pred new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 99 (img_decl)


state 208

  100 gray_img_decl: GRAY_IMG ID '<' NUM_LIT ',' . NUM_LIT '>' new_lines
  101              | GRAY_IMG ID '<' NUM_LIT ',' . NUM_LIT ',' NUM_LIT '>' new_lines

    NUM_LIT  shift, and go to state 236


state 209

  102 gray_img_decl: GRAY_IMG ID '<' PATH '>' . new_lines

    NEWLINE  shift, and go to state 1

    new_lines  go to state 237


state 210

    5 new_lines: new_lines . NEWLINE
  103 gray_img_decl: GRAY_IMG ID '=' expr_pred new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 103 (gray_img_decl)


state 211

  104 vid_decl: VID ID '<' NUM_LIT ',' . NUM_LIT '>' new_lines
  105         | VID ID '<' NUM_LIT ',' . NUM_LIT ',' NUM_LIT '>' new_lines

    NUM_LIT  shift, and go to state 238


state 212

  106 gray_vid_decl: GRAY_VID ID '<' NUM_LIT ',' . NUM_LIT '>' new_lines
  107              | GRAY_VID ID '<' NUM_LIT ',' . NUM_LIT ',' NUM_LIT '>' new_lines

    NUM_LIT  shift, and go to state 239


state 213

  141 expr_pred: expr_pred . REL_OP expr_pred
  142          | expr_pred . LOG_OP expr_pred
  148          | expr_pred . BINARY_OP expr_pred
  149          | expr_pred . UNARY_OP
  154 array_element: '[' expr_pred ',' expr_pred . ']'
  155              | '[' expr_pred ',' expr_pred . ',' expr_pred ']'

    LOG_OP     shift, and go to state 123
    REL_OP     shift, and go to state 124
    BINARY_OP  shift, and go to state 125
    UNARY_OP   shift, and go to state 126
    ','        shift, and go to state 240
    ']'        shift, and go to state 241


state 214

  115 num_array_decl: NUM array_element ID '=' ID . new_lines

    NEWLINE  shift, and go to state 1

    new_lines  go to state 242


state 215

  120 brak_pred: '{' . brak_pred_list '}'
  121          | '{' . lit_list '}'

    BOOL_LIT  shift, and go to state 243
    NUM_LIT   shift, and go to state 244
    REAL_LIT  shift, and go to state 245
    '{'       shift, and go to state 215

    brak_pred       go to state 246
    brak_pred_list  go to state 247
    lit_list        go to state 248
    lit             go to state 249


state 216

  116 num_array_decl: NUM array_element ID '=' brak_pred . new_lines

    NEWLINE  shift, and go to state 1

    new_lines  go to state 250


state 217

  118 real_array_decl: REAL array_element ID '=' ID . new_lines

    NEWLINE  shift, and go to state 1

    new_lines  go to state 251


state 218

  119 real_array_decl: REAL array_element ID '=' brak_pred . new_lines

    NEWLINE  shift, and go to state 1

    new_lines  go to state 252


state 219

  134 in_built_call_stmt: ID DOT_OP ID '(' ')' .

    $default  reduce using rule 134 (in_built_call_stmt)


state 220

  131 arg_list: arg_list . ',' expr_pred
  133 in_built_call_stmt: ID DOT_OP ID '(' arg_list . ')'

    ')'  shift, and go to state 253
    ','  shift, and go to state 191


state 221

  131 arg_list: arg_list ',' expr_pred .
  141 expr_pred: expr_pred . REL_OP expr_pred
  142          | expr_pred . LOG_OP expr_pred
  148          | expr_pred . BINARY_OP expr_pred
  149          | expr_pred . UNARY_OP

    LOG_OP     shift, and go to state 123
    REL_OP     shift, and go to state 124
    BINARY_OP  shift, and go to state 125
    UNARY_OP   shift, and go to state 126

    $default  reduce using rule 131 (arg_list)


state 222

    5 new_lines: new_lines . NEWLINE
  152 expr_stmt: ID array_element '=' expr_pred new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 152 (expr_stmt)


state 223

    5 new_lines: new_lines . NEWLINE
   50 stmt: '{' new_lines stmt_list '}' new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 50 (stmt)


state 224

   64 else_if_block_list: ELSE_IF '(' expr_pred . ')' optional_new_lines ARROW optional_new_lines func_body
  141 expr_pred: expr_pred . REL_OP expr_pred
  142          | expr_pred . LOG_OP expr_pred
  148          | expr_pred . BINARY_OP expr_pred
  149          | expr_pred . UNARY_OP

    LOG_OP     shift, and go to state 123
    REL_OP     shift, and go to state 124
    BINARY_OP  shift, and go to state 125
    UNARY_OP   shift, and go to state 126
    ')'        shift, and go to state 254


state 225

   62 else: ARROW optional_new_lines func_body .

    $default  reduce using rule 62 (else)


state 226

    5 new_lines: new_lines . NEWLINE
   70 conditional_stmt: if_block optional_new_lines else @2 new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 70 (conditional_stmt)


state 227

   63 else_if_block_list: else_if_block_list optional_new_lines ELSE_IF . '(' expr_pred ')' optional_new_lines ARROW optional_new_lines func_body

    '('  shift, and go to state 255


state 228

   66 conditional_stmt: if_block optional_new_lines else_if_block_list optional_new_lines else . @1 new_lines

    $default  reduce using rule 65 (@1)

    @1  go to state 256


state 229

  136 in_built_call_stmt: in_built_call_stmt DOT_OP ID '(' ')' .

    $default  reduce using rule 136 (in_built_call_stmt)


state 230

  131 arg_list: arg_list . ',' expr_pred
  135 in_built_call_stmt: in_built_call_stmt DOT_OP ID '(' arg_list . ')'

    ')'  shift, and go to state 257
    ','  shift, and go to state 191


state 231

   61 if_block: IF optional_new_lines '(' expr_pred ')' optional_new_lines . ARROW optional_new_lines func_body

    ARROW  shift, and go to state 258


state 232

   59 loop_stmt: LOOP optional_new_lines '(' optional_expr_pred ')' optional_new_lines . loop_body

    '{'  shift, and go to state 259

    loop_body  go to state 260


state 233

   60 loop_stmt: LOOP optional_new_lines '(' optional_num_data_decl ';' optional_expr_pred . ';' optional_expr_pred ')' optional_new_lines loop_body

    ';'  shift, and go to state 261


state 234

   96 img_decl: IMG ID '<' NUM_LIT ',' NUM_LIT . '>' new_lines
   97         | IMG ID '<' NUM_LIT ',' NUM_LIT . ',' NUM_LIT '>' new_lines

    ','  shift, and go to state 262
    '>'  shift, and go to state 263


state 235

    5 new_lines: new_lines . NEWLINE
   98 img_decl: IMG ID '<' PATH '>' new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 98 (img_decl)


state 236

  100 gray_img_decl: GRAY_IMG ID '<' NUM_LIT ',' NUM_LIT . '>' new_lines
  101              | GRAY_IMG ID '<' NUM_LIT ',' NUM_LIT . ',' NUM_LIT '>' new_lines

    ','  shift, and go to state 264
    '>'  shift, and go to state 265


state 237

    5 new_lines: new_lines . NEWLINE
  102 gray_img_decl: GRAY_IMG ID '<' PATH '>' new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 102 (gray_img_decl)


state 238

  104 vid_decl: VID ID '<' NUM_LIT ',' NUM_LIT . '>' new_lines
  105         | VID ID '<' NUM_LIT ',' NUM_LIT . ',' NUM_LIT '>' new_lines

    ','  shift, and go to state 266
    '>'  shift, and go to state 267


state 239

  106 gray_vid_decl: GRAY_VID ID '<' NUM_LIT ',' NUM_LIT . '>' new_lines
  107              | GRAY_VID ID '<' NUM_LIT ',' NUM_LIT . ',' NUM_LIT '>' new_lines

    ','  shift, and go to state 268
    '>'  shift, and go to state 269


state 240

  155 array_element: '[' expr_pred ',' expr_pred ',' . expr_pred ']'

    NEG_OP    shift, and go to state 77
    BOOL_LIT  shift, and go to state 79
    ID        shift, and go to state 80
    NUM_LIT   shift, and go to state 81
    REAL_LIT  shift, and go to state 82
    INV_OP    shift, and go to state 83
    '('       shift, and go to state 84

    call_stmt           go to state 85
    in_built_call_stmt  go to state 86
    expr_pred           go to state 270


state 241

  154 array_element: '[' expr_pred ',' expr_pred ']' .

    $default  reduce using rule 154 (array_element)


state 242

    5 new_lines: new_lines . NEWLINE
  115 num_array_decl: NUM array_element ID '=' ID new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 115 (num_array_decl)


state 243

  128 lit: BOOL_LIT .

    $default  reduce using rule 128 (lit)


state 244

  126 lit: NUM_LIT .

    $default  reduce using rule 126 (lit)


state 245

  127 lit: REAL_LIT .

    $default  reduce using rule 127 (lit)


state 246

  123 brak_pred_list: brak_pred .

    $default  reduce using rule 123 (brak_pred_list)


state 247

  120 brak_pred: '{' brak_pred_list . '}'
  122 brak_pred_list: brak_pred_list . ',' brak_pred

    '}'  shift, and go to state 271
    ','  shift, and go to state 272


state 248

  121 brak_pred: '{' lit_list . '}'
  124 lit_list: lit_list . ',' lit

    '}'  shift, and go to state 273
    ','  shift, and go to state 274


state 249

  125 lit_list: lit .

    $default  reduce using rule 125 (lit_list)


state 250

    5 new_lines: new_lines . NEWLINE
  116 num_array_decl: NUM array_element ID '=' brak_pred new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 116 (num_array_decl)


state 251

    5 new_lines: new_lines . NEWLINE
  118 real_array_decl: REAL array_element ID '=' ID new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 118 (real_array_decl)


state 252

    5 new_lines: new_lines . NEWLINE
  119 real_array_decl: REAL array_element ID '=' brak_pred new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 119 (real_array_decl)


state 253

  133 in_built_call_stmt: ID DOT_OP ID '(' arg_list ')' .

    $default  reduce using rule 133 (in_built_call_stmt)


state 254

   64 else_if_block_list: ELSE_IF '(' expr_pred ')' . optional_new_lines ARROW optional_new_lines func_body

    NEWLINE  shift, and go to state 1

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 3
    optional_new_lines  go to state 275


state 255

   63 else_if_block_list: else_if_block_list optional_new_lines ELSE_IF '(' . expr_pred ')' optional_new_lines ARROW optional_new_lines func_body

    NEG_OP    shift, and go to state 77
    BOOL_LIT  shift, and go to state 79
    ID        shift, and go to state 80
    NUM_LIT   shift, and go to state 81
    REAL_LIT  shift, and go to state 82
    INV_OP    shift, and go to state 83
    '('       shift, and go to state 84

    call_stmt           go to state 85
    in_built_call_stmt  go to state 86
    expr_pred           go to state 276


state 256

   66 conditional_stmt: if_block optional_new_lines else_if_block_list optional_new_lines else @1 . new_lines

    NEWLINE  shift, and go to state 1

    new_lines  go to state 277


state 257

  135 in_built_call_stmt: in_built_call_stmt DOT_OP ID '(' arg_list ')' .

    $default  reduce using rule 135 (in_built_call_stmt)


state 258

   61 if_block: IF optional_new_lines '(' expr_pred ')' optional_new_lines ARROW . optional_new_lines func_body

    NEWLINE  shift, and go to state 1

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 3
    optional_new_lines  go to state 278


state 259

   42 loop_body: '{' . new_lines loop_stmt_list '}'

    NEWLINE  shift, and go to state 1

    new_lines  go to state 279


state 260

   59 loop_stmt: LOOP optional_new_lines '(' optional_expr_pred ')' optional_new_lines loop_body .

    $default  reduce using rule 59 (loop_stmt)


state 261

   60 loop_stmt: LOOP optional_new_lines '(' optional_num_data_decl ';' optional_expr_pred ';' . optional_expr_pred ')' optional_new_lines loop_body

    NEG_OP    shift, and go to state 77
    BOOL_LIT  shift, and go to state 79
    ID        shift, and go to state 80
    NUM_LIT   shift, and go to state 81
    REAL_LIT  shift, and go to state 82
    INV_OP    shift, and go to state 83
    '('       shift, and go to state 84

    $default  reduce using rule 56 (optional_expr_pred)

    optional_expr_pred  go to state 280
    call_stmt           go to state 85
    in_built_call_stmt  go to state 86
    expr_pred           go to state 171


state 262

   97 img_decl: IMG ID '<' NUM_LIT ',' NUM_LIT ',' . NUM_LIT '>' new_lines

    NUM_LIT  shift, and go to state 281


state 263

   96 img_decl: IMG ID '<' NUM_LIT ',' NUM_LIT '>' . new_lines

    NEWLINE  shift, and go to state 1

    new_lines  go to state 282


state 264

  101 gray_img_decl: GRAY_IMG ID '<' NUM_LIT ',' NUM_LIT ',' . NUM_LIT '>' new_lines

    NUM_LIT  shift, and go to state 283


state 265

  100 gray_img_decl: GRAY_IMG ID '<' NUM_LIT ',' NUM_LIT '>' . new_lines

    NEWLINE  shift, and go to state 1

    new_lines  go to state 284


state 266

  105 vid_decl: VID ID '<' NUM_LIT ',' NUM_LIT ',' . NUM_LIT '>' new_lines

    NUM_LIT  shift, and go to state 285


state 267

  104 vid_decl: VID ID '<' NUM_LIT ',' NUM_LIT '>' . new_lines

    NEWLINE  shift, and go to state 1

    new_lines  go to state 286


state 268

  107 gray_vid_decl: GRAY_VID ID '<' NUM_LIT ',' NUM_LIT ',' . NUM_LIT '>' new_lines

    NUM_LIT  shift, and go to state 287


state 269

  106 gray_vid_decl: GRAY_VID ID '<' NUM_LIT ',' NUM_LIT '>' . new_lines

    NEWLINE  shift, and go to state 1

    new_lines  go to state 288


state 270

  141 expr_pred: expr_pred . REL_OP expr_pred
  142          | expr_pred . LOG_OP expr_pred
  148          | expr_pred . BINARY_OP expr_pred
  149          | expr_pred . UNARY_OP
  155 array_element: '[' expr_pred ',' expr_pred ',' expr_pred . ']'

    LOG_OP     shift, and go to state 123
    REL_OP     shift, and go to state 124
    BINARY_OP  shift, and go to state 125
    UNARY_OP   shift, and go to state 126
    ']'        shift, and go to state 289


state 271

  120 brak_pred: '{' brak_pred_list '}' .

    $default  reduce using rule 120 (brak_pred)


state 272

  122 brak_pred_list: brak_pred_list ',' . brak_pred

    '{'  shift, and go to state 215

    brak_pred  go to state 290


state 273

  121 brak_pred: '{' lit_list '}' .

    $default  reduce using rule 121 (brak_pred)


state 274

  124 lit_list: lit_list ',' . lit

    BOOL_LIT  shift, and go to state 243
    NUM_LIT   shift, and go to state 244
    REAL_LIT  shift, and go to state 245

    lit  go to state 291


state 275

   64 else_if_block_list: ELSE_IF '(' expr_pred ')' optional_new_lines . ARROW optional_new_lines func_body

    ARROW  shift, and go to state 292


state 276

   63 else_if_block_list: else_if_block_list optional_new_lines ELSE_IF '(' expr_pred . ')' optional_new_lines ARROW optional_new_lines func_body
  141 expr_pred: expr_pred . REL_OP expr_pred
  142          | expr_pred . LOG_OP expr_pred
  148          | expr_pred . BINARY_OP expr_pred
  149          | expr_pred . UNARY_OP

    LOG_OP     shift, and go to state 123
    REL_OP     shift, and go to state 124
    BINARY_OP  shift, and go to state 125
    UNARY_OP   shift, and go to state 126
    ')'        shift, and go to state 293


state 277

    5 new_lines: new_lines . NEWLINE
   66 conditional_stmt: if_block optional_new_lines else_if_block_list optional_new_lines else @1 new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 66 (conditional_stmt)


state 278

   61 if_block: IF optional_new_lines '(' expr_pred ')' optional_new_lines ARROW optional_new_lines . func_body

    '{'  shift, and go to state 35

    func_body  go to state 294


state 279

    5 new_lines: new_lines . NEWLINE
   42 loop_body: '{' new_lines . loop_stmt_list '}'

    IF        shift, and go to state 295
    RETURN    shift, and go to state 44
    CONTINUE  shift, and go to state 296
    BREAK     shift, and go to state 297
    LOOP      shift, and go to state 45
    IMG       shift, and go to state 46
    GRAY_IMG  shift, and go to state 47
    VID       shift, and go to state 48
    GRAY_VID  shift, and go to state 49
    NUM       shift, and go to state 50
    REAL      shift, and go to state 51
    BOOL      shift, and go to state 52
    NEWLINE   shift, and go to state 6
    ID        shift, and go to state 53
    '{'       shift, and go to state 298

    l_stmt                 go to state 299
    loop_stmt_list         go to state 300
    unary_stmt             go to state 301
    loop_stmt              go to state 302
    loop_if_block          go to state 303
    loop_conditional_stmt  go to state 304
    return_stmt            go to state 305
    decl_stmt              go to state 306
    img_decl               go to state 63
    gray_img_decl          go to state 64
    vid_decl               go to state 65
    gray_vid_decl          go to state 66
    num_decl               go to state 67
    bool_decl              go to state 68
    real_decl              go to state 69
    num_array_decl         go to state 70
    real_array_decl        go to state 71
    call_stmt              go to state 307
    in_built_call_stmt     go to state 308
    expr_stmt              go to state 309


state 280

   60 loop_stmt: LOOP optional_new_lines '(' optional_num_data_decl ';' optional_expr_pred ';' optional_expr_pred . ')' optional_new_lines loop_body

    ')'  shift, and go to state 310


state 281

   97 img_decl: IMG ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT . '>' new_lines

    '>'  shift, and go to state 311


state 282

    5 new_lines: new_lines . NEWLINE
   96 img_decl: IMG ID '<' NUM_LIT ',' NUM_LIT '>' new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 96 (img_decl)


state 283

  101 gray_img_decl: GRAY_IMG ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT . '>' new_lines

    '>'  shift, and go to state 312


state 284

    5 new_lines: new_lines . NEWLINE
  100 gray_img_decl: GRAY_IMG ID '<' NUM_LIT ',' NUM_LIT '>' new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 100 (gray_img_decl)


state 285

  105 vid_decl: VID ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT . '>' new_lines

    '>'  shift, and go to state 313


state 286

    5 new_lines: new_lines . NEWLINE
  104 vid_decl: VID ID '<' NUM_LIT ',' NUM_LIT '>' new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 104 (vid_decl)


state 287

  107 gray_vid_decl: GRAY_VID ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT . '>' new_lines

    '>'  shift, and go to state 314


state 288

    5 new_lines: new_lines . NEWLINE
  106 gray_vid_decl: GRAY_VID ID '<' NUM_LIT ',' NUM_LIT '>' new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 106 (gray_vid_decl)


state 289

  155 array_element: '[' expr_pred ',' expr_pred ',' expr_pred ']' .

    $default  reduce using rule 155 (array_element)


state 290

  122 brak_pred_list: brak_pred_list ',' brak_pred .

    $default  reduce using rule 122 (brak_pred_list)


state 291

  124 lit_list: lit_list ',' lit .

    $default  reduce using rule 124 (lit_list)


state 292

   64 else_if_block_list: ELSE_IF '(' expr_pred ')' optional_new_lines ARROW . optional_new_lines func_body

    NEWLINE  shift, and go to state 1

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 3
    optional_new_lines  go to state 315


state 293

   63 else_if_block_list: else_if_block_list optional_new_lines ELSE_IF '(' expr_pred ')' . optional_new_lines ARROW optional_new_lines func_body

    NEWLINE  shift, and go to state 1

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 3
    optional_new_lines  go to state 316


state 294

   61 if_block: IF optional_new_lines '(' expr_pred ')' optional_new_lines ARROW optional_new_lines func_body .

    $default  reduce using rule 61 (if_block)


state 295

   71 loop_if_block: IF . optional_new_lines '(' expr_pred ')' optional_new_lines ARROW optional_new_lines loop_body

    NEWLINE  shift, and go to state 1

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 3
    optional_new_lines  go to state 317


state 296

   39 l_stmt: CONTINUE . new_lines

    NEWLINE  shift, and go to state 1

    new_lines  go to state 318


state 297

   38 l_stmt: BREAK . new_lines

    NEWLINE  shift, and go to state 1

    new_lines  go to state 319


state 298

   34 l_stmt: '{' . new_lines loop_stmt_list '}' new_lines
   35       | '{' . new_lines '}' new_lines
   36       | '{' . '}' new_lines

    NEWLINE  shift, and go to state 1
    '}'      shift, and go to state 320

    new_lines  go to state 321


state 299

   40 loop_stmt_list: l_stmt .

    $default  reduce using rule 40 (loop_stmt_list)


state 300

   41 loop_stmt_list: loop_stmt_list . l_stmt
   42 loop_body: '{' new_lines loop_stmt_list . '}'

    IF        shift, and go to state 295
    RETURN    shift, and go to state 44
    CONTINUE  shift, and go to state 296
    BREAK     shift, and go to state 297
    LOOP      shift, and go to state 45
    IMG       shift, and go to state 46
    GRAY_IMG  shift, and go to state 47
    VID       shift, and go to state 48
    GRAY_VID  shift, and go to state 49
    NUM       shift, and go to state 50
    REAL      shift, and go to state 51
    BOOL      shift, and go to state 52
    ID        shift, and go to state 53
    '{'       shift, and go to state 298
    '}'       shift, and go to state 322

    l_stmt                 go to state 323
    unary_stmt             go to state 301
    loop_stmt              go to state 302
    loop_if_block          go to state 303
    loop_conditional_stmt  go to state 304
    return_stmt            go to state 305
    decl_stmt              go to state 306
    img_decl               go to state 63
    gray_img_decl          go to state 64
    vid_decl               go to state 65
    gray_vid_decl          go to state 66
    num_decl               go to state 67
    bool_decl              go to state 68
    real_decl              go to state 69
    num_array_decl         go to state 70
    real_array_decl        go to state 71
    call_stmt              go to state 307
    in_built_call_stmt     go to state 308
    expr_stmt              go to state 309


state 301

   37 l_stmt: unary_stmt .

    $default  reduce using rule 37 (l_stmt)


state 302

   33 l_stmt: loop_stmt . new_lines

    NEWLINE  shift, and go to state 1

    new_lines  go to state 324


state 303

   76 loop_conditional_stmt: loop_if_block . optional_new_lines loop_else_if_block_list optional_new_lines loop_else @3 new_lines
   77                      | loop_if_block . new_lines
   78                      | loop_if_block . optional_new_lines loop_else_if_block_list new_lines
   80                      | loop_if_block . optional_new_lines loop_else @4 new_lines

    NEWLINE  shift, and go to state 1

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 325
    optional_new_lines  go to state 326


state 304

   28 l_stmt: loop_conditional_stmt .

    $default  reduce using rule 28 (l_stmt)


state 305

   32 l_stmt: return_stmt .

    $default  reduce using rule 32 (l_stmt)


state 306

   27 l_stmt: decl_stmt .

    $default  reduce using rule 27 (l_stmt)


state 307

   29 l_stmt: call_stmt . new_lines

    NEWLINE  shift, and go to state 1

    new_lines  go to state 327


state 308

   30 l_stmt: in_built_call_stmt . new_lines
  135 in_built_call_stmt: in_built_call_stmt . DOT_OP ID '(' arg_list ')'
  136                   | in_built_call_stmt . DOT_OP ID '(' ')'

    DOT_OP   shift, and go to state 115
    NEWLINE  shift, and go to state 1

    new_lines  go to state 328


state 309

   31 l_stmt: expr_stmt .

    $default  reduce using rule 31 (l_stmt)


state 310

   60 loop_stmt: LOOP optional_new_lines '(' optional_num_data_decl ';' optional_expr_pred ';' optional_expr_pred ')' . optional_new_lines loop_body

    NEWLINE  shift, and go to state 1

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 3
    optional_new_lines  go to state 329


state 311

   97 img_decl: IMG ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' . new_lines

    NEWLINE  shift, and go to state 1

    new_lines  go to state 330


state 312

  101 gray_img_decl: GRAY_IMG ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' . new_lines

    NEWLINE  shift, and go to state 1

    new_lines  go to state 331


state 313

  105 vid_decl: VID ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' . new_lines

    NEWLINE  shift, and go to state 1

    new_lines  go to state 332


state 314

  107 gray_vid_decl: GRAY_VID ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' . new_lines

    NEWLINE  shift, and go to state 1

    new_lines  go to state 333


state 315

   64 else_if_block_list: ELSE_IF '(' expr_pred ')' optional_new_lines ARROW optional_new_lines . func_body

    '{'  shift, and go to state 35

    func_body  go to state 334


state 316

   63 else_if_block_list: else_if_block_list optional_new_lines ELSE_IF '(' expr_pred ')' optional_new_lines . ARROW optional_new_lines func_body

    ARROW  shift, and go to state 335


state 317

   71 loop_if_block: IF optional_new_lines . '(' expr_pred ')' optional_new_lines ARROW optional_new_lines loop_body

    '('  shift, and go to state 336


state 318

    5 new_lines: new_lines . NEWLINE
   39 l_stmt: CONTINUE new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 39 (l_stmt)


state 319

    5 new_lines: new_lines . NEWLINE
   38 l_stmt: BREAK new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 38 (l_stmt)


state 320

   36 l_stmt: '{' '}' . new_lines

    NEWLINE  shift, and go to state 1

    new_lines  go to state 337


state 321

    5 new_lines: new_lines . NEWLINE
   34 l_stmt: '{' new_lines . loop_stmt_list '}' new_lines
   35       | '{' new_lines . '}' new_lines

    IF        shift, and go to state 295
    RETURN    shift, and go to state 44
    CONTINUE  shift, and go to state 296
    BREAK     shift, and go to state 297
    LOOP      shift, and go to state 45
    IMG       shift, and go to state 46
    GRAY_IMG  shift, and go to state 47
    VID       shift, and go to state 48
    GRAY_VID  shift, and go to state 49
    NUM       shift, and go to state 50
    REAL      shift, and go to state 51
    BOOL      shift, and go to state 52
    NEWLINE   shift, and go to state 6
    ID        shift, and go to state 53
    '{'       shift, and go to state 298
    '}'       shift, and go to state 338

    l_stmt                 go to state 299
    loop_stmt_list         go to state 339
    unary_stmt             go to state 301
    loop_stmt              go to state 302
    loop_if_block          go to state 303
    loop_conditional_stmt  go to state 304
    return_stmt            go to state 305
    decl_stmt              go to state 306
    img_decl               go to state 63
    gray_img_decl          go to state 64
    vid_decl               go to state 65
    gray_vid_decl          go to state 66
    num_decl               go to state 67
    bool_decl              go to state 68
    real_decl              go to state 69
    num_array_decl         go to state 70
    real_array_decl        go to state 71
    call_stmt              go to state 307
    in_built_call_stmt     go to state 308
    expr_stmt              go to state 309


state 322

   42 loop_body: '{' new_lines loop_stmt_list '}' .

    $default  reduce using rule 42 (loop_body)


state 323

   41 loop_stmt_list: loop_stmt_list l_stmt .

    $default  reduce using rule 41 (loop_stmt_list)


state 324

    5 new_lines: new_lines . NEWLINE
   33 l_stmt: loop_stmt new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 33 (l_stmt)


state 325

    5 new_lines: new_lines . NEWLINE
    8 optional_new_lines: new_lines .
   77 loop_conditional_stmt: loop_if_block new_lines .

    NEWLINE  shift, and go to state 6

    ELSE_IF   reduce using rule 8 (optional_new_lines)
    ARROW     reduce using rule 8 (optional_new_lines)
    $default  reduce using rule 77 (loop_conditional_stmt)


state 326

   76 loop_conditional_stmt: loop_if_block optional_new_lines . loop_else_if_block_list optional_new_lines loop_else @3 new_lines
   78                      | loop_if_block optional_new_lines . loop_else_if_block_list new_lines
   80                      | loop_if_block optional_new_lines . loop_else @4 new_lines

    ELSE_IF  shift, and go to state 340
    ARROW    shift, and go to state 341

    loop_else                go to state 342
    loop_else_if_block_list  go to state 343


state 327

    5 new_lines: new_lines . NEWLINE
   29 l_stmt: call_stmt new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 29 (l_stmt)


state 328

    5 new_lines: new_lines . NEWLINE
   30 l_stmt: in_built_call_stmt new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 30 (l_stmt)


state 329

   60 loop_stmt: LOOP optional_new_lines '(' optional_num_data_decl ';' optional_expr_pred ';' optional_expr_pred ')' optional_new_lines . loop_body

    '{'  shift, and go to state 259

    loop_body  go to state 344


state 330

    5 new_lines: new_lines . NEWLINE
   97 img_decl: IMG ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 97 (img_decl)


state 331

    5 new_lines: new_lines . NEWLINE
  101 gray_img_decl: GRAY_IMG ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 101 (gray_img_decl)


state 332

    5 new_lines: new_lines . NEWLINE
  105 vid_decl: VID ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 105 (vid_decl)


state 333

    5 new_lines: new_lines . NEWLINE
  107 gray_vid_decl: GRAY_VID ID '<' NUM_LIT ',' NUM_LIT ',' NUM_LIT '>' new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 107 (gray_vid_decl)


state 334

   64 else_if_block_list: ELSE_IF '(' expr_pred ')' optional_new_lines ARROW optional_new_lines func_body .

    $default  reduce using rule 64 (else_if_block_list)


state 335

   63 else_if_block_list: else_if_block_list optional_new_lines ELSE_IF '(' expr_pred ')' optional_new_lines ARROW . optional_new_lines func_body

    NEWLINE  shift, and go to state 1

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 3
    optional_new_lines  go to state 345


state 336

   71 loop_if_block: IF optional_new_lines '(' . expr_pred ')' optional_new_lines ARROW optional_new_lines loop_body

    NEG_OP    shift, and go to state 77
    BOOL_LIT  shift, and go to state 79
    ID        shift, and go to state 80
    NUM_LIT   shift, and go to state 81
    REAL_LIT  shift, and go to state 82
    INV_OP    shift, and go to state 83
    '('       shift, and go to state 84

    call_stmt           go to state 85
    in_built_call_stmt  go to state 86
    expr_pred           go to state 346


state 337

    5 new_lines: new_lines . NEWLINE
   36 l_stmt: '{' '}' new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 36 (l_stmt)


state 338

   35 l_stmt: '{' new_lines '}' . new_lines

    NEWLINE  shift, and go to state 1

    new_lines  go to state 347


state 339

   34 l_stmt: '{' new_lines loop_stmt_list . '}' new_lines
   41 loop_stmt_list: loop_stmt_list . l_stmt

    IF        shift, and go to state 295
    RETURN    shift, and go to state 44
    CONTINUE  shift, and go to state 296
    BREAK     shift, and go to state 297
    LOOP      shift, and go to state 45
    IMG       shift, and go to state 46
    GRAY_IMG  shift, and go to state 47
    VID       shift, and go to state 48
    GRAY_VID  shift, and go to state 49
    NUM       shift, and go to state 50
    REAL      shift, and go to state 51
    BOOL      shift, and go to state 52
    ID        shift, and go to state 53
    '{'       shift, and go to state 298
    '}'       shift, and go to state 348

    l_stmt                 go to state 323
    unary_stmt             go to state 301
    loop_stmt              go to state 302
    loop_if_block          go to state 303
    loop_conditional_stmt  go to state 304
    return_stmt            go to state 305
    decl_stmt              go to state 306
    img_decl               go to state 63
    gray_img_decl          go to state 64
    vid_decl               go to state 65
    gray_vid_decl          go to state 66
    num_decl               go to state 67
    bool_decl              go to state 68
    real_decl              go to state 69
    num_array_decl         go to state 70
    real_array_decl        go to state 71
    call_stmt              go to state 307
    in_built_call_stmt     go to state 308
    expr_stmt              go to state 309


state 340

   74 loop_else_if_block_list: ELSE_IF . '(' expr_pred ')' optional_new_lines ARROW optional_new_lines loop_body

    '('  shift, and go to state 349


state 341

   72 loop_else: ARROW . optional_new_lines loop_body

    NEWLINE  shift, and go to state 1

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 3
    optional_new_lines  go to state 350


state 342

   80 loop_conditional_stmt: loop_if_block optional_new_lines loop_else . @4 new_lines

    $default  reduce using rule 79 (@4)

    @4  go to state 351


state 343

   73 loop_else_if_block_list: loop_else_if_block_list . optional_new_lines ELSE_IF '(' expr_pred ')' optional_new_lines ARROW optional_new_lines loop_body
   76 loop_conditional_stmt: loop_if_block optional_new_lines loop_else_if_block_list . optional_new_lines loop_else @3 new_lines
   78                      | loop_if_block optional_new_lines loop_else_if_block_list . new_lines

    NEWLINE  shift, and go to state 1

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 352
    optional_new_lines  go to state 353


state 344

   60 loop_stmt: LOOP optional_new_lines '(' optional_num_data_decl ';' optional_expr_pred ';' optional_expr_pred ')' optional_new_lines loop_body .

    $default  reduce using rule 60 (loop_stmt)


state 345

   63 else_if_block_list: else_if_block_list optional_new_lines ELSE_IF '(' expr_pred ')' optional_new_lines ARROW optional_new_lines . func_body

    '{'  shift, and go to state 35

    func_body  go to state 354


state 346

   71 loop_if_block: IF optional_new_lines '(' expr_pred . ')' optional_new_lines ARROW optional_new_lines loop_body
  141 expr_pred: expr_pred . REL_OP expr_pred
  142          | expr_pred . LOG_OP expr_pred
  148          | expr_pred . BINARY_OP expr_pred
  149          | expr_pred . UNARY_OP

    LOG_OP     shift, and go to state 123
    REL_OP     shift, and go to state 124
    BINARY_OP  shift, and go to state 125
    UNARY_OP   shift, and go to state 126
    ')'        shift, and go to state 355


state 347

    5 new_lines: new_lines . NEWLINE
   35 l_stmt: '{' new_lines '}' new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 35 (l_stmt)


state 348

   34 l_stmt: '{' new_lines loop_stmt_list '}' . new_lines

    NEWLINE  shift, and go to state 1

    new_lines  go to state 356


state 349

   74 loop_else_if_block_list: ELSE_IF '(' . expr_pred ')' optional_new_lines ARROW optional_new_lines loop_body

    NEG_OP    shift, and go to state 77
    BOOL_LIT  shift, and go to state 79
    ID        shift, and go to state 80
    NUM_LIT   shift, and go to state 81
    REAL_LIT  shift, and go to state 82
    INV_OP    shift, and go to state 83
    '('       shift, and go to state 84

    call_stmt           go to state 85
    in_built_call_stmt  go to state 86
    expr_pred           go to state 357


state 350

   72 loop_else: ARROW optional_new_lines . loop_body

    '{'  shift, and go to state 259

    loop_body  go to state 358


state 351

   80 loop_conditional_stmt: loop_if_block optional_new_lines loop_else @4 . new_lines

    NEWLINE  shift, and go to state 1

    new_lines  go to state 359


state 352

    5 new_lines: new_lines . NEWLINE
    8 optional_new_lines: new_lines .
   78 loop_conditional_stmt: loop_if_block optional_new_lines loop_else_if_block_list new_lines .

    NEWLINE  shift, and go to state 6

    ELSE_IF   reduce using rule 8 (optional_new_lines)
    ARROW     reduce using rule 8 (optional_new_lines)
    $default  reduce using rule 78 (loop_conditional_stmt)


state 353

   73 loop_else_if_block_list: loop_else_if_block_list optional_new_lines . ELSE_IF '(' expr_pred ')' optional_new_lines ARROW optional_new_lines loop_body
   76 loop_conditional_stmt: loop_if_block optional_new_lines loop_else_if_block_list optional_new_lines . loop_else @3 new_lines

    ELSE_IF  shift, and go to state 360
    ARROW    shift, and go to state 341

    loop_else  go to state 361


state 354

   63 else_if_block_list: else_if_block_list optional_new_lines ELSE_IF '(' expr_pred ')' optional_new_lines ARROW optional_new_lines func_body .

    $default  reduce using rule 63 (else_if_block_list)


state 355

   71 loop_if_block: IF optional_new_lines '(' expr_pred ')' . optional_new_lines ARROW optional_new_lines loop_body

    NEWLINE  shift, and go to state 1

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 3
    optional_new_lines  go to state 362


state 356

    5 new_lines: new_lines . NEWLINE
   34 l_stmt: '{' new_lines loop_stmt_list '}' new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 34 (l_stmt)


state 357

   74 loop_else_if_block_list: ELSE_IF '(' expr_pred . ')' optional_new_lines ARROW optional_new_lines loop_body
  141 expr_pred: expr_pred . REL_OP expr_pred
  142          | expr_pred . LOG_OP expr_pred
  148          | expr_pred . BINARY_OP expr_pred
  149          | expr_pred . UNARY_OP

    LOG_OP     shift, and go to state 123
    REL_OP     shift, and go to state 124
    BINARY_OP  shift, and go to state 125
    UNARY_OP   shift, and go to state 126
    ')'        shift, and go to state 363


state 358

   72 loop_else: ARROW optional_new_lines loop_body .

    $default  reduce using rule 72 (loop_else)


state 359

    5 new_lines: new_lines . NEWLINE
   80 loop_conditional_stmt: loop_if_block optional_new_lines loop_else @4 new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 80 (loop_conditional_stmt)


state 360

   73 loop_else_if_block_list: loop_else_if_block_list optional_new_lines ELSE_IF . '(' expr_pred ')' optional_new_lines ARROW optional_new_lines loop_body

    '('  shift, and go to state 364


state 361

   76 loop_conditional_stmt: loop_if_block optional_new_lines loop_else_if_block_list optional_new_lines loop_else . @3 new_lines

    $default  reduce using rule 75 (@3)

    @3  go to state 365


state 362

   71 loop_if_block: IF optional_new_lines '(' expr_pred ')' optional_new_lines . ARROW optional_new_lines loop_body

    ARROW  shift, and go to state 366


state 363

   74 loop_else_if_block_list: ELSE_IF '(' expr_pred ')' . optional_new_lines ARROW optional_new_lines loop_body

    NEWLINE  shift, and go to state 1

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 3
    optional_new_lines  go to state 367


state 364

   73 loop_else_if_block_list: loop_else_if_block_list optional_new_lines ELSE_IF '(' . expr_pred ')' optional_new_lines ARROW optional_new_lines loop_body

    NEG_OP    shift, and go to state 77
    BOOL_LIT  shift, and go to state 79
    ID        shift, and go to state 80
    NUM_LIT   shift, and go to state 81
    REAL_LIT  shift, and go to state 82
    INV_OP    shift, and go to state 83
    '('       shift, and go to state 84

    call_stmt           go to state 85
    in_built_call_stmt  go to state 86
    expr_pred           go to state 368


state 365

   76 loop_conditional_stmt: loop_if_block optional_new_lines loop_else_if_block_list optional_new_lines loop_else @3 . new_lines

    NEWLINE  shift, and go to state 1

    new_lines  go to state 369


state 366

   71 loop_if_block: IF optional_new_lines '(' expr_pred ')' optional_new_lines ARROW . optional_new_lines loop_body

    NEWLINE  shift, and go to state 1

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 3
    optional_new_lines  go to state 370


state 367

   74 loop_else_if_block_list: ELSE_IF '(' expr_pred ')' optional_new_lines . ARROW optional_new_lines loop_body

    ARROW  shift, and go to state 371


state 368

   73 loop_else_if_block_list: loop_else_if_block_list optional_new_lines ELSE_IF '(' expr_pred . ')' optional_new_lines ARROW optional_new_lines loop_body
  141 expr_pred: expr_pred . REL_OP expr_pred
  142          | expr_pred . LOG_OP expr_pred
  148          | expr_pred . BINARY_OP expr_pred
  149          | expr_pred . UNARY_OP

    LOG_OP     shift, and go to state 123
    REL_OP     shift, and go to state 124
    BINARY_OP  shift, and go to state 125
    UNARY_OP   shift, and go to state 126
    ')'        shift, and go to state 372


state 369

    5 new_lines: new_lines . NEWLINE
   76 loop_conditional_stmt: loop_if_block optional_new_lines loop_else_if_block_list optional_new_lines loop_else @3 new_lines .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 76 (loop_conditional_stmt)


state 370

   71 loop_if_block: IF optional_new_lines '(' expr_pred ')' optional_new_lines ARROW optional_new_lines . loop_body

    '{'  shift, and go to state 259

    loop_body  go to state 373


state 371

   74 loop_else_if_block_list: ELSE_IF '(' expr_pred ')' optional_new_lines ARROW . optional_new_lines loop_body

    NEWLINE  shift, and go to state 1

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 3
    optional_new_lines  go to state 374


state 372

   73 loop_else_if_block_list: loop_else_if_block_list optional_new_lines ELSE_IF '(' expr_pred ')' . optional_new_lines ARROW optional_new_lines loop_body

    NEWLINE  shift, and go to state 1

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 3
    optional_new_lines  go to state 375


state 373

   71 loop_if_block: IF optional_new_lines '(' expr_pred ')' optional_new_lines ARROW optional_new_lines loop_body .

    $default  reduce using rule 71 (loop_if_block)


state 374

   74 loop_else_if_block_list: ELSE_IF '(' expr_pred ')' optional_new_lines ARROW optional_new_lines . loop_body

    '{'  shift, and go to state 259

    loop_body  go to state 376


state 375

   73 loop_else_if_block_list: loop_else_if_block_list optional_new_lines ELSE_IF '(' expr_pred ')' optional_new_lines . ARROW optional_new_lines loop_body

    ARROW  shift, and go to state 377


state 376

   74 loop_else_if_block_list: ELSE_IF '(' expr_pred ')' optional_new_lines ARROW optional_new_lines loop_body .

    $default  reduce using rule 74 (loop_else_if_block_list)


state 377

   73 loop_else_if_block_list: loop_else_if_block_list optional_new_lines ELSE_IF '(' expr_pred ')' optional_new_lines ARROW . optional_new_lines loop_body

    NEWLINE  shift, and go to state 1

    $default  reduce using rule 7 (optional_new_lines)

    new_lines           go to state 3
    optional_new_lines  go to state 378


state 378

   73 loop_else_if_block_list: loop_else_if_block_list optional_new_lines ELSE_IF '(' expr_pred ')' optional_new_lines ARROW optional_new_lines . loop_body

    '{'  shift, and go to state 259

    loop_body  go to state 379


state 379

   73 loop_else_if_block_list: loop_else_if_block_list optional_new_lines ELSE_IF '(' expr_pred ')' optional_new_lines ARROW optional_new_lines loop_body .

    $default  reduce using rule 73 (loop_else_if_block_list)
